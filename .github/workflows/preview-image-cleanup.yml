name: Preview Image Cleanup

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 5 * * *'

permissions:
  packages: write

jobs:
  preview-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const pullRequests = await github.paginate(
              github.rest.pulls.list.endpoint.merge({ owner, repo, state: 'all' })
            );
            const twoWeeksAgo = new Date(Date.now() - (14 * 24 * 60 * 60 * 1000));
            const olderThanTwoWeeks = (date) => new Date(date) < twoWeeksAgo;
            const isExpiredPrTag = (version) => {
              const previewTag = version.metadata?.container?.tags?.find((t) => t.startsWith('preview-pr'));
              const prNumber = +previewTag?.split('preview-pr')[1];
              const pr = pullRequests.find((p) => p.number === prNumber);
              return !!prNumber && pr.state === 'closed' && olderThanTwoWeeks(pr.closed_at);
            };

            const params = {
              package_type: 'container',
              package_name: `${repo}/storybook-preview`,
              username: owner
            };
            const { data: versions } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByUser(params);
            for (const version of versions.filter(isExpiredPrTag)) {
              try {
                await github.rest.packages.deletePackageVersionForUser({ ...params, package_version_id: version.id });
                console.log(`Deleted ${version.name} (${version.metadata.container.tags.join(', ')})`);
              } catch(e) {
                console.error(`Failed to delete ${version.name} (${version.metadata.container.tags.join(', ')})`);
              }
            }
      - uses: actions/delete-package-versions@v4
        with:
          package-name: 'lyne-components/storybook-preview'
          package-type: 'container'
          delete-only-untagged-versions: 'true'
