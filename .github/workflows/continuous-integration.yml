name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: read-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --non-interactive

      - name: Run eslint
        run: yarn lint

  integrity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --non-interactive

      - name: 'Integrity: Verify workspace integrity'
        run: yarn integrity
      - name: 'Integrity: Assert no changes (run `yarn integrity` if this fails)'
        run: git diff --exit-code

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --non-interactive

      - name: Run tests
        run: yarn test
        env:
          NODE_ENV: production
      - name: Store coverage
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
      - name: Save PR number
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - name: Store PR number
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: pr
          path: pr/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - uses: ./.github/actions/swap-memory
      - run: yarn install --frozen-lockfile --non-interactive

      - name: Run build
        run: yarn build
        env:
          STORYBOOK_COMPONENTS_VERSION: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Store build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            dist/
      - name: Store storybook artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybook
          path: storybook-static/

  chromatic:
    runs-on: ubuntu-latest
    # Temporarily disable chromatic tests until we have most components migrated
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false && 'tmp' == 'disabled'
    needs: [build, lint, test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --non-interactive
      - name: Restore build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .
      - name: Run build
        run: yarn build:chromatic-stories && yarn build:storybook
      - name: Publish to Chromatic
        id: chromatic-publish
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_TOKEN }}
          storybookBuildDir: storybook-static
          exitOnceUploaded: true
          exitZeroOnChanges: true
