name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  reset-chromatic-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      check_run_id: ${{ steps.create_check.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: create_check
        with:
          result-encoding: string
          script: |
            const check = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Chromatic check',
              head_sha: context.payload.pull_request.head.sha
            });
            return check.data.id;

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Yarn Install
        uses: ./.github/actions/yarn-install

      - name: Run eslint
        run: yarn lint

  integrity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Yarn Install
        uses: ./.github/actions/yarn-install

      - name: 'Integrity: Verify workspace integrity'
        run: yarn integrity
      - name: 'Integrity: Assert no changes (run `yarn integrity` if this fails)'
        run: git diff --exit-code

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Yarn Install
        uses: ./.github/actions/yarn-install

      - name: Run tests
        # Try yarn test:prod up to three times, if it fails and exit with the exit code from the last execution
        run: for i in $(seq 1 3); do [ $i -gt 1 ] && sleep 5; yarn test:prod && s=0 && break || s=$?; done; (exit $s)
      - name: Store coverage
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
      - name: Save PR number
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - name: Store PR number
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: pr
          path: pr/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Yarn Install
        uses: ./.github/actions/yarn-install

      - name: Run build
        run: STORYBOOK_COMPONENTS_VERSION=$(date --iso-8601=minutes) yarn build
      - name: Store stencil artifacts
        uses: actions/upload-artifact@v3
        with:
          name: stencil
          path: |
            dist/
            hydrate/
            loader/
            react-library/dist/
      - name: Store storybook artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybook
          path: storybook-static/

  chromatic:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [reset-chromatic-check, build, lint, test]
    steps:
      - uses: actions/github-script@v6
        id: create_check
        env:
          check_run_id: ${{ needs.reset-chromatic-check.outputs.check_run_id }}
        with:
          result-encoding: string
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: process.env.check_run_id,
              actions: [{
                label: 'Compare',
                description: 'Compare current build against base state.'
              }],
            });
