name: Release
# Secure execution of continuous integration jobs
# which are performed upon completion of the
# "Continuous Integration" workflow
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
on:
  workflow_run:
    workflows: ['Continuous Integration']
    types: [completed]
    branches: [master]

jobs:
  release:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.conclusion == 'success' &&
      (
        startsWith(github.event.workflow_run.head_commit.message, 'feat') ||
        startsWith(github.event.workflow_run.head_commit.message, 'fix') ||
        startsWith(github.event.workflow_run.head_commit.message, 'refactor')
      )
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
          scope: sbb-esta
      - name: Yarn Install
        uses: ./.github/actions/yarn-install
      - name: Download artifacts
        uses: ./.github/actions/download-artifacts-from-workflow
        with:
          artifacts: stencil
      - run: unzip stencil.zip

      - name: Bundle stories
        run: node ./ci/bundleStories.js

      - name: 'Release: Set git user'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      - name: 'Release: Create release with standard-version'
        run: |
          if [ -f CHANGELOG.md ]; then
            yarn standard-version
          else
            yarn standard-version --first-release
          fi
      - name: 'Release: Push release to repository'
        run: git push --follow-tags origin master
      - name: 'Release: Determine npm tag'
        id: npm_tag
        run: |
          if [[ "$REF" == *"-"* ]]
          then
              echo "::set-output name=npm_tag::next"
          else
              echo "::set-output name=npm_tag::latest"
          fi
        env:
          REF: ${{ github.ref }}
      - name: 'Release: Publish @sbb-esta/lyne-components'
        run: yarn publish --tag ${{ steps.npm_tag.outputs.npm_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create versioned storybook
        run: STORYBOOK_COMPONENTS_VERSION=$(cat package.json | jq --raw-output '.version') npm run build:storybook
        # Send storybook to chromatic. These snapshots should be accepted as new
        # baseline in storybook.
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_TOKEN }}
          storybookBuildDir: storybook-static
          autoAcceptChanges: true
          exitZeroOnChanges: true

      - name: Install netlify CLI
        run: yarn global add netlify-cli
      - name: Publish to netlify
        run: ./ci/netlify_deploy.sh
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      - name: Publish deployments to netlify
        run: ./ci/deployments.sh
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_SITE_ID_DEPLOYMENTS: ${{ secrets.NETLIFY_SITE_ID_DEPLOYMENTS }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
# TODO: Trigger lyne-documentation build (node ./ci/trigger_lyne_documentation.js)
# TODO: Trigger lyne-examples build (node ./ci/trigger_lyne_examples.js)
