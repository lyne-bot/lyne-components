@use '../../core/styles/index' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-chip-border-color: var(--sbb-color-cloud);
  --sbb-chip-border-radius: var(--sbb-border-radius-2x);
  --sbb-chip-background-color: var(--sbb-color-milk);
  --sbb-chip-color: var(--sbb-color-granite);

  display: inline-block;
}

.sbb-chip {
  background-color: var(--sbb-chip-background-color);
  border: var(--sbb-border-width-1x) solid var(--sbb-chip-border-color);
  border-radius: var(--sbb-chip-border-radius);
  color: var(--sbb-chip-color);
  display: flex;
  align-items: center;

  &:has(.sbb-chip__label:focus-visible) {
    @include sbb.focus-outline;
  }
}

.sbb-chip__label {
  @include sbb.text-xxs--regular;

  padding-inline: var(--sbb-spacing-fixed-2x);
  outline: none;
}

.sbb-chip__delete {
  --sbb-button-border-radius: var(--sbb-chip-border-radius);
  --sbb-button-color-active-background: var(--sbb-color-white);
  --sbb-button-color-hover-background: var(--sbb-color-white);
  --sbb-icon-svg-width: var(--sbb-size-icon-ui-small);
  --sbb-icon-svg-height: var(--sbb-size-icon-ui-small);

  border-left: var(--sbb-border-width-1x) solid var(--sbb-chip-border-color);

  :host(:is([data-disabled], [data-readonly])) & {
    display: none;
  }
}
