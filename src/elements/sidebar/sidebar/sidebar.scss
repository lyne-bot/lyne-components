@use '../../core/styles/index' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  display: block;
  width: #{sbb.px-to-rem-build(320)};

  --sbb-sidebar-background-color: var(--sbb-color-white);
  --sbb-sidebar-title-padding-block: var(--sbb-spacing-fixed-3x);
  --sbb-sidebar-padding-inline: var(--sbb-spacing-responsive-xs);
  --sbb-sidebar-border-radius-start: var(--sbb-border-radius-8x);
  --sbb-sidebar-border-radius-end: 0;
  --sbb-sidebar-margin: 0;
  --sbb-sidebar-margin-block-start: var(--sbb-spacing-fixed-3x);
  --sbb-sidebar-translate-x: -100%;
  --sbb-sidebar-z-index: 2;
}

:host([color='milk']) {
  --sbb-sidebar-background-color: var(--sbb-color-milk);
}

:host([mode='over']) {
  --sbb-sidebar-margin: var(--sbb-spacing-fixed-3x);
  --sbb-sidebar-border-radius-end: var(--sbb-sidebar-border-radius-start);
  --sbb-sidebar-z-index: 3;
}

:host(:is(:dir(rtl), [position='end'])) {
  --sbb-sidebar-translate-x: 100%;
}

:host(:dir(rtl)[position='end']) {
  --sbb-sidebar-translate-x: -100%;
}

.sbb-sidebar {
  @include sbb.scrollbar;

  & {
    width: inherit;
    max-width: 100%;
    background-color: var(--sbb-sidebar-background-color);
    display: block;
    position: absolute;
    inset-block: 0;
    padding-inline: var(--sbb-sidebar-padding-inline);
    z-index: var(--sbb-sidebar-z-index);
    overflow-y: auto;
    transition: width var(--sbb-sidebar-container-animation-duration)
      var(--sbb-sidebar-container-animation-easing);
    border-start-start-radius: var(--sbb-sidebar-border-radius-start);
    border-start-end-radius: var(--sbb-sidebar-border-radius-start);
    border-end-start-radius: var(--sbb-sidebar-border-radius-end);
    border-end-end-radius: var(--sbb-sidebar-border-radius-end);
    margin: var(--sbb-sidebar-margin);
    margin-block-start: var(--sbb-sidebar-margin-block-start);
    animation-duration: var(--sbb-sidebar-container-animation-duration);
    animation-timing-function: var(--sbb-sidebar-container-animation-easing);
  }

  :host([position='end']) & {
    inset-inline-end: 0;
  }

  :host([data-state='closed']) & {
    // Stops the sidenav from poking out (e.g. with the box shadow) while it's off-screen.
    // We can't use `display` because it interrupts the transition and `transition-behavior`
    // isn't available in all browsers.
    // visibility: hidden;
    display: none;
  }

  :host([data-state='opening']) & {
    animation-name: open;
  }

  :host([data-state='closing']) & {
    animation-name: close;
  }

  :host([data-state='opened']) & {
    translate: none;
  }
}

.sbb-sidebar-title-section {
  position: sticky;
  inset-block-start: 0;
  margin-inline: calc(-1 * var(--sbb-sidebar-padding-inline));
  background-color: var(--sbb-sidebar-background-color);
  padding-inline: var(--sbb-sidebar-padding-inline);
  transition: box-shadow var(--sbb-animation-easing) var(--sbb-sidebar-container-animation-duration);
  box-shadow: none;

  :host([data-sticking]) & {
    @include sbb.shadow-level-5-soft;
  }
}

@keyframes open {
  from {
    translate: var(--sbb-sidebar-translate-x) 0;
  }

  to {
    translate: none;
  }
}

@keyframes close {
  from {
    translate: none;
  }

  to {
    translate: var(--sbb-sidebar-translate-x) 0;
  }
}
