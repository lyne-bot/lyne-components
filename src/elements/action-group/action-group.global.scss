@use '../core/styles' as sbb;
@use 'sass:map';

@mixin theme($theme) {
  --sbb-action-group-horizontal-gap: #{map.get($theme, sbb-action-group-horizontal-gap) or
    var(--sbb-spacing-fixed-4x)};
  --sbb-action-group-vertical-gap: #{map.get($theme, sbb-action-group-vertical-gap) or
    var(--sbb-spacing-fixed-2x)};
}

@mixin rules {
  sbb-action-group {
    --sbb-action-group__orientation: row;
    --sbb-action-group__align-items: center;
    --sbb-action-group__gap: var(--sbb-action-group-horizontal-gap);
  }

  sbb-action-group[orientation='vertical'] {
    --sbb-action-group__orientation: column;
    --sbb-action-group__gap: var(--sbb-action-group-vertical-gap);
  }

  $breakpoints: 'zero', 'micro', 'small', 'medium', 'large', 'wide', 'ultra';
  $vertical-orientations: (
    start: flex-start,
    center: center,
    stretch: stretch,
    end: flex-end,
  );
  $horizontal-orientations: (
    start: flex-start,
    center: center,
    stretch: space-between,
    end: flex-end,
  );

  @each $key, $value in $horizontal-orientations {
    sbb-action-group[orientation='horizontal'][align-group='#{$key}'] {
      --sbb-action-group__justify-content: #{$value};
    }
  }

  @each $key, $value in $vertical-orientations {
    sbb-action-group[orientation='vertical'][align-group='#{$key}'] {
      --sbb-action-group__align-items: #{$value};
    }
  }

  @each $breakpoint in $breakpoints {
    @include sbb.mq($from: #{$breakpoint}) {
      @each $key, $value in $horizontal-orientations {
        // horizontal-from overrides orientation vertical
        sbb-action-group[orientation='vertical'][horizontal-from='#{$breakpoint}'][align-group='#{$key}'] {
          --sbb-action-group__orientation: row;
          --sbb-action-group__align-items: center;
          --sbb-action-group__justify-content: #{$value};
          --sbb-action-group__gap: var(--sbb-action-group-horizontal-gap);
        }
      }
    }
  }

  sbb-action-group > [align-self='start'] {
    margin-inline-end: auto;
  }

  sbb-action-group > [align-self='center'] {
    margin-inline: auto;
  }

  sbb-action-group > [align-self='end'] {
    margin-inline-start: auto;
  }

  sbb-action-group > :is(sbb-block-link, sbb-block-link-button, sbb-block-link-static) {
    white-space: nowrap;
  }
}
