@use '../../core/styles' as sbb;

:host {
  display: inline-block;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;
}

.sbb-checkbox__aligner,
.sbb-checkbox__label--icon {
  display: flex;
  align-items: center;
  height: calc(1em * var(--sbb-typo-line-height-body-text));
}

.sbb-checkbox__label--icon {
  color: var(--sbb-checkbox-label-icon-color);

  :host([icon-placement='end']) & {
    margin-inline-start: auto;
  }

  :host(
    /** No icon */
    :not([icon-name], [data-slot-names~="icon"])) & {
    display: none;
  }
}

.sbb-checkbox-wrapper {
  // Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    @include sbb.focus-outline;

    border-radius: calc(var(--sbb-border-radius-4x) - var(--sbb-focus-outline-offset));
  }
}

.sbb-checkbox {
  @include sbb.text-s--regular;

  :host([size='m']) & {
    @include sbb.text-m--regular;
  }
}

.sbb-checkbox__label {
  display: flex;
  gap: var(--sbb-checkbox-label-gap);
  line-height: max(1em * var(--sbb-typo-line-height-body-text), var(--sbb-checkbox-dimension));

  :host([icon-placement='start']) & {
    flex-direction: row-reverse;
    justify-content: flex-end;
  }

  :host([icon-placement='end']) & {
    justify-content: flex-start;
    flex-grow: 1;
  }
}
