@use './a11y';
@use '../core/mediaqueries';
@use '../core/functions';
@use './typo';

// ----------------------------------------------------------------------------------------------------
// Button Mixins
// ----------------------------------------------------------------------------------------------------

@mixin button-reset {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  margin: 0;
  outline: none;
  border: none;
  border-radius: 0;
  padding: 0;
  background: none;
  -webkit-tap-highlight-color: transparent;
  color: inherit;
}

@mixin button-variables {
  --sbb-button-color-disabled-background: var(--sbb-color-milk);
  --sbb-button-color-disabled-border: var(--sbb-color-smoke);
  --sbb-button-color-disabled-text: var(--sbb-color-granite);
  --sbb-button-shadow-1-offset-y: var(--sbb-shadow-elevation-level-3-shadow-1-offset-y);
  --sbb-button-shadow-2-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
  --sbb-button-shadow-1-blur: var(--sbb-shadow-elevation-level-3-shadow-1-blur);
  --sbb-button-shadow-2-blur: var(--sbb-shadow-elevation-level-3-shadow-2-blur);
  --sbb-button-shadow-1-color: var(--sbb-color-red-alpha-20);
  --sbb-button-shadow-2-color: var(--sbb-color-red125-alpha-20);
  --sbb-button-box-shadow: transparent;
  --sbb-button-box-shadow-definition: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x)
      var(--sbb-button-shadow-2-offset-y) var(--sbb-button-shadow-2-blur)
      var(--sbb-shadow-elevation-level-3-shadow-2-spread) var(--sbb-button-shadow-2-color),
    var(--sbb-shadow-elevation-level-3-shadow-1-offset-x) var(--sbb-button-shadow-1-offset-y)
      var(--sbb-button-shadow-1-blur) var(--sbb-shadow-elevation-level-3-shadow-1-spread)
      var(--sbb-button-shadow-1-color);
  --sbb-button-border-style: solid;
  --sbb-button-border-disabled-style: dashed;
  --sbb-button-border-width: var(--sbb-border-width-2x);
  --sbb-button-border-disabled-width: var(--sbb-border-width-1x);
  --sbb-button-border-radius: var(--sbb-border-radius-infinity);
  --sbb-button-min-height: var(--sbb-size-element-m);
  --sbb-button-padding-block-min: var(--sbb-spacing-fixed-1x);
  --sbb-button-padding-inline: var(--sbb-spacing-fixed-8x);
  --sbb-button-inset: 0;
  --sbb-button-transition-duration: var(
    --sbb-disable-animation-zero-time,
    var(--sbb-animation-duration-2x)
  );
  --sbb-button-transition-easing-function: var(--sbb-animation-easing);

  // breaks scss rules
  @include mediaqueries.mq($from: medium) {
    --sbb-button-padding-inline: var(--sbb-spacing-fixed-10x);
  }

  @include a11y.if-forced-colors {
    --sbb-button-color-default-border: CanvasText !important;
    --sbb-button-color-active-border: Highlight !important;
    --sbb-button-color-default-background: Canvas !important;
    --sbb-button-color-hover-background: Canvas !important;
    --sbb-button-color-active-background: Canvas !important;
    --sbb-button-color-disabled-background: Canvas !important;
    --sbb-button-color-disabled-text: GrayText !important;
    --sbb-button-color-default-text: ButtonText !important;
    --sbb-button-color-hover-text: ButtonText !important;
    --sbb-button-color-active-text: ButtonText !important;
  }
}

@mixin button--primary {
  --sbb-button-color-active-background: var(--sbb-color-red150);
  --sbb-button-color-active-border: var(--sbb-color-red150);
  --sbb-button-color-active-text: var(--sbb-color-cloud);
  --sbb-button-color-default-background: var(--sbb-color-red);
  --sbb-button-color-default-border: var(--sbb-color-red);
  --sbb-button-color-default-text: var(--sbb-color-white);
  --sbb-button-color-hover-background: var(--sbb-color-red125);
  --sbb-button-color-hover-border: var(--sbb-color-red125);
  --sbb-button-color-hover-text: var(--sbb-color-milk);
}

@mixin button--primary-negative {
  --sbb-button-color-active-background: var(--sbb-color-cloud);
  --sbb-button-color-active-border: var(--sbb-color-cloud);
  --sbb-button-color-active-text: var(--sbb-color-red150);
  --sbb-button-color-default-background: var(--sbb-color-white);
  --sbb-button-color-default-border: var(--sbb-color-white);
  --sbb-button-color-default-text: var(--sbb-color-red);
  --sbb-button-color-disabled-background: var(--sbb-color-anthracite);
  --sbb-button-color-disabled-text: var(--sbb-color-aluminium);
  --sbb-button-color-hover-background: var(--sbb-color-milk);
  --sbb-button-color-hover-border: var(--sbb-color-milk);
  --sbb-button-color-hover-text: var(--sbb-color-red125);
  --sbb-button-shadow-1-color: var(--sbb-color-smoke-alpha-20);
  --sbb-button-shadow-2-color: var(--sbb-color-metal-alpha-20);
}

// TODO: add other buttons variants

@mixin button--size-s {
  --sbb-button-min-height: var(--sbb-size-element-xs);
  --sbb-button-padding-inline: var(--sbb-spacing-fixed-4x);
  --sbb-button-gap: var(--sbb-spacing-fixed-1x);

  @include mediaqueries.mq($from: medium) {
    --sbb-button-padding-inline: var(--sbb-spacing-fixed-5x);
  }
}

@mixin button--size-m {
  --sbb-button-min-height: var(--sbb-size-element-s);
  --sbb-button-padding-inline: var(--sbb-spacing-fixed-5x);

  @include mediaqueries.mq($from: medium) {
    --sbb-button-padding-inline: var(--sbb-spacing-fixed-8x);
  }
}

@mixin button--hover {
  @include mediaqueries.hover-mq($hover: true) {
    --sbb-button-translate-y-content-hover: #{functions.px-to-rem-build(-1)};
    --sbb-button-shadow-1-offset-y: calc(
      0.5 * var(--sbb-shadow-elevation-level-3-shadow-1-offset-y)
    );
    --sbb-button-shadow-1-blur: calc(0.5 * var(--sbb-shadow-elevation-level-3-shadow-1-blur));
    --sbb-button-shadow-2-blur: calc(0.5 * var(--sbb-shadow-elevation-level-3-shadow-2-blur));

    @include a11y.if-forced-colors {
      --sbb-button-color-hover-border: Highlight !important;
    }
  }
}

@mixin button-disabled-rules {
  color: var(--sbb-button-color-disabled-text);
  cursor: default;
  pointer-events: none;
}

@mixin button-disabled-before-rules {
  border-width: var(--sbb-button-border-disabled-width);
  border-color: var(--sbb-button-color-disabled-border);
  border-style: var(--sbb-button-border-disabled-style);
  background-color: var(--sbb-button-color-disabled-background);
}

@mixin button-hover-before-rules {
  @include mediaqueries.hover-mq($hover: true) {
    inset: calc(var(--sbb-button-border-width) * -1);
    background-color: var(--sbb-button-color-hover-background);
    border-color: var(--sbb-button-color-hover-border);
  }
}

@mixin button-active-rules {
  color: var(--sbb-button-color-active-text);
  background-color: var(--sbb-button-color-active-background);
  border-color: var(--sbb-button-color-active-border);
}

@mixin button-focus-visible-rules {
  &::after {
    @include a11y.focus-outline;
  }
}

@mixin button-base-rules {
  @include typo.text-xs--bold;

  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: left;
  min-height: var(--sbb-button-min-height);
  border-radius: var(--sbb-button-border-radius);

  // The padding block value is only a minimal padding to preserve a padding if the content becomes larger than intended.
  // Positioning of the content is made by flexbox vertical centering.
  // The real padding displayed is larger than the defined value below.
  padding-block: var(--sbb-button-padding-block-min);
  padding-inline: var(--sbb-button-padding-inline);
  color: var(--sbb-button-color-default-text);
  cursor: pointer;
  user-select: none;
  outline: none;
}

@mixin button-base-before-rules {
  position: absolute;
  content: '';
  inset: var(--sbb-button-inset);
  border: var(--sbb-button-border-width) var(--sbb-button-border-style)
    var(--sbb-button-color-default-border);
  border-radius: var(--sbb-button-border-radius);
  background-color: var(--sbb-button-color-default-background);
  transition-duration: var(--sbb-button-transition-duration);
  transition-timing-function: var(--sbb-button-transition-easing-function);
  transition-property: inset, background-color, border-color, box-shadow, transform;
  box-shadow: var(--sbb-button-box-shadow);
}

// TODO: check whether implementations could be optimized
@mixin button--primary-shadow {
  --sbb-button-box-shadow: var(--sbb-button-box-shadow-definition);
}

/**
  * FIXME
  *  An example of a mixin that can be applied on a native button
  *  in order to be rendered as a `sbb-button` in primary variant.
  *  In a similar way the other variants can be obtained.
  */
@mixin button {
  @include button-reset;
  @include button--primary;
  @include button-base-rules;
  @include button-variables;

  & {
    transition: {
      duration: var(--sbb-button-transition-duration);
      timing-function: var(--sbb-button-transition-easing-function);
      property: color, transform;
    }

    transform: translateY(
      var(--sbb-button-translate-y-content-hover, #{functions.px-to-rem-build(0)})
    );
  }

  // Renders background and border in the background absolute to enable the hover animation
  &::after {
    @include button-base-before-rules;
  }

  &[disabled] {
    @include button-disabled-rules;

    &::after {
      @include button-disabled-before-rules;
    }
  }

  &:not([disabled], :active, [data-active]) {
    @include button--primary-shadow;

    &:hover {
      @include button--hover;

      &::after {
        @include button-hover-before-rules;
      }
    }
  }

  &:not([disabled]):is(:active, [data-active]) {
    @include button-active-rules;
  }

  &:focus-visible {
    @include button-focus-visible-rules;
  }

  &[data-size='s'] {
    @include button--size-s;
  }

  &[data-size='m'] {
    @include button--size-m;
  }
}

// Icon-button style
@mixin icon-button($button-selector, $icon-selector) {
  @include icon-button-base(':host', #{$button-selector}, #{$icon-selector});

  :host([negative]) {
    @include icon-button-variables-negative;
  }

  :host(:is([disabled], [data-disabled], [data-group-disabled])) {
    @include icon-button-disabled(#{$button-selector});
  }

  :host(
      :is(
          [data-focus-visible],
          :focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])
        )
    ) {
    @include icon-button-focus-visible(#{$button-selector});
  }

  :host(:not([disabled], [data-disabled], [data-group-disabled], :active, [data-active]):hover) {
    @include icon-button-hover(#{$button-selector});
  }

  :host(:not([disabled], [data-disabled], [data-group-disabled]):is(:active, [data-active])) {
    @include icon-button-active(#{$button-selector});
  }
}

// Variables used in the icon-button
@mixin icon-button-variables {
  --sbb-button-color-text: var(--sbb-color-charcoal);
  --sbb-button-color-default-background: var(--sbb-color-black-alpha-0);
  --sbb-button-color-hover-background: var(--sbb-color-milk);
  --sbb-button-color-active-background: var(--sbb-color-cloud);
  --sbb-button-color-disabled-background: var(--sbb-color-milk);
  --sbb-button-color-disabled-border: var(--sbb-color-smoke);
  --sbb-button-color-disabled-text: var(--sbb-color-granite);
  --sbb-button-border-disabled-width: var(--sbb-border-width-1x);
  --sbb-button-border-disabled-style: dashed;
  --sbb-button-border-radius: var(--sbb-border-radius-infinity);
  --sbb-button-transition-duration: var(
    --sbb-disable-animation-zero-time,
    var(--sbb-animation-duration-2x)
  );
  --sbb-button-transition-easing-function: var(--sbb-animation-easing);

  @include a11y.if-forced-colors {
    --sbb-button-color-text: ButtonText !important;
    --sbb-button-color-hover-background: Highlight !important;
    --sbb-button-color-active-background: Highlight !important;
    --sbb-button-color-disabled-background: Canvas !important;
    --sbb-button-color-disabled-border: GrayText !important;
    --sbb-button-color-disabled-text: GrayText !important;
  }
}

// Variables used in the icon-button negative variant
@mixin icon-button-variables-negative {
  --sbb-button-color-text: var(--sbb-color-milk);
  --sbb-button-color-default-background: var(--sbb-color-black-alpha-0);
  --sbb-button-color-hover-background: var(--sbb-color-charcoal);
  --sbb-button-color-active-background: var(--sbb-color-iron);
  --sbb-button-color-disabled-background: var(--sbb-color-black-alpha-0);
  --sbb-button-color-disabled-border: var(--sbb-color-smoke);
  --sbb-button-color-disabled-text: var(--sbb-color-smoke);
}

// Default state for icon-button in form-field
@mixin icon-button-base($host-selector, $button-selector, $icon-selector) {
  #{$host-selector} {
    display: inline-block;
    -webkit-tap-highlight-color: transparent;
    height: fit-content;

    // Use !important here to not interfere with Firefox focus ring definition
    // which appears in normalize css of several frameworks.
    outline: none !important;

    @include icon-button-variables;

    #{$button-selector} {
      position: relative;
      transition-duration: var(--sbb-button-transition-duration);
      transition-timing-function: var(--sbb-button-transition-easing-function);
      transition-property: color;
      border-radius: var(--sbb-button-border-radius);
      color: var(--sbb-button-color-text);
      cursor: pointer;
      user-select: none;
      display: flex;

      // Renders background in the background absolute to enable the hover animation
      &::before {
        position: absolute;
        content: '';
        inset: 0;
        border-radius: var(--sbb-button-border-radius);
        background-color: var(--sbb-button-color-default-background);
        transition-duration: var(--sbb-button-transition-duration);
        transition-timing-function: var(--sbb-button-transition-easing-function);
        transition-property: inset, background-color;
      }
    }
  }

  #{$icon-selector} {
    transition: transform var(--sbb-button-transition-duration)
      var(--sbb-button-transition-easing-function);
    transform: translateY(
      var(--sbb-button-translate-y-content-hover, #{functions.px-to-rem-build(0)})
    );
    display: flex;
  }
}

// Disabled state for icon-button in form-field
@mixin icon-button-disabled($button-selector) {
  #{$button-selector} {
    color: var(--sbb-button-color-disabled-text);
    cursor: default;
    pointer-events: none;
  }

  #{$button-selector}::before {
    background-color: var(--sbb-button-color-disabled-background);
    border: var(--sbb-button-border-disabled-width) var(--sbb-button-border-disabled-style)
      var(--sbb-button-color-disabled-border);
  }
}

@mixin icon-button-focus-visible($button-selector) {
  #{$button-selector}::before {
    @include a11y.focus-outline;
  }
}

// Hover state for icon-button in form-field (exclude active state)
@mixin icon-button-hover($button-selector) {
  @include mediaqueries.hover-mq($hover: true) {
    --sbb-button-translate-y-content-hover: #{functions.px-to-rem-build(-1)};
  }

  #{$button-selector}::before {
    @include mediaqueries.hover-mq($hover: true) {
      background-color: var(--sbb-button-color-hover-background);
    }
  }
}

// Active state for icon-button in form-field
@mixin icon-button-active($button-selector) {
  #{$button-selector}::before {
    background-color: var(--sbb-button-color-active-background);
  }
}
