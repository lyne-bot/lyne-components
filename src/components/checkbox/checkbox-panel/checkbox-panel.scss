@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-checkbox-suffix-color: var(--sbb-color-charcoal);
  --sbb-checkbox-subtext-color: var(--sbb-color-granite);
  --sbb-checkbox-panel-background: var(--sbb-color-white);
  --sbb-checkbox-panel-border-color: var(--sbb-color-cloud);
  --sbb-checkbox-panel-animation-duration: var(--sbb-animation-duration-4x);
  --sbb-checkbox-panel-border-width: var(--sbb-border-width-1x);
  --sbb-checkbox-panel-border-radius: var(--sbb-border-radius-4x);
  --sbb-checkbox-panel-input-padding: var(--sbb-spacing-responsive-xs)
    var(--sbb-spacing-responsive-xxs);

  display: inline-block;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;
}

:host([data-is-selection-panel-input]) {
  --sbb-checkbox-label-gap: 0;
}

:host(:not([data-is-selection-panel-input])) {
  display: contents;
  cursor: var(--sbb-checkbox-cursor);
}

:host([data-checked]:not(:disabled)) {
  --sbb-checkbox-panel-border-color: var(--sbb-color-charcoal);
  --sbb-checkbox-panel-border-width: var(--sbb-border-width-2x);
}

slot[name='suffix'] {
  color: var(--sbb-checkbox-suffix-color);
}

slot[name='subtext'] {
  display: block;
  color: var(--sbb-checkbox-subtext-color);
  padding-inline-start: var(--sbb-spacing-fixed-8x);
}

.sbb-checkbox-wrapper {
  :host(:not([data-is-selection-panel-input])) & {
    padding: var(--sbb-checkbox-panel-input-padding);
    flex: auto;
    position: relative;
    width: 100%;
    background-color: var(--sbb-checkbox-panel-background);
    border-radius: var(--sbb-checkbox-panel-border-radius);

    // To provide a smooth transition of width, we use box-shadow to imitate border.
    box-shadow: inset 0 0 0 var(--sbb-checkbox-panel-border-width)
      var(--sbb-checkbox-panel-border-color);

    transition: {
      duration: var(--sbb-checkbox-panel-animation-duration);
      timing-function: var(--sbb-animation-easing);
      property: box-shadow;
    }

    // For high contrast mode we need a real border
    @include sbb.if-forced-colors {
      &::after {
        content: '';
        display: block;
        position: absolute;
        inset: 0;
        pointer-events: none;
        border: var(--sbb-checkbox-panel-border-width) solid var(--sbb-checkbox-panel-border-color);
        border-radius: var(--sbb-checkbox-panel-border-radius);
      }
    }
  }
}

.sbb-checkbox__inner {
  // Change the focus outline when the input is placed inside of a selection panel
  // as the main input element.
  :host(
      [data-is-selection-panel-input]:focus-visible:not(
          [data-focus-origin='mouse'],
          [data-focus-origin='touch']
        )
    )
    & {
    &::before {
      content: '';
      position: absolute;
      display: block;
      inset-block: calc(
        (var(--sbb-spacing-responsive-xs) * -1) + var(--sbb-focus-outline-width) -
          (var(--sbb-focus-outline-offset) * 2)
      );
      inset-inline: calc(
        (var(--sbb-spacing-responsive-xxs) * -1) + var(--sbb-focus-outline-width) -
          (var(--sbb-focus-outline-offset) * 2)
      );
      border: var(--sbb-focus-outline-color) solid var(--sbb-focus-outline-width);
      border-radius: calc(var(--sbb-border-radius-4x) + var(--sbb-focus-outline-offset));
    }
  }
}

.sbb-checkbox__aligner {
  display: flex;
  align-items: center;
  height: calc(1em * var(--sbb-typo-line-height-body-text));
}

.sbb-checkbox__label {
  display: flex;
  gap: var(--sbb-checkbox-label-gap);
  color: var(--sbb-checkbox-label-color);

  // Fix for Chrome and Safari, they approximate 23.8px to 23px for line-height
  line-height: max((1em * var(--sbb-typo-line-height-body-text)), var(--sbb-checkbox-dimension));
}

.sbb-checkbox__expanded-label {
  :host(:not([data-is-selection-panel-input][data-has-selection-panel-label])) & {
    display: none;
  }
}
