@use '../../core/styles' as sbb;

:host {
  --sbb-checkbox-suffix-color: var(--sbb-color-charcoal);
  --sbb-checkbox-subtext-color: var(--sbb-color-granite);
  --sbb-checkbox-border-radius: calc(var(--sbb-border-radius-4x) + var(--sbb-focus-outline-offset));

  display: inline-block;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;
}

// Style the panel only when is standalone
// leave styling to the selection-expansion-panel otherwise
:host(:not([data-is-selection-expansion-panel-input])) {
  @include sbb.selection-panel-variables;
  @include sbb.selection-panel;
}

:host([color='milk']:not([data-is-selection-expansion-panel-input])) {
  @include sbb.selection-panel-milk-variables;
}

:host(:not([data-is-selection-expansion-panel-input])[borderless]:not([data-checked])) {
  @include sbb.selection-panel-borderless-variables;
}

:host([data-is-selection-expansion-panel-input]) {
  --sbb-checkbox-label-gap: 0;
}

:host([data-checked]:not(:disabled)) {
  @include sbb.selection-panel-checked-variables;
}

:host(:focus-visible:not([data-is-selection-expansion-panel-input])) {
  @include sbb.focus-outline;
}

:host(:disabled) {
  @include sbb.selection-panel-disabled-variables;
}

slot[name='suffix'] {
  color: var(--sbb-checkbox-suffix-color);
}

slot[name='subtext'] {
  display: block;
  color: var(--sbb-checkbox-subtext-color);
  padding-inline-start: var(--sbb-spacing-fixed-8x);
}

.sbb-checkbox {
  @include sbb.text-m--regular;
}

.sbb-checkbox__inner {
  // Change the focus outline when the input is placed inside of a selection panel
  // as the main input element.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    &::before {
      content: '';
      position: absolute;
      display: block;
      inset-block: calc(
        (var(--sbb-spacing-responsive-xs) * -1) + var(--sbb-focus-outline-width) -
          (var(--sbb-focus-outline-offset) * 2)
      );
      inset-inline: calc(
        (var(--sbb-spacing-responsive-xxs) * -1) + var(--sbb-focus-outline-width) -
          (var(--sbb-focus-outline-offset) * 2)
      );
      border: var(--sbb-focus-outline-color) solid var(--sbb-focus-outline-width);
      border-radius: var(--sbb-checkbox-border-radius);
    }
  }
}

.sbb-checkbox__aligner {
  display: flex;
  align-items: center;
  height: calc(1em * var(--sbb-typo-line-height-body-text));
}

.sbb-checkbox__label {
  display: flex;
  gap: var(--sbb-checkbox-label-gap);
  color: var(--sbb-checkbox-label-color);

  // Fix for Chrome and Safari, they approximate 23.8px to 23px for line-height
  line-height: max((1em * var(--sbb-typo-line-height-body-text)), var(--sbb-checkbox-dimension));
}

.sbb-checkbox__expanded-label {
  :host(:not([data-is-selection-expansion-panel-input][data-has-selection-expansion-panel-label]))
    & {
    display: none;
  }
}
