@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-checkbox-dimension: var(--sbb-size-icon-ui-small);
  --sbb-checkbox-label-color: var(--sbb-color-charcoal);
  --sbb-checkbox-label-icon-color: var(--sbb-color-charcoal);
  --sbb-checkbox-cursor: pointer;
  --sbb-checkbox-suffix-color: var(--sbb-color-charcoal);
  --sbb-checkbox-subtext-color: var(--sbb-color-granite);
  --sbb-checkbox-label-gap: var(--sbb-spacing-fixed-2x);
}

:host(:disabled) {
  --sbb-checkbox-cursor: default;
  --sbb-checkbox-label-color: var(--sbb-color-granite);
}

:host([data-is-selection-panel-input]) {
  --sbb-checkbox-label-gap: 0;
}

.sbb-checkbox-wrapper {
  display: flex;

  @include sbb.zero-width-space;

  // Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    @include sbb.focus-outline;

    border-radius: calc(var(--sbb-border-radius-4x) - var(--sbb-focus-outline-offset));
  }
}

.sbb-checkbox {
  @include sbb.text-s--regular;

  position: relative;
  display: block;
  width: 100%;
  cursor: var(--sbb-checkbox-cursor);
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  :host([size='m']) & {
    @include sbb.text-m--regular;
  }
}

.sbb-checkbox__inner {
  display: flex;
  align-items: start;
  gap: var(--sbb-spacing-fixed-2x);
}

.sbb-checkbox__label {
  display: flex;
  gap: var(--sbb-checkbox-label-gap);
  color: var(--sbb-checkbox-label-color);

  // Fix for Chrome and Safari, they approximate 23.8px to 23px for line-height
  line-height: max((1em * var(--sbb-typo-line-height-body-text)), var(--sbb-checkbox-dimension));
}
