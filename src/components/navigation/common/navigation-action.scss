@use '../../core/styles/index' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;

  --sbb-navigation-action-color: var(--sbb-color-cloud-default);
}

:host([active]) {
  --sbb-navigation-action-color: var(--sbb-color-storm-default);

  @include sbb.if-forced-colors {
    --sbb-navigation-action-color: Highlight;
  }
}

@include sbb.hover-mq($hover: true) {
  :host(:hover) {
    --sbb-navigation-action-color: var(--sbb-color-storm-default);
  }
}

:host([role='button']) {
  @include sbb.if-forced-colors {
    --sbb-navigation-action-color: ButtonText;
  }
}

.sbb-navigation-action {
  @include sbb.title-4($exclude-spacing: true);

  cursor: pointer;
  text-decoration: none;
  display: flex;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  transition: color var(--sbb-animation-duration-3x) ease;
  hyphens: auto;
  text-align: left;
  color: var(--sbb-navigation-action-color);

  @include sbb.if-forced-colors {
    transition: none;
  }

  :host([size='m']) & {
    @include sbb.text-s--bold;
  }

  :host([size='s']) & {
    @include sbb.text-xxs--bold;
  }

  // Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    @include sbb.focus-outline;

    border-radius: calc(var(--sbb-border-radius-4x) - var(--sbb-focus-outline-offset));
  }
}

.sbb-navigation-action__opens-in-new-window {
  @include sbb.screen-reader-only;
}
