@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;

  @include sbb.panel-variables;

  --sbb-teaser-hero-brightness-hover: 1.075;
}

@include sbb.hover-mq($hover: true) {
  :host(:hover) {
    --sbb-panel-background-color: var(--sbb-panel-background-color-hover);
    --sbb-teaser-hero-brightness: var(--sbb-teaser-hero-brightness-hover);
  }
}

.sbb-teaser-hero {
  position: relative;
  display: block;
  min-height: var(--sbb-panel-height);

  // Hide focus outline when focus origin is mouse or touch. This is being used in tooltip as a workaround.
  :host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) & {
    @include sbb.focus-outline;
  }
}

.sbb-teaser-hero__panel {
  @include sbb.panel;
  @include sbb.absolute-center-y;

  z-index: 1;
}

.sbb-teaser-hero__panel-text {
  @include sbb.panel-text;

  display: inline;
  margin: 0;
  padding: 0;
}

.sbb-teaser-hero__panel-link {
  @include sbb.font-smoothing;
}

.sbb-teaser-hero__opens-in-new-window {
  @include sbb.screen-reader-only;
}

::slotted([slot='image']),
sbb-image {
  will-change: filter;
  filter: brightness(var(--sbb-teaser-hero-brightness, 1));
  transition: filter var(--sbb-panel-animation-duration) var(--sbb-panel-animation-easing);
}
