// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  display: inline-block;

  --icon-size: var(--sbb-size-icon-ui-small);
  --line-through-height-disabled: var(--sbb-border-width-2x);

  // we use primary button styles as default values
  --color-active-background: var(--sbb-color-red150-default);
  --color-active-border: var(--sbb-color-red150-default);
  --color-active-text: var(--sbb-color-cloud-default);
  --color-default-background: var(--sbb-color-red-default);
  --color-default-border: var(--sbb-color-red-default);
  --color-default-text: var(--sbb-color-white-default);
  --color-disabled-background: var(--sbb-color-milk-default);
  --color-disabled-border: var(--sbb-color-milk-default);
  --color-disabled-text: var(--sbb-color-platinum-default);
  --color-hover-background: var(--sbb-color-red125-default);
  --color-hover-border: var(--sbb-color-red125-default);
  --color-hover-text: var(--sbb-color-milk-default);
  --border-width: var(--sbb-border-width-2x);
  --border-radius: var(--sbb-border-radius-16x);
  --min-height: var(--sbb-size-button-l-min-height);
  --transition-duration: var(--sbb-animation-duration-2x);
  --transition-easing-function: var(--sbb-animation-easing);
  --padding-block-min: var(--sbb-spacing-fixed-1x);
  --padding-inline: var(--sbb-spacing-fixed-8x);
  --gap: var(--sbb-spacing-fixed-2x);
  --shadow-1-default-color: var(--sbb-color-red-alpha-20);
  --shadow-1-default-blur: var(--sbb-shadow-elevation-level-3-shadow-1-blur);
  --shadow-1-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
  --shadow-1-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-1-offset-y);
  --shadow-1-default-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
  --shadow-2-default-color: var(--sbb-color-red125-alpha-20);
  --shadow-2-default-blur: var(--sbb-shadow-elevation-level-3-shadow-2-blur);
  --shadow-2-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
  --shadow-2-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
  --shadow-2-default-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);
  --shadow-1-hover-color: var(--sbb-color-red-alpha-20);
  --shadow-1-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-1-blur) * 0.5);
  --shadow-1-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
  --shadow-1-hover-offset-y: calc(var(--sbb-shadow-elevation-level-3-shadow-1-offset-y) * 0.5);
  --shadow-1-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
  --shadow-2-hover-color: var(--sbb-color-red125-alpha-20);
  --shadow-2-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-2-blur) * 0.5);
  --shadow-2-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
  --shadow-2-hover-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
  --shadow-2-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);

  @include mq($from: medium) {
    --padding-inline: var(--sbb-spacing-fixed-10x);
  }
}

.sbb-button {
  @include buttonReset;
  @include stretch(width);
  @include text-xs--bold;

  position: relative;
  display: flex;
  gap: var(--gap);
  align-items: center;
  justify-content: center;
  text-align: left;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-easing-function);
  transition-property: color;
  min-height: var(--min-height);
  border-radius: var(--border-radius);

  // The padding block value is only a minimal padding to preserve a padding if the content becomes larger than intended.
  // Positioning of the content is made by flexbox vertical centering.
  // The real padding displayed is larger than the defined value below.
  padding-block: var(--padding-block-min);
  padding-inline: var(--padding-inline);
  color: var(--color-default-text);
  -webkit-font-smoothing: antialiased;
  cursor: pointer;

  // Renders background and border in the background absolute to enable the hover animation
  &::before {
    position: absolute;
    content: '';
    inset: 0;
    border: var(--border-width) solid var(--color-default-border);
    border-radius: var(--border-radius);
    background-color: var(--color-default-background);
    transition-duration: var(--transition-duration);
    transition-timing-function: var(--transition-easing-function);
    transition-property: inset, background-color, border-color, box-shadow;

    @include ifForcedColors {
      border: #{px-to-rem-build(1)} solid windowText;
    }
  }

  &:focus-visible::before {
    @include focusOutline;
  }
}

.sbb-button--primary {
  &.sbb-button--negative {
    --color-active-background: var(--sbb-color-cloud-default);
    --color-active-border: var(--sbb-color-cloud-default);
    --color-active-text: var(--sbb-color-red150-default);
    --color-default-background: var(--sbb-color-white-default);
    --color-default-border: var(--sbb-color-white-default);
    --color-default-text: var(--sbb-color-red-default);
    --color-disabled-background: var(--sbb-color-black-alpha-10);
    --color-disabled-border: var(--sbb-color-black-alpha-0);
    --color-disabled-text: var(--sbb-color-white-alpha-60);
    --color-hover-background: var(--sbb-color-milk-default);
    --color-hover-border: var(--sbb-color-milk-default);
    --color-hover-text: var(--sbb-color-red125-default);
    --shadow-1-default-color: var(--sbb-color-smoke-alpha-20);
    --shadow-1-default-blur: var(--sbb-shadow-elevation-level-3-shadow-1-blur);
    --shadow-1-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
    --shadow-1-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-1-offset-y);
    --shadow-1-default-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
    --shadow-2-default-color: var(--sbb-color-metal-alpha-20);
    --shadow-2-default-blur: var(--sbb-shadow-elevation-level-3-shadow-2-blur);
    --shadow-2-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
    --shadow-2-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
    --shadow-2-default-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);
    --shadow-1-hover-color: var(--sbb-color-smoke-alpha-20);
    --shadow-1-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-1-blur) * 0.5);
    --shadow-1-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
    --shadow-1-hover-offset-y: calc(var(--sbb-shadow-elevation-level-3-shadow-1-offset-y) * 0.5);
    --shadow-1-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
    --shadow-2-hover-color: var(--sbb-color-metal-alpha-20);
    --shadow-2-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-2-blur) * 0.5);
    --shadow-2-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
    --shadow-2-hover-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
    --shadow-2-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);
  }
}

.sbb-button--secondary {
  --color-active-background: var(--sbb-color-cloud-default);
  --color-active-border: var(--sbb-color-cloud-default);
  --color-active-text: var(--sbb-color-anthracite-default);
  --color-default-background: var(--sbb-color-white-default);
  --color-default-border: var(--sbb-color-cloud-default);
  --color-default-text: var(--sbb-color-charcoal-default);
  --color-disabled-background: var(--sbb-color-milk-default);
  --color-disabled-border: var(--sbb-color-milk-default);
  --color-disabled-text: var(--sbb-color-platinum-default);
  --color-hover-background: var(--sbb-color-milk-default);
  --color-hover-border: var(--sbb-color-cloud-default);
  --color-hover-text: var(--sbb-color-iron-default);
  --shadow-1-default-color: var(--sbb-color-platinum-alpha-20);
  --shadow-1-default-blur: var(--sbb-shadow-elevation-level-3-shadow-1-blur);
  --shadow-1-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
  --shadow-1-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-1-offset-y);
  --shadow-1-default-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
  --shadow-2-default-color: var(--sbb-color-cement-alpha-20);
  --shadow-2-default-blur: var(--sbb-shadow-elevation-level-3-shadow-2-blur);
  --shadow-2-default-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
  --shadow-2-default-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
  --shadow-2-default-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);
  --shadow-1-hover-color: var(--sbb-color-platinum-alpha-20);
  --shadow-1-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-1-blur) * 0.5);
  --shadow-1-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-1-offset-x);
  --shadow-1-hover-offset-y: calc(var(--sbb-shadow-elevation-level-3-shadow-1-offset-y) * 0.5);
  --shadow-1-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-1-spread);
  --shadow-2-hover-color: var(--sbb-color-cement-alpha-20);
  --shadow-2-hover-blur: calc(var(--sbb-shadow-elevation-level-3-shadow-2-blur) * 0.5);
  --shadow-2-hover-offset-x: var(--sbb-shadow-elevation-level-3-shadow-2-offset-x);
  --shadow-2-hover-offset-y: var(--sbb-shadow-elevation-level-3-shadow-2-offset-y);
  --shadow-2-hover-spread: var(--sbb-shadow-elevation-level-3-shadow-2-spread);

  &.sbb-button--negative {
    --color-active-background: transparent;
    --color-active-border: var(--sbb-color-cloud-default);
    --color-active-text: var(--sbb-color-cloud-default);
    --color-default-background: transparent;
    --color-default-border: var(--sbb-color-white-default);
    --color-default-text: var(--sbb-color-white-default);
    --color-disabled-background: var(--sbb-color-black-alpha-10);
    --color-disabled-border: var(--sbb-color-black-alpha-0);
    --color-disabled-text: var(--sbb-color-aluminium-default);
    --color-hover-background: transparent;
    --color-hover-border: var(--sbb-color-milk-default);
    --color-hover-text: var(--sbb-color-milk-default);
  }
}

.sbb-button--translucent {
  --color-active-background: var(--sbb-color-black-alpha-70);
  --color-active-border: var(--sbb-color-black-alpha-0);
  --color-active-text: var(--sbb-color-cloud-default);
  --color-default-background: var(--sbb-color-black-alpha-50);
  --color-default-border: var(--sbb-color-black-alpha-0);
  --color-default-text: var(--sbb-color-white-default);
  --color-disabled-background: var(--sbb-color-black-alpha-20);
  --color-disabled-border: var(--sbb-color-black-alpha-0);
  --color-disabled-text: var(--sbb-color-milk-default);
  --color-hover-background: var(--sbb-color-black-alpha-60);
  --color-hover-border: var(--sbb-color-black-alpha-0);
  --color-hover-text: var(--sbb-color-milk-default);

  &.sbb-button--negative {
    --color-active-background: var(--sbb-color-white-alpha-70);
    --color-active-border: var(--sbb-color-white-alpha-0);
    --color-active-text: var(--sbb-color-anthracite-default);
    --color-default-background: var(--sbb-color-white-alpha-50);
    --color-default-border: var(--sbb-color-white-alpha-0);
    --color-default-text: var(--sbb-color-charcoal-default);
    --color-disabled-background: var(--sbb-color-white-alpha-20);
    --color-disabled-border: var(--sbb-color-white-alpha-0);
    --color-disabled-text: var(--sbb-color-platinum-default);
    --color-hover-background: var(--sbb-color-white-alpha-60);
    --color-hover-border: var(--sbb-color-white-alpha-0);
    --color-hover-text: var(--sbb-color-iron-default);
  }
}

.sbb-button--transparent {
  --color-active-background: var(--sbb-color-cloud-default);
  --color-active-border: var(--sbb-color-cloud-default);
  --color-active-text: var(--sbb-color-black-default);
  --color-default-background: transparent;
  --color-default-border: transparent;
  --color-default-text: var(--sbb-color-black-default);
  --color-disabled-background: transparent;
  --color-disabled-border: transparent;
  --color-disabled-text: var(--sbb-color-granite-default);
  --color-hover-background: var(--sbb-color-milk-default);
  --color-hover-border: var(--sbb-color-milk-default);
  --color-hover-text: var(--sbb-color-black-default);

  &.sbb-button--negative {
    --color-active-background: var(--sbb-color-iron-default);
    --color-active-border: var(--sbb-color-iron-default);
    --color-active-text: var(--sbb-color-white-default);
    --color-default-background: transparent;
    --color-default-border: transparent;
    --color-default-text: var(--sbb-color-white-default);
    --color-disabled-background: transparent;
    --color-disabled-border: transparent;
    --color-disabled-text: var(--sbb-color-granite-default);
    --color-hover-background: var(--sbb-color-charcoal-default);
    --color-hover-border: var(--sbb-color-charcoal-default);
    --color-hover-text: var(--sbb-color-white-default);
  }
}

.sbb-button__icon {
  fill: currentcolor;

  @include ifForcedColors {
    fill: ButtonText;
  }

  display: block;
  width: var(--icon-size);
  height: var(--icon-size);
  color: currentcolor;
}

.sbb-button--size-m {
  --border-width: var(--sbb-border-width-1x);
  --min-height: var(--sbb-size-button-m-min-height);
  --padding-inline: var(--sbb-spacing-fixed-5x);

  @include mq($from: medium) {
    --padding-inline: var(--sbb-spacing-fixed-8x);
  }
}

.sbb-button--primary:not(:disabled),
.sbb-button--secondary:not(:disabled) {
  &::before {
    box-shadow: var(--shadow-1-default-offset-x) var(--shadow-1-default-offset-y)
        var(--shadow-1-default-blur) var(--shadow-1-default-spread) var(--shadow-1-default-color),
      var(--shadow-2-default-offset-x) var(--shadow-2-default-offset-y) var(--shadow-2-default-blur)
        var(--shadow-2-default-spread) var(--shadow-2-default-color);
  }
}

.sbb-button--visual-only {
  width: fit-content;
  user-select: none;
}

.sbb-button--icon-only {
  --padding-inline: 0;
  --icon-margin-inline-end: 0;

  width: var(--min-height);
  justify-content: center;

  &.sbb-button:disabled::after {
    inset-inline: unset;

    // Width of line through is fixed in icon variant
    width: var(--icon-size);
  }
}

.sbb-button:disabled {
  color: var(--color-disabled-text);
  cursor: default;

  &::before {
    background-color: var(--color-disabled-background);
    border-color: var(--color-disabled-border);
  }

  // Line through content
  &::after {
    content: '';
    @include absoluteCenterY;

    background-color: var(--color-disabled-text);
    height: var(--line-through-height-disabled);
    inset-inline: var(--padding-inline);

    @include ifForcedColors {
      background-color: GrayText;
    }
  }

  ::slotted(svg) {
    @include ifForcedColors {
      fill: GrayText;
    }
  }
}

// If the the device can hover over elements with ease
@include hover-mq($hover: true) {
  .sbb-button:hover:not(:disabled) {
    --translate-y-content-hover: #{px-to-rem-build(-1)};

    color: var(--color-hover-text);

    &::before {
      inset: calc(var(--border-width) * -1);
      background-color: var(--color-hover-background);
      border-color: var(--color-hover-border);
      box-shadow: var(--shadow-1-hover-offset-x) var(--shadow-1-hover-offset-y)
          var(--shadow-1-hover-blur) var(--shadow-1-hover-spread) var(--shadow-1-hover-color),
        var(--shadow-2-hover-offset-x) var(--shadow-2-hover-offset-y) var(--shadow-2-hover-blur)
          var(--shadow-2-hover-spread) var(--shadow-2-hover-color);

      @include ifForcedColors {
        border-color: Highlight;
      }
    }
  }
}

.sbb-button:active:not(:disabled) {
  &::before {
    color: var(--color-active-text);
    background-color: var(--color-active-background);
    border-color: var(--color-active-border);
  }
}

.sbb-button--secondary-negative,
.sbb-button--translucent,
.sbb-button--translucent-negative,
.sbb-button--transparent,
.sbb-button--transparent-negative {
  &::before {
    box-shadow: none;
  }

  &:hover,
  &:focus {
    &:not(:disabled)::before {
      box-shadow: none;
    }
  }
}

.sbb-button__label,
.sbb-button__icon {
  transition: transform var(--transition-duration) var(--transition-easing-function);
  transform: translateY(var(--translate-y-content-hover, #{px-to-rem-build(0)}));
}

.sbb-button__label {
  display: block;
  @include ellipsis;
}

.sbb-button__icon-description {
  @include screenReaderOnly;
}
