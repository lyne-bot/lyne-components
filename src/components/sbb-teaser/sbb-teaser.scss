@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  display: inline-block;

  --sbb-teaser-scale-hover: 1.02;
  --sbb-teaser-description-color: var(--sbb-color-granite-default);
  --sbb-teaser-flex-direction: row;
  --sbb-teaser-align-items: center;
  --sbb-teaser-gap: var(--sbb-spacing-fixed-4x);
  --sbb-teaser-width: fit-content;
  --sbb-teaser-border-radius: var(--sbb-border-radius-4x);
  --sbb-teaser-brightness-hover: 1.075;
}

:host([is-stacked]:not([is-stacked='false'])) {
  --sbb-teaser-flex-direction: column;
  --sbb-teaser-align-items: baseline;
  --sbb-teaser-gap: var(--sbb-spacing-fixed-3x);
  --sbb-teaser-width: 100%;
}

.sbb-teaser {
  @include sbb.zero-width-space;

  display: flex;
  text-decoration: none;

  :host(:focus-visible) & {
    @include sbb.focus-outline;

    border-radius: var(--sbb-teaser-border-radius);
  }

  @include sbb.if-forced-colors {
    outline-offset: var(--sbb-focus-outline-offset);
    outline: CanvasText solid var(--sbb-focus-outline-width);
    border-radius: var(--sbb-teaser-border-radius);

    &:hover {
      outline-color: Highlight;
    }
  }
}

.sbb-teaser__container {
  display: flex;
  flex-flow: var(--sbb-teaser-flex-direction) nowrap;
  align-items: var(--sbb-teaser-align-items);
  gap: var(--sbb-teaser-gap);
  height: var(--sbb-teaser-container-height, auto);
}

::slotted([slot='image']) {
  will-change: transform;
  display: block;
  object-fit: cover;
  width: 100%;
  filter: brightness(var(--sbb-teaser-brightness, 1));
  transition: var(--sbb-animation-duration-4x) var(--sbb-animation-easing);
  aspect-ratio: 4 / 3;

  @include sbb.hover-mq($hover: true) {
    .sbb-teaser:hover & {
      transform: scale(var(--sbb-teaser-scale-hover));

      --sbb-teaser-brightness: var(--sbb-teaser-brightness-hover);
    }
  }
}

.sbb-teaser__image-wrapper {
  min-width: var(--sbb-teaser-width);
  overflow: hidden;
  border-radius: var(--sbb-teaser-border-radius);
  transition: var(--sbb-animation-duration-4x) var(--sbb-animation-easing);

  @include sbb.hover-mq($hover: true) {
    .sbb-teaser:hover & {
      @include sbb.shadow-level-9-hard;
    }
  }
}

.sbb-teaser__lead {
  @include sbb.clamp-lines($lines: 2);

  // Overwrite sbb-title default margin
  margin: 0;
}

.sbb-teaser__description {
  @include sbb.text-s--regular;
  @include sbb.clamp-lines($lines: 2);

  color: var(--sbb-teaser-description-color);
}

::slotted([slot='description']) {
  margin-block: 0;
}

.sbb-teaser__opens-in-new-window {
  @include sbb.screen-reader-only;
}
