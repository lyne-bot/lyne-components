// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

.tab-group {
  display: flex;
  flex-wrap: wrap;
  gap: var(--sbb-spacing-fixed-3x);

  ::slotted(h1),
  ::slotted(h2),
  ::slotted(h3),
  ::slotted(h4),
  ::slotted(h5),
  ::slotted(h6) {
    margin: 0;
    @include text-xs--bold;

    display: inline-block;
    vertical-align: middle;
    padding-block: var(--sbb-spacing-fixed-2x);
    padding-inline: var(--sbb-spacing-fixed-5x);
    border-radius: var(--sbb-spacing-fixed-5x);
    box-shadow: 0 0 0 var(--sbb-border-width-1x) var(--sbb-color-cloud-default);
    outline-offset: calc(var(--sbb-border-width-2x)) + var(--sbb-border-width-2x);
    background-color: transparent;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    cursor: pointer;
    @include fontSmoothing;
    @include ellipsis;

    transition-duration: var(--sbb-animation-duration-4x);
    transition-timing-function: var(--sbb-animation-easing);
    transition-property: color, background-color, box-shadow, outline-offset, padding-block;
  }

  // If the the device can hover over elements with ease
  @include hover-mq($hover: true) {
    ::slotted(h1:hover),
    ::slotted(h2:hover),
    ::slotted(h3:hover),
    ::slotted(h4:hover),
    ::slotted(h5:hover),
    ::slotted(h6:hover) {
      background-color: var(--sbb-color-milk-default);
      box-shadow: 0 0 0 var(--sbb-border-width-2x) var(--sbb-color-milk-default),
        0 0 0 calc(var(--sbb-border-width-2x) + var(--sbb-border-width-1x))
          var(--sbb-color-cloud-default);
      padding-block: calc(var(--sbb-spacing-fixed-2x) - var(--sbb-border-width-1x))
        calc(var(--sbb-spacing-fixed-2x) + var(--sbb-border-width-1x));
    }

    ::slotted(h1[active]:hover),
    ::slotted(h2[active]:hover),
    ::slotted(h3[active]:hover),
    ::slotted(h4[active]:hover),
    ::slotted(h5[active]:hover),
    ::slotted(h6[active]:hover) {
      box-shadow: 0 0 0 calc(var(--sbb-border-width-2x) + var(--sbb-border-width-1x))
        var(--sbb-color-black-default);
      background-color: var(--sbb-color-black-default);
      color: var(--sbb-color-white-default);
    }

    ::slotted(h1:focus-visible:hover),
    ::slotted(h2:focus-visible:hover),
    ::slotted(h3:focus-visible:hover),
    ::slotted(h4:focus-visible:hover),
    ::slotted(h5:focus-visible:hover),
    ::slotted(h6:focus-visible:hover) {
      outline-offset: calc(
        var(--sbb-border-width-2x) + var(--sbb-border-width-2x) + var(--sbb-border-width-2x)
      );
    }
  }

  ::slotted(h1[active]),
  ::slotted(h2[active]),
  ::slotted(h3[active]),
  ::slotted(h4[active]),
  ::slotted(h5[active]),
  ::slotted(h6[active]) {
    box-shadow: 0 0 0 var(--sbb-border-width-1x) var(--sbb-color-black-default);
    background-color: var(--sbb-color-black-default);
    color: var(--sbb-color-white-default);
  }

  ::slotted(h1[disabled]),
  ::slotted(h2[disabled]),
  ::slotted(h3[disabled]),
  ::slotted(h4[disabled]),
  ::slotted(h5[disabled]),
  ::slotted(h6[disabled]) {
    cursor: unset;
    position: relative;
    pointer-events: none;
    background-color: var(--sbb-color-milk-default);
    box-shadow: inset 0 0 0 var(--sbb-border-width-1x) var(--sbb-color-milk-default);
    color: var(--sbb-color-platinum-default);

    --sbb-amount-color-override: var(--sbb-color-platinum-default);

    &::after {
      content: '';
      inset: 50% var(--sbb-spacing-fixed-5x);
      border-bottom: var(--sbb-border-width-2x) solid var(--sbb-color-platinum-default);
      @include absoluteCenterY;
    }
  }

  ::slotted(h1:active),
  ::slotted(h2:active),
  ::slotted(h3:active),
  ::slotted(h4:active),
  ::slotted(h5:active),
  ::slotted(h6:active) {
    box-shadow: 0 0 0 var(--sbb-border-width-2x) var(--sbb-color-milk-default),
      0 0 0 calc(var(--sbb-border-width-2x) + var(--sbb-border-width-1x))
        var(--sbb-color-black-default);
  }

  ::slotted(h1:focus-visible),
  ::slotted(h2:focus-visible),
  ::slotted(h3:focus-visible),
  ::slotted(h4:focus-visible),
  ::slotted(h5:focus-visible),
  ::slotted(h6:focus-visible) {
    outline: var(--sbb-border-width-1x) solid var(--sbb-color-black-default);
    outline-offset: calc(var(--sbb-border-width-2x) + var(--sbb-border-width-2x));
  }
}

.tab-content {
  @include text;

  color: var(--sbb-color-iron-default);
  margin-top: var(--sbb-spacing-responsive-m);
  transition: height var(--sbb-animation-duration-4x) var(--sbb-animation-easing);

  ::slotted(div),
  ::slotted(section),
  ::slotted(article) {
    opacity: 0;
    visibility: hidden;
    height: 0;
  }

  ::slotted(div[active]),
  ::slotted(section[active]),
  ::slotted(article[active]) {
    opacity: 1;
    visibility: visible;
    height: fit-content;
    transition: opacity var(--sbb-animation-duration-4x) var(--sbb-animation-duration-4x)
        var(--sbb-animation-easing),
      visibility var(--sbb-animation-duration-4x) var(--sbb-animation-duration-4x)
        var(--sbb-animation-easing);
  }
}
