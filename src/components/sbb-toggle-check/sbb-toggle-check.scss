:host {
  display: inline-block;

  --toggle-check-color: var(--sbb-color-charcoal-default);
  --toggle-check-background: var(--sbb-color-smoke-default);
  --toggle-check-fill: var(--sbb-color-red-default);
  --toggle-check-circle-background: var(--sbb-color-white-default);
  --toggle-check-circle-offset: var(--sbb-border-width-2x);
  --toggle-check-circle-diameter: var(--sbb-size-icon-ui-small);
  --toggle-check-height: calc(
    var(--toggle-check-circle-diameter) + 2 * var(--toggle-check-circle-offset)
  );
  --toggle-check-circle-transform: translate(var(--toggle-check-circle-offset), -50%);
  --toggle-check-cursor: pointer;
  --toggle-check-flex-direction: row-reverse;
  --toggle-check-icon-opacity: 0;

  @include ifForcedColors {
    --toggle-check-circle-background: Canvas;
    --toggle-check-background: CanvasText;
  }
}

.toggle-check--checked {
  --toggle-check-background: var(--sbb-color-red-default);
  --toggle-check-circle-transform: translate(calc(100% - var(--toggle-check-circle-offset)), -50%);
  --toggle-check-icon-opacity: 1;

  @include ifForcedColors {
    --toggle-check-fill: Highlight;
    --toggle-check-background: Highlight;
  }
}

.toggle-check--disabled {
  --toggle-check-color: var(--sbb-color-graphite-default);
  --toggle-check-background: var(--sbb-color-cloud-default);
  --toggle-check-fill: var(--sbb-color-granite-default);
  --toggle-check-circle-background: var(--sbb-color-milk-default);
  --toggle-check-cursor: not-allowed;

  @include ifForcedColors {
    --toggle-check-fill: GrayText;
    --toggle-check-background: GrayText;
  }
}

.toggle-check--before {
  --toggle-check-flex-direction: row;
}

.toggle-check {
  // Avoids unwanted space displayed if no label text is set.
  @include zeroWidthSpace;

  position: relative;
  display: flex;
  color: var(--toggle-check-color);
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

input[type='checkbox'] {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
  margin: 0;
  right: 0;
  bottom: 0;
  cursor: inherit;

  // Puts the element behind the parent while keeping it visible so that
  // it allows `click` events to propagate up.
  z-index: -1;
}

.toggle-check__container {
  @include text-s--regular;

  display: flex;
  flex-direction: var(--toggle-check-flex-direction);
  gap: var(--sbb-spacing-fixed-3x);
  align-items: center;
}

.toggle-check__slider {
  display: inline-block;
  position: relative;
  overflow: hidden;
  min-width: calc(2 * var(--toggle-check-circle-diameter));
  height: var(--toggle-check-height);
  border-radius: var(--toggle-check-height);
  background-color: var(--toggle-check-background);
  cursor: var(--toggle-check-cursor);

  input[type='checkbox']:focus-visible + .toggle-check__container & {
    @include focusOutline;
  }
}

.toggle-check__circle {
  @include shadow-level-5-hard;
  @include absoluteCenterY;

  width: var(--toggle-check-circle-diameter);
  height: var(--toggle-check-circle-diameter);
  border-radius: var(--toggle-check-height);
  background-color: var(--toggle-check-circle-background);
  color: var(--toggle-check-fill);
  will-change: transform;
  transform: var(--toggle-check-circle-transform);
  transition: transform ease var(--sbb-animation-duration-6x);
}

::slotted(sbb-icon),
slot[name='icon'] sbb-icon {
  opacity: var(--toggle-check-icon-opacity);
  transition: opacity ease var(--sbb-animation-duration-6x);
}
