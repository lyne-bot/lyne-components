@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-expansion-panel-animation-duration: var(--sbb-animation-duration-4x);
  --sbb-expansion-panel-background-color: var(--sbb-color-white-default);
  --sbb-expansion-panel-content-visibility: hidden;
  --sbb-expansion-panel-content-max-height: 0;
  --sbb-expansion-panel-content-opacity: 0;
  --sbb-expansion-panel-content-transition: max-height var(--sbb-expansion-panel-animation-duration)
      var(--sbb-animation-easing),
    padding var(--sbb-expansion-panel-animation-duration) var(--sbb-animation-easing),
    opacity var(--sbb-expansion-panel-animation-duration) var(--sbb-animation-easing);
  --sbb-expansion-panel-border-width: var(--sbb-border-width-1x);
  --sbb-expansion-panel-border-color: var(--sbb-color-cloud-default);
  --sbb-expansion-panel-border-block-start-width: var(--sbb-expansion-panel-border-width);
  --sbb-expansion-panel-border-block-start-color: var(--sbb-color-cloud-default);
  --sbb-expansion-panel-border-radius: var(--sbb-border-radius-4x);
  --sbb-expansion-panel-start-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-start-start-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-start-radius: var(--sbb-expansion-panel-border-radius);

  // Vars which will be used by child components
  --sbb-expansion-panel-title-gap: var(--sbb-spacing-fixed-4x);
  --sbb-expansion-panel-icon-size: var(--sbb-size-icon-ui-medium);
}

:host([disabled]:not([disabled='false'])) {
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-color: GrayText;
    --sbb-expansion-panel-border-block-start-color: GrayText;
  }
}

:host([expanded]) {
  --sbb-expansion-panel-content-visibility: visible;
  --sbb-expansion-panel-content-max-height: var(--sbb-expansion-panel-content-height);
  --sbb-expansion-panel-content-opacity: 1;
  --sbb-expansion-panel-content-transition: max-height var(--sbb-expansion-panel-animation-duration)
      var(--sbb-animation-easing),
    padding var(--sbb-expansion-panel-animation-duration) var(--sbb-animation-easing),
    opacity var(--sbb-expansion-panel-animation-duration)
      var(--sbb-expansion-panel-animation-duration) var(--sbb-animation-easing);
}

:host(:is([data-resize-disable-animation], [disable-animation]:not([disable-animation='false']))) {
  --sbb-expansion-panel-animation-duration: 0s;
}

:host([data-accordion][data-accordion-first]) {
  --sbb-expansion-panel-start-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-start-start-radius: var(--sbb-expansion-panel-border-radius);
}

:host([data-accordion]:not([data-accordion-first])) {
  --sbb-expansion-panel-border-block-start-width: 0;
  --sbb-expansion-panel-border-block-start-color: transparent;
  --sbb-expansion-panel-start-end-radius: 0;
  --sbb-expansion-panel-start-start-radius: 0;
}

:host([data-accordion][data-accordion-last]) {
  --sbb-expansion-panel-end-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-start-radius: var(--sbb-expansion-panel-border-radius);
}

:host([data-accordion]:not([data-accordion-last])) {
  --sbb-expansion-panel-end-end-radius: 0;
  --sbb-expansion-panel-end-start-radius: 0;
}

:host([color='milk']) {
  --sbb-expansion-panel-background-color: var(--sbb-color-milk-default);
}

:host([borderless]:not([borderless='false'])) {
  --sbb-expansion-panel-border-width: 0;
  --sbb-expansion-panel-border-color: transparent;
  --sbb-expansion-panel-border-block-start-width: 0;
  --sbb-expansion-panel-border-block-start-color: transparent;
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-width: var(--sbb-border-width-1x);
    --sbb-expansion-panel-border-block-start-width: var(--sbb-expansion-panel-border-width);
  }
}

:host([borderless]:not([borderless='false'])[data-accordion]:not([data-accordion-first])) {
  --sbb-expansion-panel-border-block-start-width: var(--sbb-spacing-fixed-1x);
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-block-start-width: 0;
  }
}

@include sbb.hover-mq($hover: true) {
  :host(:hover:not([disabled]:not([disabled='false']))) {
    --sbb-expansion-panel-background-color: var(--sbb-color-milk-default);
    @include sbb.if-forced-colors {
      --sbb-expansion-panel-border-color: Highlight;
      --sbb-expansion-panel-border-block-start-color: Highlight;
    }
  }

  :host([color='milk']:hover:not([disabled]:not([disabled='false']))) {
    --sbb-expansion-panel-background-color: var(--sbb-color-white-default);
  }
}

.sbb-expansion-panel {
  background-color: var(--sbb-expansion-panel-background-color);
  border: var(--sbb-expansion-panel-border-width) solid var(--sbb-expansion-panel-border-color);
  border-block-start-color: var(--sbb-expansion-panel-border-block-start-color);
  border-block-start-width: var(--sbb-expansion-panel-border-block-start-width);
  border-radius: var(--sbb-expansion-panel-start-start-radius)
    var(--sbb-expansion-panel-start-end-radius) var(--sbb-expansion-panel-end-end-radius)
    var(--sbb-expansion-panel-end-start-radius);
  background-clip: padding-box;
}

.sbb-expansion-panel__header {
  margin: 0;
}

.sbb-expansion-panel__content {
  display: block;
  overflow: hidden;
  visibility: var(--sbb-expansion-panel-content-visibility);
  max-height: var(--sbb-expansion-panel-content-max-height);
  opacity: var(--sbb-expansion-panel-content-opacity);
  transition: var(--sbb-expansion-panel-content-transition);
}
