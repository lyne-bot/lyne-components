// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-blocked-passage-height: var(--sbb-train-formation-wagon-height);
  --sbb-blocked-passage-background-color: var(--sbb-color-red-default);
  --sbb-blocked-passage-bar-color: var(--sbb-color-white-default);
  --sbb-blocked-passage-icon-dimension: #{px-to-rem-build(16)};
  --sbb-blocked-passage-icon-bar-width: #{px-to-rem-build(10)};
  --sbb-blocked-passage-icon-bar-height: #{px-to-rem-build(4)};
  --sbb-blocked-passage-icon-bar-border-radius: #{px-to-rem-build(1)};

  @include ifForcedColors {
    --sbb-blocked-passage-background-color: CanvasText;
    --sbb-blocked-passage-bar-color: Canvas;
  }
}

.sbb-blocked-passage {
  width: var(--sbb-blocked-passage-icon-dimension);
  display: flex;
  justify-content: center;
  flex-direction: column;
  height: var(--sbb-blocked-passage-height);
  margin-top: calc(var(--sbb-font-size-text-s) * var(--sbb-typo-line-height-body-text));
}

.sbb-blocked-passage__icon {
  width: 100%;
  height: var(--sbb-blocked-passage-icon-dimension);
  border-radius: 50%;
  background-color: var(--sbb-blocked-passage-background-color);
  position: relative;
  flex-direction: column;
  display: flex;
  align-items: center;

  &::before {
    content: '';
    width: var(--sbb-blocked-passage-icon-bar-width);
    height: var(--sbb-blocked-passage-icon-bar-height);
    border-radius: var(--sbb-blocked-passage-icon-bar-border-radius);
    background-color: var(--sbb-blocked-passage-bar-color);
    margin: auto 0;
  }
}
