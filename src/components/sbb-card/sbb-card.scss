// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  position: relative;
  background-color: var(--sbb-color-white-default);
  width: 100%;
  border-radius: var(--sbb-border-radius-4x);
  padding-inline: var(--sbb-spacing-responsive-xxs-small);
  overflow: hidden;
  @include mq($from: medium) {
    padding-inline: var(--sbb-spacing-responsive-xxs-medium);
  }
}

:host([size='xs']) {
  padding-block: var(--sbb-spacing-fixed-3x);
}

:host([size='s']) {
  padding-block: var(--sbb-spacing-responsive-xxxs-small);
  @include mq($from: medium) {
    padding-block: var(--sbb-spacing-responsive-xxxs-medium);
  }
}

:host([size='m']) {
  padding-block: var(--sbb-spacing-fixed-3x);
}

:host([size='l']) {
  padding-block: var(--sbb-spacing-fixed-4x);
}

:host([size='xl']) {
  padding-block: var(--sbb-spacing-responsive-xxs-small);
  @include mq($from: medium) {
    padding-block: var(--sbb-spacing-responsive-xxs-medium);
  }
}

:host(.card__badge[size='m']),
:host(.card__badge[size='l']),
:host(.card__badge[size='xl']) {
  padding-block-start: var(--sbb-spacing-fixed-6x);
}

:host([size='xxl']) {
  padding-block: var(--sbb-spacing-responsive-s-small);
  @include mq($from: medium) {
    padding-block: var(--sbb-spacing-responsive-s-medium);
  }
}
