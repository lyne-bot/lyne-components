@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-card-background-color: var(--sbb-color-white-default);
  --sbb-card-border-radius: var(--sbb-border-radius-4x);
  --sbb-card-animation-duration: var(--sbb-animation-duration-1x);
  --sbb-card-animation-easing: var(--sbb-animation-easing);
  --sbb-card-border-color: transparent;
  --sbb-card-hover-shift: #{sbb.px-to-rem-build(2)};
}

:host([negative]:not([negative='false'])) {
  --sbb-card-background-color: var(--sbb-color-milk-default);
}

:host([active]:not([active='false'])) {
  --sbb-card-border-color: var(--sbb-color-smoke-default);
}

:host([size='xs']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-card-padding-block-start: var(--sbb-spacing-fixed-3x);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([size='s']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-card-padding-block-start: var(--sbb-spacing-responsive-xxxs);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([size='m']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-s);
  --sbb-card-padding-block-start: var(--sbb-spacing-responsive-xxxs);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([size='l']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-card-padding-block-start: var(--sbb-spacing-fixed-4x);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([size='xl']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-card-padding-block-start: var(--sbb-spacing-responsive-xxs);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([size='xxl']) {
  --sbb-card-padding-inline: var(--sbb-spacing-responsive-s);
  --sbb-card-padding-block-start: var(--sbb-spacing-responsive-s);
  --sbb-card-padding-block-end: var(--sbb-card-padding-block-start);
}

:host([data-has-badge][size='m']) {
  --sbb-card-padding-block-start: var(--sbb-spacing-fixed-6x);
  --sbb-card-padding-block-end: var(--sbb-spacing-responsive-xxxs);
}

:host([data-has-badge][size='l']) {
  --sbb-card-padding-block-start: var(--sbb-spacing-fixed-6x);
  --sbb-card-padding-block-end: var(--sbb-spacing-fixed-4x);
}

:host([data-has-badge][size='xl']) {
  --sbb-card-padding-block-start: var(--sbb-spacing-fixed-6x);
  --sbb-card-padding-block-end: var(--sbb-spacing-responsive-xxs);
}

.sbb-card {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  height: 100%;
  padding-inline: var(--sbb-card-padding-inline);
  padding-block-start: var(--sbb-card-padding-block-start);
  padding-block-end: var(--sbb-card-padding-block-end);
  border-radius: var(--sbb-card-border-radius);
  background-color: var(--sbb-card-background-color);
  transition: {
    duration: var(--sbb-card-animation-duration);
    timing-function: var(--sbb-card-animation-easing);
    property: box-shadow, padding;
  }

  color: inherit;
  text-decoration: none;

  &::after {
    position: absolute;
    background-color: transparent;
    content: '';
    inset: 0;
    border: var(--sbb-border-width-2x) solid var(--sbb-card-border-color);
    border-radius: var(--sbb-card-border-radius);
  }

  &:focus-visible {
    @include sbb.focus-outline;
  }

  :host(:not([href])) & {
    @include sbb.text-inherit;

    cursor: pointer;

    // can't use @include sbb.button-reset because overrides paddings, backgrounds..., only basic rules added
    border: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    -webkit-tap-highlight-color: transparent;
  }

  @include sbb.hover-mq($hover: true) {
    :host(:not([active]:not([active='false'])):hover) & {
      @include sbb.shadow-level-9-hard;

      padding-block-start: calc(var(--sbb-card-padding-block-start) - var(--sbb-card-hover-shift));
      padding-block-end: calc(var(--sbb-card-padding-block-end) + var(--sbb-card-hover-shift));
    }
  }
}

.sbb-card__opens-in-new-window {
  @include sbb.screen-reader-only;
}

// We remove upper margin from all titles
// as we do not expect multiple titles to be used inside a card.
::slotted(sbb-title) {
  margin-block-start: 0;
}
