// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  display: block;
  border-radius: var(--sbb-border-radius-4x);
  background-color: var(--sbb-color-white-default);

  --input-height: #{px-to-rem-build(48)}; // TODO Design Token??

  @include mq($from: medium) {
    --input-height: #{px-to-rem-build(56)}; // TODO Design Token??
  }

  position: relative;
  z-index: 0;
}

.autocomplete {
  position: relative;
}

.autocomplete__list {
  @include list-reset;
  @include shadow-level-5-hard;

  cursor: default;
  position: absolute;
  display: none;
  overflow-y: scroll;
  overscroll-behavior: contain;
  top: calc(100% - var(--input-height));
  right: 0;
  left: 0;
  z-index: -1;
  background-color: var(--sbb-color-white-default);
  border-radius: var(--sbb-border-radius-4x);
  padding-block-start: calc(var(--input-height) + var(--sbb-spacing-fixed-3x));
  padding-block-end: var(--sbb-spacing-fixed-3x);
  padding-inline-start: var(--sbb-spacing-responsive-xxxs-zero);
  padding-inline-end: var(--sbb-spacing-responsive-xxxs-zero);

  @include mq($from: medium) {
    padding-inline-start: var(--sbb-spacing-responsive-xxxs-medium);
    padding-inline-end: var(--sbb-spacing-responsive-xxxs-medium);
  }

  @include ifForcedColors {
    background-color: Canvas;
    border: #{px-to-rem-build(1)} solid Highlight;
    border-block-start: none;
  }
}

.autocomplete__list--visible {
  display: flex;
  flex-direction: column;
  gap: #{px-to-rem-build(2)};
}

.autocomplete__accessibility-hint {
  @include screenReaderOnly;
}
