@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-overlay-position-x: 0;
  --sbb-overlay-position-y: 0;
  --sbb-overlay-max-height: calc(85vh - var(--sbb-spacing-fixed-8x));
  --sbb-overlay-min-height: #{sbb.px-to-rem-build(120)};
  --sbb-overlay-width: fit-content;
  --sbb-overlay-border-radius: var(--sbb-border-radius-4x);
}

:host(:not([data-state='closed'])) {
  --sbb-menu-inset: 0;
}

::slotted(sbb-divider) {
  margin-block: var(--sbb-spacing-fixed-3x);
}

.sbb-autocomplete__container {
  position: fixed;
  pointer-events: none;
  inset: var(--sbb-menu-inset, unset);
  z-index: var(--sbb-autocomplete-z-index, var(--sbb-overlay-z-index));
}

.sbb-autocomplete__panel {
  @include sbb.shadow-level-5-hard;

  display: block;
  position: absolute;
  visibility: hidden;
  padding: 0;
  margin: 0;
  background-color: transparent;
  border: none;
  border-radius: var(--sbb-overlay-border-radius);
  top: var(--sbb-overlay-position-y);
  left: var(--sbb-overlay-position-x);
  width: var(--sbb-overlay-width);
  max-height: var(--sbb-overlay-max-height);
  min-height: var(--sbb-overlay-min-height);

  .sbb-autocomplete__options {
    background-color: var(--sbb-color-white-default);
    padding-block: var(--sbb-spacing-fixed-3x);
    padding-inline: 0;
    border-radius: var(--sbb-overlay-border-radius);
  }

  &[data-open]:not([data-open='false']) {
    visibility: visible;
    pointer-events: all;
  }

  :host([data-autocomplete-position='below']) & {
    transform: translateY(calc(-1 * var(--sbb-overlay-origin-height)));

    &::before {
      @include sbb.shadow-level-5-hard; // TODO only for borderless variant

      content: '';
      display: block;
      position: relative;
      width: 100%;
      height: var(--sbb-overlay-origin-height);
      background-color: transparent;
      border-radius: var(--sbb-overlay-border-radius);
      pointer-events: none;
    }
  }

  :host([data-autocomplete-position='above']) & {
    transform: translateY(var(--sbb-overlay-origin-height));

    &::after {
      @include sbb.shadow-level-5-hard; // TODO only for borderless variant

      content: '';
      display: block;
      position: relative;
      width: 100%;
      height: var(--sbb-overlay-origin-height);
      background-color: transparent;
      border-radius: var(--sbb-overlay-border-radius);
      pointer-events: none;
    }
  }
}
