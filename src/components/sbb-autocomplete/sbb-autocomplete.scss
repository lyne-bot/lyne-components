@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-overlay-position-x: 0;
  --sbb-overlay-position-y: 0;
  --sbb-overlay-max-height: calc(85vh - var(--sbb-spacing-fixed-8x));
  --sbb-overlay-min-height: #{sbb.px-to-rem-build(120)};
  --sbb-overlay-width: fit-content;
  --sbb-overlay-border-radius: var(--sbb-border-radius-4x);
}

:host(:not([data-state='closed'])) {
  --sbb-menu-inset: 0;
}

::slotted(sbb-divider) {
  margin-block: var(--sbb-spacing-fixed-3x);
}

.sbb-autocomplete__container {
  position: fixed;
  pointer-events: none;
  inset: var(--sbb-menu-inset, unset);
  z-index: var(--sbb-autocomplete-z-index, var(--sbb-overlay-z-index));
}

.sbb-autocomplete__panel {
  display: block;
  visibility: hidden;
  padding-block: var(--sbb-spacing-fixed-3x);
  padding-inline: 0;
  margin: 0;
  border: none;
  border-radius: var(--sbb-overlay-border-radius);
  top: var(--sbb-overlay-position-y);
  left: var(--sbb-overlay-position-x);
  width: var(--sbb-overlay-width);
  max-height: var(--sbb-overlay-max-height);
  min-height: var(--sbb-overlay-min-height);

  &[open] {
    visibility: visible;
    pointer-events: all;
  }
}
