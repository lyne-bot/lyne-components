// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  display: block;

  // TODO: missing design tokens
  --font-family: 'SBBWeb Light';
  --letter-spacing: 0.01em;
  --line-height: 1.3;
  --font-size: 24;

  --panel-width: 223;
  --panel-height: 167;
  --button-margin: var(--spacing-responsive-xs-small);
  --panel-padding-inline: var(--spacing-responsive-m-small);
  --panel-padding-block: var(--spacing-responsive-s-small);
  --triangle-height: 33;

  @include mq($from: medium) {
    // TODO: missing design tokens
    --font-size: 32;
    --line-height: 1.3;

    --panel-width: 321;
    --panel-height: 240.11;
    --button-margin: var(--spacing-responsive-xs-medium);
    --panel-padding-inline: var(--spacing-responsive-m-medium);
    --panel-padding-block: var(--spacing-responsive-s-medium);
    --triangle-height: 47.45;
  }

  @include mq($from: wide) {
    // TODO: missing design tokens
    --font-size: 40;
    --line-height: 1.2;

    --panel-width: 428;
    --panel-height: 320.38;
    --panel-padding-inline: var(--spacing-responsive-m-wide);
    --panel-padding-block: var(--spacing-responsive-s-wide);
    --triangle-height: 63.31;
  }

  --background-color: var(--color-red-default);
  --text-color: var(--color-white-default);

  padding-block-start: pxToRem(var(--triangle-height));
  padding-block-end: pxToRem(var(--triangle-height));
}

.panel {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: pxToRem(var(--panel-width));
  min-height: #{pxToRem(var(--panel-height))};
  padding-inline-start: pxToRem(var(--panel-padding-inline));
  padding-inline-end: pxToRem(var(--panel-padding-inline));
  padding-block-start: pxToRem(var(--panel-padding-block));
  padding-block-end: pxToRem(var(--panel-padding-block));
  background-color: var(--background-color);

  @include ifForcedColors {
    border: pxToRem(1) solid CanvasText;
  }
}

.panel:before,
.panel:after {
  content: '';
  position: absolute;
  left: 0;
  width: 0;
  height: 0;
  z-index: 0;
  border-inline-end: pxToRem(var(--panel-width)) solid transparent;

  @include ifForcedColors {
    display: none;
  }
}

.panel:before {
  top: calc(-1 * #{pxToRem(var(--triangle-height))});
  border-block-end: pxToRem(var(--triangle-height)) solid var(--background-color);
}

.panel:after {
  bottom: calc(-1 * #{pxToRem(var(--triangle-height))});
  border-block-start: pxToRem(var(--triangle-height)) solid var(--background-color);
}

.panel__text {
  padding: 0;
  margin: 0;
  color: var(--color-white-default);
  font-family: var(--font-family);
  font-size: pxToRem(var(--font-size));
  font-weight: normal;
  letter-spacing: var(--letter-spacing);
  line-height: var(--line-height);
  -webkit-font-smoothing: antialiased;
  z-index: 1;
}

.panel__button {
  margin-top: pxToRem(var(--button-margin));
  z-index: 1;
}
