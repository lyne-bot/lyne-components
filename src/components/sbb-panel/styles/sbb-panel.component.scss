// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  display: block;

  // TODO: missing design tokens
  --font-family: 'SBBWeb Light';
  --letter-spacing: 0.01em;
  --line-height: 1.3;
  --font-size: #{px-to-rem-build(24)};
  --panel-width: #{px-to-rem-build(223)};
  --panel-height: #{px-to-rem-build(167)};
  --button-margin: var(--sbb-spacing-responsive-xs-small);
  --panel-padding-inline: var(--sbb-spacing-responsive-m-small);
  --panel-padding-block: var(--sbb-spacing-responsive-s-small);
  --triangle-height: #{px-to-rem-build(33)};

  @include mq($from: medium) {
    // TODO: missing design tokens
    --font-size: #{px-to-rem-build(32)};
    --line-height: 1.3;
    --panel-width: #{px-to-rem-build(321)};
    --panel-height: #{px-to-rem-build(240.11)};
    --button-margin: var(--sbb-spacing-responsive-xs-medium);
    --panel-padding-inline: var(--sbb-spacing-responsive-m-medium);
    --panel-padding-block: var(--sbb-spacing-responsive-s-medium);
    --triangle-height: #{px-to-rem-build(47.45)};
  }

  @include mq($from: wide) {
    // TODO: missing design tokens
    --font-size: #{px-to-rem-build(40)};
    --line-height: 1.2;
    --panel-width: #{px-to-rem-build(428)};
    --panel-height: #{px-to-rem-build(320.38)};
    --panel-padding-inline: var(--sbb-spacing-responsive-m-wide);
    --panel-padding-block: var(--sbb-spacing-responsive-s-wide);
    --triangle-height: #{px-to-rem-build(63.31)};
  }

  --background-color: var(--sbb-color-red-default);
  --text-color: var(--sbb-color-white-default);

  padding-block-start: var(--triangle-height);
  padding-block-end: var(--triangle-height);
}

.panel {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: var(--panel-width);
  min-height: var(--panel-height);
  padding-inline-start: var(--panel-padding-inline);
  padding-inline-end: var(--panel-padding-inline);
  padding-block-start: var(--panel-padding-block);
  padding-block-end: var(--panel-padding-block);
  background-color: var(--background-color);

  @include ifForcedColors {
    border: #{px-to-rem-build(1)} solid CanvasText;
  }
}

.panel::before,
.panel::after {
  content: '';
  position: absolute;
  left: 0;
  width: 0;
  height: 0;
  z-index: 0;
  border-inline-end: var(--panel-width) solid transparent;

  @include ifForcedColors {
    display: none;
  }
}

.panel::before {
  top: calc(-1 * var(--triangle-height));
  border-block-end: var(--triangle-height) solid var(--background-color);
}

.panel::after {
  bottom: calc(-1 * var(--triangle-height));
  border-block-start: var(--triangle-height) solid var(--background-color);
}

.panel__text {
  padding: 0;
  margin: 0;
  color: var(--sbb-color-white-default);
  font-family: var(--font-family);
  font-size: var(--font-size);
  font-weight: normal;
  letter-spacing: var(--letter-spacing);
  line-height: var(--line-height);
  -webkit-font-smoothing: antialiased;
  z-index: 1;
}

.panel__button {
  margin-top: var(--button-margin);
  z-index: 1;
}
