// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host([dir=rtl]) {
  --lyne-amount-spacing-override: 0 calc(var(--spacing-fixed-1x) / var(--typo-scale-default) * 1rem) 0 0;
}

.tab-group {
  display: flex;
  flex-wrap: wrap;
  gap: calc(var(--spacing-fixed-3x) / var(--typo-scale-default) * 1rem);

  ::slotted(h1),
  ::slotted(h2),
  ::slotted(h3),
  ::slotted(h4),
  ::slotted(h5),
  ::slotted(h6) {
    @include title;
    line-height: var(--typo-line-height-body-text);
    font-size: calc(var(--typo-scale-0-75x) / var(--typo-scale-default) * 1rem);
    display: inline-block;
    vertical-align: middle;
    padding: calc(var(--spacing-fixed-2x) / var(--typo-scale-default) * 1rem) calc(var(--spacing-fixed-5x) / var(--typo-scale-default) * 1rem);
    border: calc(var(--border-width-1x) / var(--typo-scale-default) * 1rem) solid var(--color-cloud-default);
    border-radius: calc(var(--spacing-fixed-5x) / var(--typo-scale-default) * 1rem);
    color: var(--color-black-default);
    background-color: transparent;
    -webkit-tap-highlight-color: transparent;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: color var(--animation-form-element-state-duration) var(--animation-form-element-state-easing),
                border var(--animation-form-element-state-duration) var(--animation-form-element-state-easing),
                background-color var(--animation-form-element-state-duration) var(--animation-form-element-state-easing);
    @include mq($from: medium) {
      font-size: calc(var(--typo-scale-0-875x) / var(--typo-scale-default) * 1rem);
    }
  }

  ::slotted(h1:hover),
  ::slotted(h2:hover),
  ::slotted(h3:hover),
  ::slotted(h4:hover),
  ::slotted(h5:hover),
  ::slotted(h6:hover) {
    cursor: pointer;
    background-color: var(--color-milk-default);
  }

  ::slotted(h1:focus-visible),
  ::slotted(h2:focus-visible),
  ::slotted(h3:focus-visible),
  ::slotted(h4:focus-visible),
  ::slotted(h5:focus-visible),
  ::slotted(h6:focus-visible) {
    outline: calc(var(--border-width-1x) / var(--typo-scale-default) * 1rem) solid var(--color-black-default);
    outline-offset: calc((var(--border-width-1x) + var(--border-width-2x)) / var(--typo-scale-default) * 1rem);
  }

  ::slotted(h1:active),
  ::slotted(h2:active),
  ::slotted(h3:active),
  ::slotted(h4:active),
  ::slotted(h5:active),
  ::slotted(h6:active) {
    border-color: var(--color-black-default);
    background-color: transparent;
  }

  ::slotted(h1[active]),
  ::slotted(h2[active]),
  ::slotted(h3[active]),
  ::slotted(h4[active]),
  ::slotted(h5[active]),
  ::slotted(h6[active]) {
    border-color: var(--color-black-default);
    background-color: var(--color-black-default);
    color: var(--color-white-default);
  }

  ::slotted(h1[disabled]),
  ::slotted(h2[disabled]),
  ::slotted(h3[disabled]),
  ::slotted(h4[disabled]),
  ::slotted(h5[disabled]),
  ::slotted(h6[disabled]) {
    cursor: unset;
    position: relative;
    pointer-events: none;
    background-color: var(--color-milk-default);
    border-color: var(--color-milk-default);
    color: var(--color-platinum-default);
    --lyne-amount-color-override: var(--color-platinum-default);
    //text-decoration: line-through;
    &:after {
      content: '';
      position: absolute;
      top: 50%;
      left: calc(var(--spacing-fixed-5x) / var(--typo-scale-default) * 1rem);
      width: calc(100% - (var(--spacing-fixed-10x) / var(--typo-scale-default) * 1rem));
      border-bottom: calc(var(--border-width-2x) / var(--typo-scale-default) * 1rem) solid var(--color-platinum-default);
    }
  }
}

.tab-content {
  @include text;
  font-size: calc(var(--typo-scale-0-75x) / var(--typo-scale-default) * 1rem);
  margin-top: calc(var(--spacing-responsive-m-small) / var(--typo-scale-default) * 1rem);
  color: var(--color-iron-default);
  ::slotted(div) {
    opacity: 0;
    visibility: hidden;
    height: 0;
  }
  ::slotted(div[active]) {
    opacity: 1;
    visibility: visible;
    height: 100%;
    transition: opacity var(--animation-form-element-state-duration) var(--animation-form-element-state-duration) var(--animation-form-element-state-easing),
                visibility var(--animation-form-element-state-duration) var(--animation-form-element-state-duration) var(--animation-form-element-state-easing);
  }
}
