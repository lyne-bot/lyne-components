// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

.tab-group {
  display: flex;
  flex-wrap: wrap;
  gap: pxToRem(var(--spacing-fixed-3x));

  ::slotted(h1),
  ::slotted(h2),
  ::slotted(h3),
  ::slotted(h4),
  ::slotted(h5),
  ::slotted(h6) {
    margin: 0;
    @include text-xs--bold;
    line-height: var(--typo-line-height-body-text);
    display: inline-block;
    vertical-align: middle;
    padding-block: pxToRem(var(--spacing-fixed-2x));
    padding-inline: pxToRem(var(--spacing-fixed-5x));
    border-radius: pxToRem(var(--spacing-fixed-5x));
    -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-cloud-default);
    -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-cloud-default);
    box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-cloud-default);
    color: var(--color-black-default);
    background-color: transparent;
    -webkit-tap-highlight-color: transparent;
    @include ellipsis;
    transition-duration: var(--animation-duration-4x);
    transition-timing-function: var(--animation-easing);
    transition-property: color, background-color, box-shadow, padding-block;
  }

  ::slotted(h1:active),
  ::slotted(h2:active),
  ::slotted(h3:active),
  ::slotted(h4:active),
  ::slotted(h5:active),
  ::slotted(h6:active) {
    -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    background-color: transparent;
  }

  ::slotted(h1:focus-visible),
  ::slotted(h2:focus-visible),
  ::slotted(h3:focus-visible),
  ::slotted(h4:focus-visible),
  ::slotted(h5:focus-visible),
  ::slotted(h6:focus-visible) {
    outline: pxToRem(var(--border-width-1x)) solid var(--color-black-default);
    outline-offset: calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-2x)));
    -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
  }

  ::slotted(h1[active]),
  ::slotted(h2[active]),
  ::slotted(h3[active]),
  ::slotted(h4[active]),
  ::slotted(h5[active]),
  ::slotted(h6[active]) {
    -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    background-color: var(--color-black-default);
    color: var(--color-white-default);
  }

  ::slotted(h1[disabled]),
  ::slotted(h2[disabled]),
  ::slotted(h3[disabled]),
  ::slotted(h4[disabled]),
  ::slotted(h5[disabled]),
  ::slotted(h6[disabled]) {
    cursor: unset;
    position: relative;
    pointer-events: none;
    background-color: var(--color-milk-default);
    -webkit-box-shadow:inset 0 0 0 pxToRem(var(--border-width-1x)) var(--color-milk-default);
    -moz-box-shadow:inset 0 0 0 pxToRem(var(--border-width-1x)) var(--color-milk-default);
    box-shadow:inset 0 0 0 pxToRem(var(--border-width-1x)) var(--color-milk-default);
    color: var(--color-platinum-default);
    --lyne-amount-color-override: var(--color-platinum-default);
    &:after {
      content: '';
      position: absolute;
      inset: 50% pxToRem(var(--spacing-fixed-5x));
      transform: translateY(-50%);
      border-bottom: pxToRem(var(--border-width-2x)) solid var(--color-platinum-default);
    }
  }

  @media (hover: hover) { /* when supported */
    ::slotted(h1:hover),
    ::slotted(h2:hover),
    ::slotted(h3:hover),
    ::slotted(h4:hover),
    ::slotted(h5:hover),
    ::slotted(h6:hover) {
      cursor: pointer;
      background-color: var(--color-milk-default);
      -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-2x)) var(--color-milk-default), 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-cloud-default);
      -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-2x)) var(--color-milk-default), 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-cloud-default);
      box-shadow: 0 0 0 pxToRem(var(--border-width-2x)) var(--color-milk-default), 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-cloud-default);
      padding-block: calc(pxToRem(var(--spacing-fixed-2x)) - pxToRem(var(--border-width-1x))) calc(pxToRem(var(--spacing-fixed-2x)) + pxToRem(var(--border-width-1x)));
    }

    ::slotted(h1[active]:hover),
    ::slotted(h2[active]:hover),
    ::slotted(h3[active]:hover),
    ::slotted(h4[active]:hover),
    ::slotted(h5[active]:hover),
    ::slotted(h6[active]:hover) {
      -webkit-box-shadow: 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-black-default);
      -moz-box-shadow: 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-black-default);
      box-shadow: 0 0 0 calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-1x))) var(--color-black-default);
      background-color: var(--color-black-default);
      color: var(--color-white-default);
    }

    ::slotted(h1[active]:focus-visible:hover),
    ::slotted(h2[active]:focus-visible:hover),
    ::slotted(h3[active]:focus-visible:hover),
    ::slotted(h4[active]:focus-visible:hover),
    ::slotted(h5[active]:focus-visible:hover),
    ::slotted(h6[active]:focus-visible:hover) {
      outline: pxToRem(var(--border-width-1x)) solid var(--color-black-default);
      outline-offset: calc(pxToRem(var(--border-width-2x)) + pxToRem(var(--border-width-2x)));
      -webkit-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
      -moz-box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
      box-shadow: 0 0 0 pxToRem(var(--border-width-1x)) var(--color-black-default);
    }
  }
}

.tab-content {
  @include text-xs--regular;
  color: var(--color-iron-default);
  margin-top: pxToRem(var(--spacing-responsive-m));
  transition: height var(--animation-duration-4x) var(--animation-easing);
  ::slotted(div) {
    opacity: 0;
    visibility: hidden;
    height: 0;
  }
  ::slotted(div[active]) {
    opacity: 1;
    visibility: visible;
    height: fit-content;
    transition: opacity var(--animation-duration-4x) var(--animation-duration-4x) var(--animation-easing),
                visibility var(--animation-duration-4x) var(--animation-duration-4x) var(--animation-easing);
  }
}

