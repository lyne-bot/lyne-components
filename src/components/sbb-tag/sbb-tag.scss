// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-tag-height: #{px-to-rem-build(36)};
  --sbb-tag-border-radius: var(--sbb-tag-height);
  --sbb-tag-background-color: var(--sbb-color-white-default);
  --sbb-tag-border-color: var(--sbb-color-cloud-default);
  --sbb-tag-text-color: var(--sbb-color-charcoal-default);
  --sbb-tag-amount-color: var(--sbb-color-metal-default);

  @include mq($from: medium) {
    --sbb-tag-height: #{px-to-rem-build(40)};
  }

  display: inline-block;
  max-width: 100%;
}

:host([checked]) {
  --sbb-tag-border-color: var(--sbb-color-charcoal-default);
}

:host([disabled]) {
  --sbb-tag-text-color: var(--sbb-color-platinum-default);
  --sbb-tag-amount-color: var(--sbb-color-platinum-default);
  --sbb-tag-background-color: var(--sbb-color-milk-default);
}

.sbb-tag {
  position: relative;

  // If the the device can hover over elements with ease
  @include hover-mq($hover: true) {
    // stylelint-disable plugin/stylelint-bem-namics
    :host(:not([disabled])) &:hover {
      --sbb-tag-background-color: var(--sbb-color-cloud-default);
    }
    // stylelint-enable plugin/stylelint-bem-namics
  }
}

.sbb-tag__wrapper {
  position: relative;
  margin: 0;
  min-height: var(--sbb-tag-height);
  max-height: var(--sbb-tag-height);
  display: flex;
  align-items: center;
  gap: var(--sbb-spacing-fixed-2x);
  padding-inline: var(--sbb-spacing-fixed-5x);
  padding-block: var(--sbb-spacing-fixed-2x);
  cursor: pointer;
  background-color: var(--sbb-tag-background-color);
  border-radius: var(--sbb-tag-border-radius);
  color: var(--sbb-tag-text-color);

  &:active {
    --sbb-tag-background-color: var(--sbb-color-milk-default);
    --sbb-tag-border-color: var(--sbb-color-iron-default);
  }

  &::before {
    position: absolute;
    content: '';
    inset: 0;
    border: var(--sbb-border-width-1x) solid var(--sbb-tag-border-color);
    border-radius: var(--sbb-tag-border-radius);
  }

  :host([disabled]) & {
    cursor: unset;
    pointer-events: none;

    &::after {
      content: '';
      inset: 50% var(--sbb-spacing-fixed-5x);
      border-block-end: var(--sbb-border-width-2x) solid var(--sbb-color-platinum-default);
      @include absoluteCenterY;
    }
  }
}

.sbb-tag__icon {
  display: flex;
  align-items: center;
}

.sbb-tag__text {
  @include text-xs--bold;
  @include ellipsis;
}

.sbb-tag__amount {
  @include text-xs--regular;

  color: var(--sbb-tag-amount-color);
}

input[type='checkbox'] {
  @include invisibleContainerOverlay;
}

input[type='checkbox']:focus-visible + .sbb-tag__label--wrapper {
  @include focusOutline;

  outline-offset: var(--sbb-spacing-fixed-1x);
}
