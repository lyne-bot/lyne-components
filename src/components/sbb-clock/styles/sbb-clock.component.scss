// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  --clock-hours-animation-start-angle: 0deg;
  --clock-seconds-animation-start-angle: 0deg;
  --clock-hours-animation-duration: 0s;
  --clock-seconds-animation-duration: 0s;
  --clock-animation-play-state: paused;
}

.sbb-clock {
  position: relative;
  width: 100%;
  height: 100%;
  aspect-ratio: 1 / 1;
  overflow: hidden;
  contain: content;
}

.sbb-clock__hand-hours,
.sbb-clock__hand-minutes,
.sbb-clock__hand-seconds {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  transform-origin: center center;
  transform: rotateZ(0deg);
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.sbb-clock--not-initialized .sbb-clock__hand-hours,
.sbb-clock--not-initialized .sbb-clock__hand-minutes,
.sbb-clock--not-initialized .sbb-clock__hand-seconds {
  display: none;
}

.sbb-clock__hand-minutes {
  @supports not (aspect-ratio: 1 / 1) {
    transform-origin: 50% 49.625%;
  }
}

.sbb-clock__hand-hours {
  animation-name: rotate;
  animation-duration: 43200s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-play-state: var(--clock-animation-play-state);
}

.sbb-clock__hand-hours--initial-hour {
  animation-name: handHoursAnimationInitialHour;
  animation-duration: var(--clock-hours-animation-duration);
  animation-play-state: var(--clock-animation-play-state);
  animation-iteration-count: 1;
}

.sbb-clock__hand-minutes {
  transition: transform 0.2s cubic-bezier(0.4, 2.08, 0.55, 0.44);
}

.sbb-clock__hand-minutes--no-transition {
  transition: none;
}

.sbb-clock__hand-seconds {
  animation-name: handSecondsAnimation;
  animation-duration: 60s;
  animation-timing-function: linear;
  animation-play-state: var(--clock-animation-play-state);
  animation-iteration-count: infinite;
  fill: var(--color-red-default);
}

.sbb-clock__hand-seconds--initial-minute {
  animation-name: handSecondsAnimationInitialMinute;
  animation-duration: var(--clock-seconds-animation-duration);
  animation-play-state: var(--clock-animation-play-state);
  animation-iteration-count: 1;
}

@keyframes rotate {
  100% {
    transform: rotateZ(360deg);
  }
}

@keyframes handHoursAnimationInitialHour {
  0% {
    transform: rotateZ(var(--clock-hours-animation-start-angle));
  }
  100% {
    transform: rotateZ(720deg);
  }
}

@keyframes handSecondsAnimation {
  0% {
    transform: rotateZ(0deg);
  }
  97.5%,
  100% {
    transform: rotateZ(360deg);
  }
}

@keyframes handSecondsAnimationInitialMinute {
  0% {
    transform: rotateZ(var(--clock-seconds-animation-start-angle));
  }
  97.5%,
  100% {
    transform: rotateZ(360deg);
  }
}
