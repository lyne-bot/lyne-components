@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-map-container-map-height-tiny: #{sbb.px-to-rem-build(295)};
  --sbb-map-container-map-height-small: #{sbb.px-to-rem-build(320)};
  --sbb-map-container-sidebar-width: #{sbb.px-to-rem-build(400)};
  --sbb-map-container-sidebar-background-color: var(--sbb-color-white-default);
}

.sbb-map-container {
  display: grid;
  grid-template-rows: auto auto;
  height: 100%;

  @include sbb.mq($from: medium) {
    grid-template-columns: max(var(--sbb-map-container-sidebar-width)) calc(
        100% - var(--sbb-map-container-sidebar-width)
      );
    width: 100vw;
    height: calc(100vh - var(--sbb-header-height));
    overflow: hidden;
  }
}

.sbb-map-container__sidebar {
  grid-column: 1 / 3;
  grid-row: 2 / 3;
  width: 100%;
  height: calc(100% + var(--sbb-border-radius-4x));
  overflow-y: scroll;
  overflow-x: hidden;
  position: relative;
  z-index: 2;
  border-top-right-radius: var(--sbb-border-radius-4x);
  border-top-left-radius: var(--sbb-border-radius-4x);
  margin-block-start: calc(var(--sbb-border-radius-4x) * -1);
  background-color: var(--sbb-map-container-sidebar-background-color);

  @include sbb.mq($from: medium) {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    border-radius: 0;
    margin-block-start: 0;
  }
}

.sbb-map-container__map {
  position: sticky;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1;
  grid-row: 1 / 2;
  grid-column: 1 / 3;
  height: calc(var(--sbb-map-container-map-height-tiny) + var(--sbb-border-radius-4x));

  @include sbb.mq($from: small) {
    height: calc(var(--sbb-map-container-map-height-small) + var(--sbb-border-radius-4x));
  }

  @include sbb.mq($from: medium) {
    grid-row: 1 / 3;
    grid-column: 2 / 3;
    height: 100%;
    position: relative;
  }
}
