// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  display: block;

  --item-margin-block: 0;

  // used in accordion-item
  --body-padding-inline: 0rem;
  --header-padding-inline: 0;
  --border-width: var(--sbb-border-width-1x);
  --border-radius-start-start: 0;
  --border-radius-start-end: 0;
  --border-radius-end-start: 0;
  --border-radius-end-end: 0;
  --color-background-hover: var(--sbb-color-white-default);

  @include ifForcedColors {
    --item-margin-block: var(--sbb-spacing-fixed-1x);
    --body-padding-inline: var(--sbb-spacing-fixed-6x);
    --header-padding-inline: var(--sbb-spacing-fixed-6x);
  }
}

.accordion--non-white {
  --item-margin-block: var(--sbb-spacing-fixed-1x);

  // used in accordion-item
  --body-padding-inline: var(--sbb-spacing-fixed-6x);
  --header-padding-inline: var(--sbb-spacing-fixed-6x);
  --border-width: 0;
  --border-radius-start-start: var(--sbb-border-radius-1x);
  --border-radius-start-end: var(--sbb-border-radius-1x);
  --border-radius-end-start: var(--sbb-border-radius-1x);
  --border-radius-end-end: var(--sbb-border-radius-1x);
  --color-background-hover: var(--sbb-color-white-alpha-60);
}

/* stylelint-disable-next-line plugin/stylelint-bem-namics */
::slotted(sbb-accordion-item:not(:first-child)) {
  margin-block-start: var(--item-margin-block);
}

::slotted(sbb-accordion-item:first-child) {
  --border-radius-start-start: var(--sbb-border-radius-8x);
  --border-radius-start-end: var(--sbb-border-radius-8x);
}

::slotted(sbb-accordion-item:last-child) {
  --border-radius-end-start: var(--sbb-border-radius-8x);
  --border-radius-end-end: var(--sbb-border-radius-8x);
  --border-width: 0;
}
