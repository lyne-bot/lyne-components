@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-navigation-section-column: 1 / 5;
  --sbb-navigation-section-position: fixed;
  --sbb-navigation-section-animation-duration: var(--sbb-animation-duration-3x);
  --sbb-navigation-section-animation-easing: ease-out;
  --sbb-navigation-section-padding-inline: var(--sbb-layout-base-offset-responsive);
  --sbb-navigation-section-padding-block: var(--sbb-spacing-responsive-l);
  --sbb-navigation-section-transform: translateX(100%);
  --sbb-navigation-section-list-padding-inline-start: var(--sbb-spacing-fixed-12x);
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);

  position: var(--sbb-navigation-section-position);
  grid-column: var(--sbb-navigation-section-column);
  left: 0;
  top: 0;
  z-index: 10;

  ::slotted(sbb-navigation-list) {
    padding-inline-start: var(--sbb-navigation-section-list-padding-inline-start);
  }

  @include sbb.mq($from: large) {
    --sbb-navigation-section-column: 5 / 9;
    --sbb-navigation-section-animation-duration: var(--sbb-animation-duration-4x);
    --sbb-navigation-section-padding-block: var(--sbb-spacing-responsive-xl);
    --sbb-navigation-section-padding-inline: var(--sbb-spacing-fixed-14x)
      var(--sbb-layout-base-offset-responsive);
    --sbb-navigation-section-position: absolute;
    --sbb-navigation-section-transform: translateX(0%);
    --sbb-navigation-section-list-padding-inline-start: 0;
  }

  @include sbb.mq($from: wide) {
    --sbb-navigation-section-column: 5 / 13;
  }

  @include sbb.mq($from: ultra) {
    --sbb-navigation-section-padding-block-start: var(--sbb-spacing-responsive-xxl);
  }
}

/* stylelint-disable-next-line plugin/stylelint-bem-namics */
:host(:not(.sbb-navigation-section--closed)) {
  inset: 0;
}

:host([disable-animation]) {
  --sbb-navigation-section-animation-duration: 0s;
}

.sbb-navigation-section {
  visibility: hidden;
  opacity: 0;
  border: none;
  pointer-events: none;
  margin: 0;
  width: 100%;
  height: 100%;
  color: var(--sbb-color-white-default);
  background-color: transparent;
  padding: 0;
  overflow: hidden;

  &[open] {
    visibility: visible;
    opacity: 1;
    pointer-events: all;

    animation: {
      name: open;
      duration: var(--sbb-navigation-section-animation-duration);
      timing-function: var(--sbb-navigation-section-animation-easing);
    }
  }

  :host(.sbb-navigation-section--closing) & {
    pointer-events: none;
    animation-name: close;
  }

  @include sbb.if-forced-colors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }
}

.sbb-navigation-section__wrapper {
  @include sbb.scrollbar-dark;

  height: 100%;
  padding-block: var(--sbb-navigation-section-padding-block);
  outline: none;
  overflow-y: auto;

  :host(.sbb-navigation-section--opening) &,
  :host(.sbb-navigation-section--closing) & {
    --sbb-scrollbar-color: transparent;

    scrollbar-color: transparent transparent;
  }
}

.sbb-navigation-section__title {
  display: flex;
  align-items: center;
  gap: var(--sbb-spacing-fixed-1x);
  margin-block-start: var(--sbb-spacing-responsive-xxl);

  @include sbb.mq($from: large) {
    margin-block-start: 0;
  }

  @include sbb.mq($from: wide) {
    grid-column: 1 / 4;
  }
}

.sbb-navigation-section__back {
  @include sbb.mq($from: large) {
    display: none;
  }
}

.sbb-navigation-section__content {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: var(--sbb-spacing-responsive-l) var(--sbb-grid-base-gutter-responsive);
  padding-inline: var(--sbb-navigation-section-padding-inline);

  @include sbb.mq($from: large) {
    opacity: 0;
    transform: translateY(var(--sbb-spacing-fixed-3x));
    transition: {
      duration: var(--sbb-navigation-section-animation-duration);
      delay: var(--sbb-navigation-section-animation-duration);
      timing-function: var(--sbb-navigation-section-animation-easing);
      property: opacity, transform;
    }

    :host(.sbb-navigation-section--opened) & {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @include sbb.mq($from: wide) {
    grid-template-columns: repeat(3, 1fr);
    border-inline-start: var(--sbb-border-width-1x) solid var(--sbb-color-charcoal-default);
  }

  :host(.sbb-navigation-section--closing) & {
    transition-delay: 0s;
  }
}

@keyframes open {
  from {
    transform: var(--sbb-navigation-section-transform);
  }

  to {
    transform: translate(0%, 0%);
  }
}

@keyframes close {
  from {
    transform: translate(0%, 0%);
  }

  to {
    transform: var(--sbb-navigation-section-transform);
  }
}
