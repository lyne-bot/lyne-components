@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  // Users can override this var to apply padding to container's content
  --sbb-container-padding: 0;
}

:host([color='white']) {
  --sbb-container-background-color: var(--sbb-color-white-default);
}

:host([color='milk']) {
  --sbb-container-background-color: var(--sbb-color-milk-default);
}

.sbb-container {
  background-color: var(--sbb-container-background-color, transparent);
  padding: var(--sbb-container-padding);

  // We use overflow here to support slotted element with a margin-block-start. Otherwise the margin will get applied outside the container.
  overflow: auto;

  :host(:not([expanded])) & {
    @include sbb.page-spacing;
  }

  :host([expanded]) & {
    @include sbb.page-spacing-expanded;
  }
}
