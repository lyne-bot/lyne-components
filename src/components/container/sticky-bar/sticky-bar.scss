@use '../../core/styles' as sbb;

:host {
  @include sbb.box-sizing;

  --sbb-sticky-bar-padding-block: var(--sbb-spacing-responsive-xxxs);
  --sbb-sticky-bar-animation-duration: var(--sbb-animation-duration-5x);
  --sbb-sticky-bar-animation-easing: var(--sbb-animation-easing);
  --sbb-sticky-bar-intersector-height: #{sbb.px-to-rem-build(1)};
  --sbb-sticky-bar-background-color: var(--sbb-container-background-color);
  --sbb-sticky-bar-sticky-background-color: var(
    --sbb-sticky-bar-background-color,
    var(--sbb-color-white-default)
  );

  display: contents;
}

:host([color='white']) {
  --sbb-sticky-bar-sticky-background-color: var(--sbb-color-white-default);
}

:host([color='milk']) {
  --sbb-sticky-bar-sticky-background-color: var(--sbb-color-milk-default);
}

:host([color='midnight']) {
  --sbb-sticky-bar-sticky-background-color: var(--sbb-color-midnight-default);
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);

  color: var(--sbb-color-white-default);
}

.sbb-sticky-bar__wrapper {
  box-shadow: none;
  position: sticky;
  inset-block-end: 0;
  display: block;
  width: 100%;
  transition-property: box-shadow, background-color;
  transition-duration: var(--sbb-sticky-bar-animation-duration);
  transition-timing-function: var(--sbb-sticky-bar-animation-easing);

  :host([data-sticking]) & {
    @include sbb.shadow-level-5-hard;

    background-color: var(--sbb-sticky-bar-sticky-background-color);

    @include sbb.if-forced-colors {
      border-block-start: var(--sbb-border-width-1x) solid CanvasText;
    }
  }
}

.sbb-sticky-bar {
  display: flex;
  padding-block: var(--sbb-sticky-bar-padding-block);
  background-color: var(--sbb-sticky-bar-background-color, transparent);

  :host(:not([data-expanded])) & {
    @include sbb.page-spacing;
  }

  :host([data-expanded]) & {
    @include sbb.page-spacing-expanded;
  }

  // Should only be animated if there is an override color in sticky bar when becoming settled.
  :host(:not([data-sticking])[color]) & {
    transition-property: background-color;
    transition-duration: var(--sbb-sticky-bar-animation-duration);
    transition-timing-function: var(--sbb-sticky-bar-animation-easing);
  }

  // When having a color defined, transparent background should always be chosen as the wrapper is now dominating the color.
  :host([data-sticking][color]) & {
    background-color: transparent;
  }
}

.sbb-sticky-bar__intersector {
  position: absolute;
  width: 100%;
  height: var(--sbb-sticky-bar-intersector-height);
  transform: translateY(calc(var(--sbb-sticky-bar-intersector-height) * -1));
}
