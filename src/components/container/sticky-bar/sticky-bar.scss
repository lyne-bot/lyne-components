@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-sticky-bar-padding-block: var(--sbb-spacing-responsive-xxxs);
  --sbb-sticky-bar-animation-duration: var(--sbb-animation-duration-5x);

  display: contents;
}

.sbb-sticky-bar__wrapper {
  @include sbb.shadow-level-5-hard;

  position: sticky;
  inset-block-end: 0;
  display: inline-block;
  width: 100%;
  background-color: var(--sbb-sticky-bar-bg-color);
  transition-property: box-shadow;
  transition-duration: var(--sbb-sticky-bar-animation-duration);

  :host([data-settled]) & {
    background-color: transparent;
    box-shadow: none;
  }
}

.sbb-sticky-bar {
  display: flex;
  padding-block: var(--sbb-sticky-bar-padding-block);

  :host(:not([data-expanded])) & {
    @include sbb.page-spacing;
  }

  :host([data-expanded]) & {
    @include sbb.page-spacing-expanded;
  }
}

span {
  display: block;
}
