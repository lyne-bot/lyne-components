@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  display: contents;
}

.sbb-sticky-bar {
  position: sticky;
  display: flex;
  width: 100%;
  bottom: 0;
  background-color: var(--sbb-sticky-bar-bg-color);
  padding-block: var(--sbb-spacing-responsive-xxxs);
}

.sbb-sticky-bar::before {
  @include sbb.shadow-level-5-hard;

  position: absolute;
  display: inline-block;
  content: '';
  height: 100%;
  width: var(--sbb-sticky-bar-width);
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--sbb-sticky-bar-bg-color);
  animation: fade 1s linear 1 normal both paused;
  animation-delay: calc(var(--sbb-sticky-bar-scroll, 0) * -1s);
}

.sbb-sticky-bar__settled {
  background-color: transparent;
}

.sbb-sticky-bar__settled::before {
  background-color: transparent;
  box-shadow: none;
}

@keyframes fade {
  from {
    @include sbb.shadow-level-5-hard;

    background-color: var(--sbb-sticky-bar-bg-color);
  }

  to {
    background-color: transparent;
    box-shadow: none;
  }
}
