@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-toggle-option-cursor: pointer;
  --sbb-toggle-option-color: var(--sbb-color-anthracite-default);
  --sbb-toggle-option-icon-min-size: var(--sbb-size-icon-ui-small);
  --sbb-toggle-option-border-radius: var(--sbb-border-radius-16x);
  --sbb-toggle-option-line-height: calc(1em * var(--sbb-typo-line-height-body-text));

  display: inline-block;
  overflow: hidden;
  z-index: 1;
}

:host(:focus-visible) {
  outline: none;
}

:host([checked]) {
  --sbb-toggle-option-color: var(--sbb-color-charcoal-default);
}

:host([disabled]) {
  --sbb-toggle-option-cursor: unset;
  --sbb-toggle-option-color: var(--sbb-color-graphite-default);
}

input[type='radio'] {
  @include sbb.screen-reader-only;
}

.sbb-toggle-option {
  @include sbb.text-xs--bold;

  cursor: var(--sbb-toggle-option-cursor);
  display: flex;
  justify-content: center;
  align-items: center;
  height: var(--sbb-toggle-height);
  min-width: var(--sbb-toggle-min-width);
  padding-inline: var(--sbb-toggle-padding-inline);
  border-radius: var(--sbb-toggle-option-border-radius);
  color: var(--sbb-toggle-option-color);

  &:not(.sbb-toggle-option--icon-only) {
    --sbb-icon-margin-inline: 0 var(--sbb-spacing-fixed-1x);
  }
}

.sbb-toggle-option__label {
  @include sbb.ellipsis;

  // We need to use a ::before pseudo-element to show a single outline wrapping
  // the entire toggle when a toggle option receives :focus-visible.
  :host(:focus-visible) & {
    ::before {
      content: '';
      position: absolute;
      pointer-events: none;
      inset: calc(var(--sbb-focus-outline-offset) * -2);
      border: var(--sbb-focus-outline-color) solid var(--sbb-focus-outline-width);
      border-radius: var(--sbb-toggle-option-border-radius);
    }
  }
}

sbb-icon,
::slotted(sbb-icon) {
  min-width: var(--sbb-toggle-option-icon-min-size);
  min-height: var(--sbb-toggle-option-icon-min-size);
}
