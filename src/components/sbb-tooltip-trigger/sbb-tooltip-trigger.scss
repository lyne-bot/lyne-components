@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-tooltip-color: inherit;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize css of several frameworks.
  outline: none !important;
  display: inline-block;

  @include sbb.if-forced-colors {
    --sbb-tooltip-color: ButtonText !important;
  }
}

@include sbb.hover-mq($hover: true) {
  :host(:hover) {
    --sbb-tooltip-color: var(--sbb-color-iron-default);
  }
}

:host(:is(:active, [data-active])) {
  --sbb-tooltip-color: var(--sbb-color-anthracite-default);
}

:host([disabled]:not([disabled='false'])) {
  --sbb-tooltip-color: var(--sbb-color-graphite-default);

  @include sbb.if-forced-colors {
    --sbb-tooltip-color: GrayText;
  }

  pointer-events: none;
}

.sbb-tooltip-trigger {
  :host([data-icon-small]) & {
    @include sbb.icon-button-base('sbb-icon');
  }

  :host(:not([data-icon-small])) & {
    @include sbb.text-inherit;

    display: flex;
    cursor: pointer;
    color: var(--sbb-tooltip-color);
  }

  // Hide focus outline when focus origin is mouse or touch. This is being used in tooltip as a workaround.
  :host(
      :focus-visible:not(
          [data-icon-small],
          [data-focus-origin='mouse'],
          [data-focus-origin='touch']
        )
    )
    & {
    @include sbb.focus-outline;

    border-radius: var(--sbb-border-radius-4x);
  }

  :host([data-icon-small]:is(:active, [data-active])) & {
    @include sbb.icon-button-active;
  }

  :host([data-icon-small]:hover) & {
    @include sbb.icon-button-hover;
  }

  :host([data-icon-small][disabled]:not([disabled='false'])) & {
    @include sbb.icon-button-disabled;
  }

  :host(
      [data-icon-small]:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])
    )
    & {
    @include sbb.focus-outline;
  }
}

sbb-icon {
  min-width: var(--sbb-size-icon-ui-small);
  min-height: var(--sbb-size-icon-ui-small);
}
