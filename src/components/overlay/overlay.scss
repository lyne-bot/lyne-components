@use '../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  @include sbb.scrollbar-variables;

  --sbb-overlay-padding-inline: var(--sbb-spacing-fixed-5x);
  --sbb-overlay-color: var(--sbb-color-black);
  --sbb-overlay-background-color: var(--sbb-color-milk);
  --sbb-overlay-width: 100%;
  --sbb-overlay-height: 100%;
  --sbb-overlay-inset: 0 auto auto 0;
  --sbb-overlay-padding-block: var(--sbb-spacing-responsive-s);
  --sbb-overlay-animation-duration: var(--sbb-animation-duration-6x);
  --sbb-overlay-animation-easing: ease;
  --sbb-overlay-pointer-events: none;
  --sbb-overlay-content-transition: transform var(--sbb-overlay-animation-duration)
    var(--sbb-overlay-animation-easing);

  position: fixed;
  inset: var(--sbb-overlay-inset);
  z-index: var(--sbb-overlay-z-index, var(--sbb-overlay-z-index));

  @include sbb.mq($from: micro) {
    --sbb-overlay-padding-inline: var(--sbb-spacing-fixed-6x);
  }

  @include sbb.mq($from: small) {
    --sbb-overlay-padding-inline: var(--sbb-spacing-fixed-12x);
  }

  @include sbb.mq($from: medium) {
    --sbb-overlay-padding-inline: var(--sbb-spacing-responsive-s);
  }
}

:host(:is([data-state='opened'], [data-state='opening'])) {
  --sbb-overlay-pointer-events: all;
}

:host([negative]) {
  @include sbb.scrollbar-variables--color-negative;

  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
  --sbb-overlay-color: var(--sbb-color-white);
  --sbb-overlay-background-color: var(--sbb-color-midnight);
}

:host([disable-animation]) {
  --sbb-overlay-animation-duration: 0.1ms;
}

:host(:not([data-state='closed'])) {
  --sbb-overlay-inset: 0;
}

.sbb-overlay__container {
  pointer-events: var(--sbb-overlay-pointer-events);
  display: flex;
  align-items: center;
  position: fixed;
  inset: var(--sbb-overlay-inset);
}

.sbb-overlay {
  display: none;
  position: absolute;
  inset-inline: 0;
  margin: auto;
  padding: 0;
  border: none;
  width: var(--sbb-overlay-width);
  height: var(--sbb-overlay-height);
  overflow: auto;
  color: var(--sbb-overlay-color);
  background-color: var(--sbb-overlay-background-color);

  :host([data-state]:not([data-state='closed'])) & {
    display: block;

    animation: {
      name: open;
      duration: var(--sbb-overlay-animation-duration);
      timing-function: ease;
    }
  }

  :host([data-state][data-state='closing']) & {
    pointer-events: none;
    animation-name: close;
  }

  @include sbb.if-forced-colors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }

  @include sbb.mq($from: medium) {
    overflow: hidden;
    height: fit-content;
  }
}

.sbb-overlay__wrapper {
  display: flex;
  flex-direction: column;
  width: var(--sbb-overlay-width);
  height: var(--sbb-overlay-height);
  outline: none;
  position: fixed;
  word-break: break-word;

  :host(:not([expanded])) & {
    @include sbb.page-spacing;
  }

  :host([expanded]) & {
    @include sbb.page-spacing-expanded;
  }

  @include sbb.mq($from: medium) {
    position: sticky;
    inset-block-start: 0;
    height: auto;
  }
}

.sbb-overlay__header {
  position: absolute;
  inset-inline-start: 0;
  display: flex;
  pointer-events: none;
  align-items: start;
  justify-content: space-between;
  width: var(--sbb-overlay-width);
  padding-inline: var(--sbb-spacing-responsive-xs);
  padding-block-start: var(--sbb-spacing-responsive-xs);
  z-index: var(--sbb-overlay-z-index, var(--sbb-overlay-z-index));

  * {
    pointer-events: all;
  }

  :host(:not([expanded])) & {
    @include sbb.page-spacing;
  }

  :host([expanded]) & {
    @include sbb.page-spacing-expanded;
  }
}

.sbb-overlay__close {
  margin-inline-start: auto;
}

.sbb-overlay__content {
  @include sbb.scrollbar-rules;

  height: 100vh;
  padding-inline: var(--sbb-layout-base-offset-responsive);
  padding-block: var(--sbb-spacing-fixed-20x) var(--sbb-overlay-padding-block);
  overflow: auto;
}

// It is necessary to use animations with keyframes instead of transitions in order not to alter
// the default `display: block` of the modal otherwise it causes several problems,
// especially for accessibility.
@keyframes open {
  from {
    opacity: 0;
    transform: translateY(var(--sbb-spacing-fixed-4x));
  }

  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes close {
  from {
    opacity: 1;
    transform: translateY(0%);
  }

  to {
    opacity: 0;
    transform: translateY(var(--sbb-spacing-fixed-4x));
  }
}
