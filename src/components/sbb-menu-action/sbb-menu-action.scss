@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  outline: none;

  --sbb-menu-action-border-radius: var(--sbb-border-radius-infinity);
  --sbb-menu-action-outer-horizontal-padding: var(--sbb-spacing-fixed-3x);
  --sbb-menu-action-gap: var(--sbb-spacing-fixed-2x);
}

.sbb-menu-action {
  @include sbb.button-reset;

  text-decoration: none;
  display: block;
  width: 100%;
  color: var(--sbb-color-white-default);
  padding: var(--sbb-spacing-fixed-1x) var(--sbb-menu-action-outer-horizontal-padding);
  cursor: pointer;

  :host([disabled]:not([disabled='false'])) & {
    cursor: default;
    color: var(--sbb-color-graphite-default);
  }
}

.sbb-menu-action__content {
  @include sbb.text-xs--regular;

  display: flex;
  align-items: center;
  gap: var(--sbb-menu-action-gap);
  padding: var(--sbb-spacing-fixed-1x) var(--sbb-spacing-fixed-2x);
  border-radius: var(--sbb-menu-action-border-radius);
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  :host(:focus-visible) & {
    --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);

    @include sbb.focus-outline;
  }

  @include sbb.hover-mq($hover: true) {
    :host(:not([disabled]:not([disabled='false']))) .sbb-menu-action:hover & {
      background-color: var(--sbb-color-iron-default);
    }
  }
}

.sbb-menu-action__icon {
  display: flex;
  min-width: var(--sbb-size-icon-ui-small);
  min-height: var(--sbb-size-icon-ui-small);
}

.sbb-menu-action__label {
  @include sbb.ellipsis;

  :host([disabled]:not([disabled='false'])) & {
    text-decoration: line-through;
  }
}

.sbb-menu-action__amount {
  @include sbb.badge;

  margin-inline-start: auto;
  width: var(--sbb-spacing-fixed-4x);
  max-height: var(--sbb-spacing-fixed-4x);
}
