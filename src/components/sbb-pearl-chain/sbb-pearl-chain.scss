// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

@mixin dot {
  content: '';
  position: absolute;
  width: var(--dot-size);
  height: var(--dot-size);
  border-radius: 100%;
}

:host {
  display: block;

  --sbb-dot-size-large: #{px-to-rem-build(10)};
  --sbb-dot-size-small: #{px-to-rem-build(8)};
  --sbb-pearl-chain-height: var(--sbb-border-width-2x);
  --sbb-pearl-chain-spacing-small: var(--sbb-spacing-fixed-1x);
  --color-white: var(--sbb-color-white-default);
  --color-default: var(--sbb-color-black-default);
  --color-current-location: var(--sbb-color-red-default);
  --color-current-location-dark: var(--sbb-color-red150-default);
  --color-cancellation: var(--sbb-color-red-default);
  --color-past: var(--sbb-color-metal-default);
  --leg-width: 100%;
}

.sbb-pearl-chain {
  position: relative;
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;
  color: var(--sbb-color-default);
  width: 100%;
  padding-block-start: calc((var(--sbb-dot-size-large) - var(--sbb-pearl-chain-height)) / 2);
  padding-block-end: calc((var(--sbb-dot-size-large) - var(--sbb-pearl-chain-height)) / 2);
  padding-inline-end: var(--sbb-dot-size-large);
}

// first and last dot
.sbb-pearl-chain::before,
.sbb-pearl-chain::after {
  --dot-size: var(--sbb-dot-size-large);
  @include dot;

  background-color: currentcolor;
  inset-block-start: 0;
  z-index: 3;

  @include ifForcedColors {
    background-color: CanvasText;
  }
}

.sbb-pearl-chain::before {
  inset-inline-start: 0;
}

.sbb-pearl-chain::after {
  inset-inline-end: 0;
}

.sbb-pearl-chain.sbb-pearl-chain--past::before,
.sbb-pearl-chain.sbb-pearl-chain--past::after {
  @include ifForcedColors {
    background-color: GrayText;
  }
}

.sbb-pearl-chain--departure-cancellation::before,
.sbb-pearl-chain--arrival-cancellation::after {
  color: var(--color-cancellation);

  @include ifForcedColors {
    background-color: ActiveText;
  }
}

.sbb-pearl-chain--departure-cancellation.pearl-chain--past::before,
.sbb-pearl-chain--arrival-cancellation.pearl-chain--past::after {
  color: var(--color-past);

  @include ifForcedColors {
    color: GrayText;
  }
}

.sbb-pearl-chain--past {
  position: relative;

  @include ifForcedColors {
    color: GrayText;
  }
}

.sbb-pearl-chain__leg {
  flex-shrink: 0;
  flex-grow: 0;
  position: relative;
  height: var(--sbb-pearl-chain-height);
  border-inline-end: var(--sbb-pearl-chain-spacing-small) solid Canvas;
  background-color: currentcolor;
  width: var(--leg-width);

  @include ifForcedColors {
    color: CanvasText;
  }
}

.sbb-pearl-chain__leg:last-of-type {
  border: none;
}

.sbb-pearl-chain__leg--past,
.sbb-pearl-chain--past,
.sbb-pearl-chain__leg--progress::before,
.sbb-pearl-chain--progress::before {
  color: var(--color-past);
}

// dot on leg
.sbb-pearl-chain__leg:not(:first-child) {
  &::before {
    --dot-size: var(--sbb-dot-size-small);
    @include dot;

    inset-block-start: calc(var(--dot-size) / -2 + var(--sbb-pearl-chain-height) / 2);
    inset-inline-start: 0;
    background-color: Canvas;
    border: var(--sbb-pearl-chain-height) solid currentcolor;
    z-index: 2;

    @include ifForcedColors {
      .sbb-pearl-chain--past & {
        border-color: GrayText;
      }
    }
  }
}

// line on leg
.sbb-pearl-chain__leg::after {
  content: '';
  position: absolute;
  inset-block-start: 0;
  inset-block-end: 0;
  inset-inline-start: 0;
  background-color: currentcolor;
  border-radius: var(--sbb-pearl-chain-height);
  z-index: 1;

  @include ifForcedColors {
    background-color: CanvasText;

    .sbb-pearl-chain--past & {
      background-color: GrayText;
    }
  }
}

.sbb-pearl-chain__leg:last-of-type::after {
  inset-inline-end: calc(-1 * var(--sbb-pearl-chain-height));
}

.sbb-pearl-chain__leg--progress::after {
  background-color: var(--color-past);
  width: var(--leg-status);
}

.sbb-pearl-chain__leg--cancellation {
  color: var(--color-cancellation);

  @include ifForcedColors {
    color: ActiveText;
  }
}

.sbb-pearl-chain__leg--cancellation::after {
  background-color: unset;
  background-image: linear-gradient(to right, currentcolor 0%, currentcolor 50%, Canvas 50%);
  background-repeat: repeat-x;
  background-size: calc(2 * var(--sbb-pearl-chain-spacing-small)) var(--sbb-pearl-chain-height);
  inset-inline-end: var(--sbb-pearl-chain-height);
}

.sbb-pearl-chain__leg--cancellation::after,
.sbb-pearl-chain--past .sbb-pearl-chain__leg--cancellation::after {
  @include ifForcedColors {
    background: none;
    border-block-start: #{px-to-rem-build(1)} dashed currentcolor;
    transform: translateY(#{px-to-rem-build(1)});
  }
}

.sbb-pearl-chain__position {
  position: absolute;

  --dot-size: var(--sbb-dot-size-large);
  @include dot;

  background-color: var(--color-current-location);
  inset-block-start: -200%;
  z-index: 4;

  // --status-position: defined in .tsx file
  inset-inline-start: var(--status-position);
  animation: pulse 3s infinite;

  @include ifForcedColors {
    background-color: ActiveText;
  }
}

.sbb-pearl-chain__position--no-animation {
  animation: unset;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--color-current-location-dark);
  }

  40% {
    box-shadow: 0 0 0 #{px-to-rem-build(6)} transparent;
  }
}
