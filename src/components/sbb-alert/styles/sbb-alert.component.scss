// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  --focus-outline-color-override: var(--focus-outline-color-dark);

  --sbb-alert_background-color: var(--color-midnight-default);
  --sbb-alert_border-radius: var(--border-radius-4x);
  --sbb-alert_color: var(--color-aluminium-default);
  --sbb-alert_padding: var(--spacing-responsive-xxxs);
  --sbb-alert_title-font-size: var(--lyne-font-size-title-5);
  --sbb-alert_title-line-height: var(--typo-line-height-body-text);

  // TODO: with sbb icon component, handle also other sizes
  --sbb-alert_icon-size: var(--size-icon-timetable-him-cus);
  --sbb-alert_close-icon-size: var(--size-icon-ui-small);
  --sbb-alert-gap: var(--spacing-fixed-2x);
  --sbb-alert_close-button-wrapper-width: var(--spacing-fixed-10x);

  @include mq($from: medium) {
    --sbb-alert_close-button-wrapper-width: var(--spacing-fixed-12x);
  }
}

.sbb-alert_transition-wrapper {
  transition: height var(--animation-duration-6x) ease-in;
  overflow: hidden;
}

.sbb-alert {
  display: flex;
  gap: pxToRem(var(--sbb-alert-gap));
  min-width: fit-content;
  padding: pxToRem(var(--sbb-alert_padding));
  overflow-y: hidden;
  background-color: var(--sbb-alert_background-color);
  border-radius: pxToRem(var(--sbb-alert_border-radius));
  transition: opacity var(--animation-duration-6x) ease-in;
}

.sbb-alert,
::slotted(a) {
  @include text-s--regular;
  color: var(--sbb-alert_color);
}

.sbb-alert--size-l {
  --sbb-alert_title-font-size: var(--lyne-font-size-title-3);
  --sbb-alert_title-line-height: var(--typo-line-height-titles);
  --sbb-alert_icon-size: calc(1.5 * var(--size-icon-timetable-him-cus));
}

.sbb-alert_icon,
.sbb-alert_close-button-wrapper {
  flex: 0;
}

.sbb-alert_icon {
  display: flex;
  align-items: center;

  // Align the height to the line-height. Because the line-height is written as a multiplier, we need to multiply it by the font-size.
  height: pxToRem(
    calc(
      var(--sbb-alert_title-font-size) * var(--sbb-alert_title-line-height)
    )
  );
}

.sbb-alert_content {
  flex: 1;
}

.sbb-alert_close-button-wrapper {
  display: flex;
  justify-content: flex-end;

  // Subtract gap as we can not make a gap exception just for the left gap of the close button wrapper
  flex-basis: pxToRem(
    calc(var(--sbb-alert_close-button-wrapper-width) - var(--sbb-alert-gap))
  );
}

.sbb-alert_close-button-wrapper_button {
  // Reduce the reserved space of the button to 24px (--sbb-alert_close-icon-size)
  margin: pxToRem(
    calc(
      (
          var(--size-form-element-m-min-height) -
            var(--sbb-alert_close-icon-size)
        ) * 0.5
    ),
    true
  );
}

// Ensure correct sbb-title styling regardless how the sbb-title is configured.
::slotted(sbb-title) {
  --lyne-font-size-title-1: var(--sbb-alert_title-font-size);
  --lyne-font-size-title-2: var(--sbb-alert_title-font-size);
  --lyne-font-size-title-3: var(--sbb-alert_title-font-size);
  --lyne-font-size-title-4: var(--sbb-alert_title-font-size);
  --lyne-font-size-title-5: var(--sbb-alert_title-font-size);

  --typo-line-height-titles: var(--sbb-alert_title-line-height);
  --typo-line-height-body-text: var(--sbb-alert_title-line-height);

  --_title-text-color-normal: var(--color-milk-default);
}

::slotted(svg[slot="icon"]),
slot[name="icon"] svg {
  display: block;
  height: pxToRem(var(--sbb-alert_icon-size));
  width: pxToRem(var(--sbb-alert_icon-size));
  fill: currentColor;
}

::slotted(a:focus-visible) {
  @include focusOutline;
}

::slotted(a:hover) {

}
