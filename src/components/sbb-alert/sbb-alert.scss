@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
  --sbb-alert-background-color: var(--sbb-color-midnight-default);
  --sbb-alert-border-radius: var(--sbb-border-radius-4x);
  --sbb-alert-color: var(--sbb-color-aluminium-default);
  --sbb-alert-padding: var(--sbb-spacing-responsive-xxs) var(--sbb-spacing-responsive-xs);
  --sbb-alert-icon-size: #{sbb.px-to-rem-build(20)};
  --sbb-alert-close-icon-size: var(--sbb-size-icon-ui-small);
  --sbb-alert-gap: var(--sbb-spacing-fixed-2x) var(--sbb-spacing-responsive-xs);

  @include sbb.mq($from: medium) {
    --sbb-alert-icon-size: #{sbb.px-to-rem-build(28)};
  }

  @include sbb.if-forced-colors {
    // Use outline here to not influence content position.
    // Due to overflow hidden of inner elements it's placed on host.
    outline: var(--sbb-border-width-1x) solid CanvasText;
    border-radius: var(--sbb-alert-border-radius);
  }
}

:host([size='l']) {
  --sbb-alert-icon-size: #{sbb.px-to-rem-build(24)};

  @include sbb.mq($from: medium) {
    --sbb-alert-icon-size: #{sbb.px-to-rem-build(34)};
  }
}

.sbb-alert__transition-wrapper {
  transition: height var(--sbb-animation-duration-6x) ease-in;
  overflow: hidden;
}

.sbb-alert {
  @include sbb.text-s--regular;

  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: var(--sbb-alert-gap);
  min-width: fit-content;
  padding: var(--sbb-alert-padding);
  overflow: hidden;
  color: var(--sbb-alert-color);
  background-color: var(--sbb-alert-background-color);
  border-radius: var(--sbb-alert-border-radius);
  transition: opacity var(--sbb-animation-duration-6x) ease-in;

  @include sbb.mq($from: small) {
    grid-template-columns: auto 1fr auto;
    align-items: flex-start;
  }
}

.sbb-alert__icon {
  display: flex;
  align-items: start;
  padding-block: var(--sbb-spacing-fixed-1x);
  min-width: var(--sbb-alert-icon-size);

  --sbb-icon-svg-width: var(--sbb-alert-icon-size);
  --sbb-icon-svg-height: var(--sbb-alert-icon-size);
}

.sbb-alert__content {
  order: 3;
  grid-column: 1 / 3;

  @include sbb.mq($from: small) {
    order: initial;
    grid-column-start: initial;
    grid-column-end: initial;
  }
}

.sbb-alert__content-slot {
  // Reset paragraph styles
  display: inline;
  margin: 0;
  padding: 0;
}

.sbb-alert__title {
  // Overwrite sbb-title default margin
  margin: 0;
}

.sbb-alert__close-button-wrapper {
  display: flex;
  justify-content: flex-end;
  align-items: center;

  @include sbb.mq($from: small) {
    height: 100%;
  }
}

.sbb-alert__close-button {
  @include sbb.mq($from: small) {
    margin-inline-start: var(--sbb-spacing-responsive-xxs);
  }
}

.sbb-alert__close-button-divider {
  display: none;

  @include sbb.mq($from: small) {
    display: block;
    height: calc(100% - (var(--sbb-spacing-fixed-1x) * 2));
  }
}
