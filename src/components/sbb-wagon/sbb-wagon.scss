// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-wagon-width: var(--sbb-train-formation-wagon-width);
  --sbb-wagon-height: var(--sbb-train-formation-wagon-height);
  --sbb-wagon-inner-padding: var(--sbb-spacing-fixed-3x);
  --sbb-wagon-shape-border-radius: var(--sbb-train-formation-wagon-border-radius);
  --sbb-wagon-shape-outline-color: var(--sbb-color-charcoal-default);
  --sbb-wagon-shape-outline-width: var(--sbb-border-width-1x);
  --sbb-wagon-blocked-background-color: var(--sbb-color-red-default);
  --sbb-wagon-blocked-bar-color: var(--sbb-color-white-default);
  --sbb-wagon-icons-padding-top: var(--sbb-spacing-fixed-2x);
  --sbb-wagon-icons-gap: var(--sbb-spacing-fixed-1x);

  // Blocked passage icon
  --sbb-wagon-blocked-passage-icon-dimensions: #{px-to-rem-build(16)};
  --sbb-wagon-blocked-passage-icon-bar-width: #{px-to-rem-build(10)};
  --sbb-wagon-blocked-passage-icon-bar-height: #{px-to-rem-build(4)};
  --sbb-wagon-blocked-passage-icon-bar-border-radius: #{px-to-rem-build(1)};

  @include ifForcedColors {
    --sbb-wagon-blocked-background-color: CanvasText;
    --sbb-wagon-blocked-bar-color: Canvas;
  }
}

.sbb-wagon {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: var(--sbb-wagon-width);

  :host([type='wagon']) & {
    width: var(--sbb-wagon-width);
  }

  :host([type='blocked']) & {
    width: var(--sbb-wagon-blocked-passage-icon-dimensions);
  }
}

.sbb-wagon__label {
  @include text-s--regular;

  opacity: 0;
  margin: 0;

  :host([type='wagon']) & {
    opacity: 1;

    span:not([aria-hidden]) {
      @include screenReaderOnly;
    }
  }

  :host([type='locomotive']) &,
  :host([type='blocked']) & {
    white-space: nowrap;
    max-width: 100%;
    pointer-events: none;
  }
}

.sbb-wagon__compartment {
  height: var(--sbb-wagon-height);

  :host([type='wagon']) & {
    width: 100%;
    border-radius: var(--sbb-wagon-shape-border-radius);
    border: var(--sbb-wagon-shape-outline-width) solid var(--sbb-wagon-shape-outline-color);
    padding: 0 var(--sbb-wagon-inner-padding);
    display: flex;
    align-items: center;
  }

  :host([type='blocked']) & {
    width: 100%;
    display: flex;
    justify-content: center;
    flex-direction: column;
  }
}

.sbb-wagon__class {
  @include title-6;

  margin-left: auto;
}

.sbb-wagon__icons {
  p {
    @include screenReaderOnly;
  }

  ul {
    @include list-reset;

    display: flex;
    flex-wrap: wrap;
    gap: var(--sbb-wagon-icons-gap);
    justify-content: center;
    padding-block-start: var(--sbb-wagon-icons-padding-top);
  }

  li {
    display: inline-flex;
  }
}

.sbb-wagon__blocked-icon {
  width: 100%;
  height: var(--sbb-wagon-blocked-passage-icon-dimensions);
  border-radius: 50%;
  background-color: var(--sbb-wagon-blocked-background-color);
  position: relative;
  flex-direction: column;
  display: flex;
  align-items: center;

  &::before {
    content: '';
    width: var(--sbb-wagon-blocked-passage-icon-bar-width);
    height: var(--sbb-wagon-blocked-passage-icon-bar-height);
    border-radius: var(--sbb-wagon-blocked-passage-icon-bar-border-radius);
    background-color: var(--sbb-wagon-blocked-bar-color);
    margin: auto 0;
  }
}
