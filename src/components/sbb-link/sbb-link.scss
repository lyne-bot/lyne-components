// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  // Necessary to forward styles to native link
  @include text-inherit;

  display: inline-block;
  color: inherit;

  --sbb-link-color-normal: var(--sbb-color-granite-default);
  --sbb-link-color-hover: var(--sbb-color-red125-default);
  --sbb-link-color-active: var(--sbb-color-red150-default);
}

:host([variant='block']) {
  display: flex;
}

:host([negative]) {
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
  --sbb-link-color-normal: var(--sbb-color-white-default);
  --sbb-link-color-hover: var(--sbb-color-cloud-default);
  --sbb-link-color-active: var(--sbb-color-silver-default);
}

:host([variant='inline'][negative]) {
  --sbb-link-color-hover: var(--sbb-color-graphite-default);
  --sbb-link-color-active: var(--sbb-color-metal-default);
}

// stylelint-disable plugin/stylelint-bem-namics
.sbb-link {
  @include stretch(width);

  display: flex;
  align-items: center;
  gap: var(--sbb-spacing-fixed-1x);
  color: var(--sbb-link-color-normal);
  text-decoration: none;
  word-break: break-word;
  cursor: pointer;
  text-align: left;

  :host([text-size='xs']:not([variant='inline'])) & {
    @include text-xs--regular;
  }

  :host([text-size='s']:not([variant='inline'])) & {
    @include text-s--regular;
  }

  :host([text-size='m']:not([variant='inline'])) & {
    @include text-m--regular;
  }

  :host([variant='inline']) & {
    @include text-inherit;

    color: inherit;
    text-decoration: underline;
  }

  &:focus-visible {
    @include focusOutline;

    border-radius: calc(var(--sbb-border-radius-4x) - var(--sbb-focus-outline-offset));
  }

  :host([disabled]) & {
    pointer-events: none;
    cursor: default;
  }

  :host(:not([disabled])) & {
    @include hover-mq($hover: true) {
      &:hover {
        color: var(--sbb-link-color-hover);
        text-decoration: underline;
      }
    }

    // Active definitions have to be after :hover definitions
    &:active {
      color: var(--sbb-link-color-active);
    }
  }

  @include ifForcedColors {
    text-decoration: underline;
    text-decoration-skip-ink: auto; // -> read more about here https://bit.ly/3BHdTsE
  }
}
// stylelint-enable plugin/stylelint-bem-namics

button.sbb-link {
  @include buttonReset;
}

.sbb-link__icon {
  position: relative;
  height: calc(var(--sbb-typo-line-height-body-text) * 1em);
  width: var(--sbb-size-icon-ui-small);
  flex: 0 0 auto;
  align-self: start;

  :host([icon-placement='end']) & {
    order: 2;
  }

  ::slotted([slot='icon']),
  sbb-icon {
    @include absoluteCenterY;
  }
}

.sbb-link__opens-in-new-window {
  @include screenReaderOnly;
}
