// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  display: inline-block;
  width: #{px-to-rem-build(300)};

  --form-field-background-color: var(--sbb-color-white-default);
  --form-field-border-color: var(--sbb-color-smoke-default);
  --form-field-border-radius: var(--sbb-border-radius-4x);
  --form-field-height: var(--sbb-size-form-element-m-min-height-small);
  --form-field-label-color: var(--sbb-color-metal-default);
  --form-field-padding-inline: var(--sbb-spacing-fixed-3x);
  --form-field-text-color: var(--sbb-color-charcoal-default);
  --form-field-error-divider-width: var(--sbb-spacing-fixed-1x);
  --form-field-error-padding-block-start: var(--form-field-error-divider-width);

  // Lock sbb-icon size
  --sbb-icon-svg-width: var(--sbb-size-icon-ui-small);
  --sbb-icon-svg-height: var(--sbb-size-icon-ui-small);

  @include mq($from: medium) {
    --form-field-height: var(--sbb-size-form-element-m-min-height-medium);
  }
}

.form-field__error--empty {
  --form-field-error-padding-block-start: 0;
}

:host(:focus-within) {
  --form-field-border-color: var(--sbb-color-charcoal-default);
}

:host(.form-field--size-l) {
  --form-field-border-radius: var(--sbb-border-radius-8x);
  --form-field-height: var(--sbb-size-form-element-l-min-height-medium);
  --form-field-padding-inline: var(--sbb-spacing-responsive-xxxs);

  @include mq($from: medium) {
    --form-field-height: var(--sbb-size-form-element-l-min-height-medium);
  }
}

:host(.sbb-invalid) {
  --form-field-border-color: var(--sbb-color-red125-default);
  --form-field-text-color: var(--sbb-color-red125-default);
}

:host(.form-field--readonly),
:host(.form-field--disabled) {
  --form-field-background-color: var(--sbb-color-milk-default);
  --form-field-border-color: var(--sbb-color-graphite-default);
}

:host(.form-field--readonly) {
  --form-field-label-color: var(--sbb-color-granite-default);
}

:host(.form-field--disabled) {
  --form-field-label-color: var(--sbb-color-graphite-default);
  --form-field-text-color: var(--sbb-color-graphite-default);
}

:host(.form-field--borderless) {
  --form-field-border-color: transparent;
}

:host(.form-field--error-space-reserve) {
  // TODO: Fix hack
  --form-field-error-min-height: calc(
    var(--sbb-typo-line-height-body-text) * var(--sbb-font-size-text-xs)
  );
  --form-field-error-padding-block-start-override: var(--form-field-error-divider-width);
}

.form-field__wrapper {
  position: relative;
  display: flex;
  align-items: center;
  padding-inline: var(--form-field-padding-inline);
  border: var(--sbb-border-width-1x) solid var(--form-field-border-color);
  border-radius: var(--form-field-border-radius);
  height: var(--form-field-height);
  background-color: var(--form-field-background-color);

  // Avoids unwanted space displayed if no label text is set.
  @include zeroWidthSpace;
}

.form-field__prefix,
.form-field__suffix {
  flex: 0 0 auto;
  height: var(--sbb-size-icon-ui-small);
}

.form-field__prefix:not(.form-field__prefix--empty) {
  padding-inline-end: var(--sbb-spacing-fixed-2x);
}

.form-field__suffix:not(.form-field__suffix--empty) {
  padding-inline-start: var(--sbb-spacing-fixed-2x);
}

.form-field__input-container {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
}

// Label
.form-field__label {
  @include text-xs--regular;
  @include ellipsis;

  display: flex;
  max-width: 100%;
  color: var(--form-field-label-color);
  user-select: none;
  pointer-events: none;
}

// Input
/* stylelint-disable plugin/stylelint-bem-namics */
.form-field__input ::slotted(:is(input, select, .sbb-field-input)) {
  @include text-m--regular;
  @include placeholder;
  @include ellipsis;

  -webkit-appearance: none;
  width: 100%;
  box-sizing: border-box;
  border: none;
  outline: none;
  padding: 0;
  color: var(--form-field-text-color);
  background-color: var(--form-field-background-color);
}
/* stylelint-enable plugin/stylelint-bem-namics */

.form-field__error {
  display: flex;

  min-height: var(--form-field-error-min-height);
  margin-block-start: var(
    --form-field-error-padding-block-start-override,
    var(--form-field-error-padding-block-start)
  );
}
