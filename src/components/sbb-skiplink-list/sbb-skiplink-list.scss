@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-skiplink-height: 0;
  --sbb-skiplink-overflow: hidden;
  --sbb-skiplink-background: transparent;
  --sbb-skiplink-border: unset;
}

.sbb-skiplink-list__wrapper {
  position: fixed;
  inset-block-start: var(--sbb-spacing-fixed-4x);
  inset-inline-start: var(--sbb-spacing-fixed-4x);
  z-index: calc(var(--sbb-skiplink-z-index, var(--sbb-overlay-z-index)) + 1);
}

.sbb-skiplink-list {
  @include sbb.list-reset;

  li {
    @include sbb.shadow-level-5-hard;

    height: var(--sbb-skiplink-height);
    overflow: var(--sbb-skiplink-overflow);
    border-radius: var(--sbb-border-radius-4x);
    background-color: var(--sbb-skiplink-background);
    border: var(--sbb-skiplink-border);

    &:focus-within {
      --sbb-skiplink-height: auto;
      --sbb-skiplink-overflow: visible;
      --sbb-skiplink-background: var(--sbb-color-black-default);
      --sbb-skiplink-border: var(--sbb-border-width-2x) solid var(--sbb-color-white-default);
    }
  }
}

::slotted(sbb-link) {
  --sbb-focus-outline-color: transparent;

  padding-block: var(--sbb-spacing-fixed-2x);
  padding-inline: var(--sbb-spacing-responsive-xxs);
}
