// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-menu-position: fixed;
  --sbb-menu-position-x: 0;
  --sbb-menu-position-y: 0;
  --sbb-menu-animation-duration: var(--sbb-animation-duration-6x);
  --sbb-menu-min-height: #{px-to-rem-build(120)};
  --sbb-menu-max-width: #{px-to-rem-build(320)};
  --sbb-menu-min-width: #{px-to-rem-build(240)};
  --sbb-menu-border-radius: var(--sbb-border-radius-4x);
}

// On the `::backdrop` it is impossible to use any design tokens,
// so inline values must be used (for background and animation duration in this case).
// To learn more: https://stackoverflow.com/questions/58818299/css-variables-not-working-in-dialogbackdrop
::backdrop {
  --sbb-menu-backdrop-color: rgb(0 0 0 / 20%);
  --sbb-menu-backdrop-animation-name: show-backdrop;
  --sbb-menu-backdrop-animation-duration: 0.24s;
  --sbb-menu-backdrop-animation-easing: ease;
}

:host([disable-animation]) {
  --sbb-menu-animation-duration: 0s;

  ::backdrop {
    --sbb-menu-backdrop-animation-duration: 0s;
  }
}

// stylelint-disable plugin/stylelint-bem-namics
::slotted(:not(sbb-menu-action)) {
  display: block;
  padding-inline: var(--sbb-spacing-fixed-5x);
}
// stylelint-enable plugin/stylelint-bem-namics

::slotted(sbb-divider) {
  --divider-color: var(--sbb-color-iron-default);

  margin-block: var(--sbb-spacing-fixed-2x);
}

.sbb-menu {
  @include scrollbar('dark');

  --sbb-menu-transform: translateY(100%);

  max-height: calc(100vh - var(--sbb-spacing-fixed-8x));
  min-width: 100%;
  text-align: start;
  position: var(--sbb-menu-position);
  left: 0;
  bottom: 0;
  top: unset;
  right: unset;
  color: var(--sbb-color-white-default);
  border: none;
  border-radius: var(--sbb-menu-border-radius) var(--sbb-menu-border-radius) 0 0;
  background-color: var(--sbb-color-black-default);
  padding-inline: 0;
  padding-block: var(--sbb-spacing-fixed-1x);

  &[open] {
    animation: {
      name: show;
      duration: var(--sbb-menu-animation-duration);
      timing-function: ease;
    }
  }

  &::backdrop {
    background: var(--sbb-menu-backdrop-color);

    animation: {
      name: var(--sbb-menu-backdrop-animation-name);
      duration: var(--sbb-menu-backdrop-animation-duration);
      timing-function: var(--sbb-menu-backdrop-animation-easing);
    }
  }

  &::after {
    content: '';
    display: block;
    height: var(--sbb-spacing-fixed-8x);
  }

  &.sbb-menu--dismissing {
    animation-name: hide;

    &::backdrop {
      --sbb-menu-backdrop-animation-name: hide-backdrop;
    }
  }
}

@include ifForcedColors {
  dialog {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }
}

@include mq($from: medium) {
  .sbb-menu {
    --sbb-menu-position: absolute;
    --sbb-menu-transform: translateY(var(--sbb-spacing-fixed-2x));

    top: var(--sbb-menu-position-y);
    left: var(--sbb-menu-position-x);
    right: unset;
    bottom: unset;
    max-height: var(--sbb-menu-max-height);
    min-height: var(--sbb-menu-min-height);
    max-width: var(--sbb-menu-max-width);
    min-width: var(--sbb-menu-min-width);
    border-radius: var(--sbb-menu-border-radius);

    &::backdrop {
      --sbb-menu-backdrop-color: transparent;

      animation: none;
    }

    &::after {
      display: none;
    }
  }
}

// It is necessary to use animations with keyframes instead of transitions in order not to alter
// the default `display: block` of the modal otherwise it causes several problems,
// especially for accessibility.
@keyframes show {
  from {
    visibility: hidden;
    opacity: 0;
    transform: var(--sbb-menu-transform);
  }

  to {
    visibility: visible;
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes hide {
  from {
    visibility: visible;
    opacity: 1;
    transform: translateY(0%);
  }

  to {
    visibility: hidden;
    opacity: 0;
    transform: var(--sbb-menu-transform);
  }
}

@keyframes show-backdrop {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes hide-backdrop {
  to {
    opacity: 0;
  }
}
