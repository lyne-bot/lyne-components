@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host([variant='window']) {
  --loading-indicator-height: 32px;
  --loading-indicator-width: 55px;
  --loading-indicator-padding: 0;

  display: inline-block;
  line-height: 0;
}

:host([variant='circle']) {
  --loading-indicator-height: var(--sbb-size-icon-ui-small);
  --loading-indicator-width: var(--sbb-size-icon-ui-small);
  --loading-indicator-padding: var(--sbb-border-width-2x);

  display: inline-block;
  line-height: 0;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.sbb-loading-indicator {
  height: var(--loading-indicator-height);
  width: var(--loading-indicator-width);
  padding-inline: var(--loading-indicator-padding);
  padding-block: var(--loading-indicator-padding);
  display: inline-block;
}

.sbb-loading-indicator__animated-element {
  width: 100%;
  height: 100%;
  display: inline-block;
  color: transparent;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
}

:host([variant='window']) .sbb-loading-indicator__animated-element {
  background: #f00;
}

:host([variant='circle']) .sbb-loading-indicator__animated-element {
  border-radius: 50%;
  background: conic-gradient(from 90deg, #fff, #f00);
  /* stylelint-disable */
  -webkit-mask: radial-gradient(circle 7px, #0000 98%, #fff);
  /* stylelint-enable */
  mask: radial-gradient(circle 7px, #0000 98%, #fff);
  animation: rotation 1s infinite linear;

  &::after {
    content: '';
    width: 3px;
    height: 3px;
    background: #f00;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    overflow: hidden;
    margin: auto;
  }
}
