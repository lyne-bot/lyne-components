@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host([variant='circle']) {
  --sbb-loading-indicator-height: var(--sbb-size-icon-ui-small);
  --sbb-loading-indicator-width: var(--sbb-size-icon-ui-small);
  --sbb-loading-indicator-padding: var(--sbb-border-width-2x);
  --sbb-loader-indicator-duration: 1s;

  display: inline-block;
  line-height: 0;
}

:host([variant='circle']) .sbb-loading-indicator {
  height: var(--sbb-loading-indicator-height);
  width: var(--sbb-loading-indicator-width);
  padding-inline: var(--sbb-loading-indicator-padding);
  padding-block: var(--sbb-loading-indicator-padding);
  display: inline-block;
}

:host([variant='circle']) .sbb-loading-indicator__animated-element {
  width: 100%;
  height: 100%;
  display: inline-block;
  color: transparent;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
  border-radius: 50%;
  background: conic-gradient(
    from 90deg,
    var(--sbb-color-white-default),
    var(--sbb-color-red-default)
  );
  /* stylelint-disable */
  -webkit-mask: radial-gradient(
    circle sbb.px-to-rem-build(7),
    #0000 98%,
    var(--sbb-color-white-default)
  );
  /* stylelint-enable */
  mask: radial-gradient(circle sbb.px-to-rem-build(7), #0000 98%, var(--sbb-color-white-default));
  animation: rotation var(--sbb-loader-indicator-duration) infinite linear;

  &::after {
    content: '';
    width: sbb.px-to-rem-build(3);
    height: sbb.px-to-rem-build(3);
    background: var(--sbb-color-red-default);
    border-radius: 50%;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    overflow: hidden;
    margin: auto;
  }
}

:host([variant='window']) {
  --sbb-loading-indicator-height: sbb.px-to-rem-build(32);
  --sbb-loading-indicator-width: sbb.px-to-rem-build(55);
  --sbb-loading-indicator-padding: 0;
  --sbb-loader-indicator-duration: 0.23s;

  display: inline-block;
  line-height: 0;
}

:host([variant='window'][size='small']) {
  --sbb-loader-indicator-window-height: 1.66665em;
  --sbb-loader-indicator-window-padding-block-start: 0.66666em;
  --sbb-loader-indicator-window-element-width: 3.46665em;
  --sbb-loader-indicator-window-element-height: 0.33333em;
  --sbb-loader-indicator-window-element-perspective: 6em;
  --sbb-loader-indicator-window-element-animation: loading-container-small
    var(--sbb-loader-indicator-duration) linear infinite;
  --sbb-loader-indicator-window-last-span-width: 0.53333em;
  --sbb-loader-indicator-window-last-span-height: 0.33333em;
  --sbb-loader-indicator-window-last-span-margin: 0.2em;
  --sbb-loader-indicator-window-last-span-transform: translate3d(-0.1em, 0, 0);
}

:host([variant='window'][size='large']) {
  --sbb-loader-indicator-window-height: 3em;
  --sbb-loader-indicator-window-padding-block-start: 1.2em;
  --sbb-loader-indicator-window-element-width: 5.8em;
  --sbb-loader-indicator-window-element-height: 0.6em;
  --sbb-loader-indicator-window-element-perspective: 8em;
  --sbb-loader-indicator-window-element-animation: loading-container-large
    var(--sbb-loader-indicator-duration) linear infinite;
  --sbb-loader-indicator-window-last-span-width: 1em;
  --sbb-loader-indicator-window-last-span-height: 0.6em;
  --sbb-loader-indicator-window-last-span-margin: 0.2em;
}

:host([variant='window']) span {
  display: inline-block;
}

:host([variant='window']) .sbb-loading-indicator {
  display: flex;
  height: var(--sbb-loader-indicator-window-height);
  padding-block-start: var(--sbb-loader-indicator-window-padding-block-start);
}

:host([variant='window']) .sbb-loading-indicator__animated-element {
  margin: 0 auto;
  transform-origin: center;
  transform: translate3d(-3em, 0, 0);
  backface-visibility: hidden;
  transform-style: preserve-3d;
  width: var(--sbb-loader-indicator-window-element-width);
  height: var(--sbb-loader-indicator-window-element-height);
  perspective: var(--sbb-loader-indicator-window-element-perspective);
}

:host([variant='window']) .sbb-loading-indicator__animated-element > span {
  position: relative;
  transform: rotateY(50deg) translateZ(1em);
  transform-origin: right;
  backface-visibility: hidden;
}

:host([variant='window']) .sbb-loading-indicator__animated-element > span > span {
  position: relative;
  display: flex;
  animation: var(--sbb-loader-indicator-window-element-animation);
}

:host([variant='window']) .sbb-loading-indicator__animated-element > span > span > span {
  background: var(--sbb-color-red-default);
  backface-visibility: hidden;
  outline: var(--sbb-border-width-1x) solid rgb(0 0 0 / 0%);
  width: var(--sbb-loader-indicator-window-last-span-width);
  height: var(--sbb-loader-indicator-window-last-span-height);
  margin-right: var(--sbb-loader-indicator-window-last-span-margin);
  transform: var(--sbb-loader-indicator-window-last-span-transform);
}

:host([variant='window'])
  .sbb-loading-indicator__animated-element
  > span
  > span
  > span:nth-child(1) {
  animation: loading-rectangle1 var(--sbb-loader-indicator-duration) linear infinite;
}

:host([variant='window'])
  .sbb-loading-indicator__animated-element
  > span
  > span
  > span:nth-child(2) {
  animation: loading-rectangle2 var(--sbb-loader-indicator-duration) linear infinite;
}

:host([variant='window'])
  .sbb-loading-indicator__animated-element
  > span
  > span
  > span:nth-child(3) {
  animation: loading-rectangle3 var(--sbb-loader-indicator-duration) linear infinite;
}

:host([variant='window'])
  .sbb-loading-indicator__animated-element
  > span
  > span
  > span:nth-child(4) {
  animation: loading-rectangle4 var(--sbb-loader-indicator-duration) linear infinite;
}

:host([variant='window'])
  .sbb-loading-indicator__animated-element
  > span
  > span
  > span:nth-child(5) {
  animation: loading-rectangle5 var(--sbb-loader-indicator-duration) linear infinite;
}

:host([variant='window']) .sbb-loading-indicator__animated-element > span > span > span:last-child {
  margin-right: 0;
}

@keyframes loading-container-small {
  0% {
    transform: translateX(0.73333em);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes loading-container-large {
  0% {
    transform: translateX(1.2em);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes loading-rectangle1 {
  0% {
    opacity: 0.5;
  }

  100% {
    opacity: 0;
  }
}

@keyframes loading-rectangle2 {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0.5;
  }
}

@keyframes loading-rectangle3 {
  0% {
    opacity: 0.5;
  }

  100% {
    opacity: 1;
  }
}

@keyframes loading-rectangle4 {
  0% {
    opacity: 0.25;
  }

  100% {
    opacity: 0.5;
  }
}

@keyframes loading-rectangle5 {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 0.25;
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}
