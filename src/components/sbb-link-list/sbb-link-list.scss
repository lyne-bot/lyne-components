// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  display: block;
}

sbb-title {
  margin-block-end: var(--sbb-spacing-fixed-3x);
}

.link-list {
  @include list-reset;
}

@mixin link-list--horizontal {
  display: flex;
  flex-wrap: wrap;
  column-gap: var(--sbb-spacing-fixed-8x);
}

.link-list--horizontal {
  @include link-list--horizontal;
}

.link-list--horizontal-from {
  &-zero {
    @include mq($from: zero) {
      @include link-list--horizontal;
    }
  }

  &-micro {
    @include mq($from: micro) {
      @include link-list--horizontal;
    }
  }

  &-small {
    @include mq($from: small) {
      @include link-list--horizontal;
    }
  }

  &-medium {
    @include mq($from: medium) {
      @include link-list--horizontal;
    }
  }

  &-large {
    @include mq($from: large) {
      @include link-list--horizontal;
    }
  }

  &-wide {
    @include mq($from: wide) {
      @include link-list--horizontal;
    }
  }

  &-ultra {
    @include mq($from: ultra) {
      @include link-list--horizontal;
    }
  }
}

/* stylelint-disable-next-line plugin/stylelint-bem-namics */
::slotted(.link-list__item:not(:last-child)) {
  margin-block-end: var(--sbb-spacing-fixed-3x);
}

/* stylelint-disable-next-line plugin/stylelint-bem-namics */
sbb-button {
  margin-block-start: var(--sbb-spacing-fixed-6x);
}

// Need to be after the ::slotted(.link-list__item:not(:last-child))
// selector due to specificity
.link-list--horizontal ::slotted(.link-list__item) {
  margin-block-end: unset;
}

.link-list--horizontal-from-large ::slotted(.link-list__item) {
  @include mq($from: large) {
    margin-block-end: unset;
  }
}
