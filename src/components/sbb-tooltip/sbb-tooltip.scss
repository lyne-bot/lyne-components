// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-tooltip-position: absolute;
  --sbb-tooltip-position-x: 0;
  --sbb-tooltip-position-y: 0;
  --sbb-tooltip-arrow-size: var(--sbb-spacing-fixed-4x);
  --sbb-tooltip-arrow-position-x: 0;
  --sbb-tooltip-max-height: #{px-to-rem-build(190)};
  --sbb-tooltip-max-width: min(calc(100vw - var(--sbb-spacing-fixed-8x)), #{px-to-rem-build(320)});
  --sbb-tooltip-border-radius: var(--sbb-border-radius-8x);
  --sbb-tooltip-padding: var(--sbb-spacing-fixed-4x);
  --sbb-tooltip-background: var(--sbb-color-white-default);
  --sbb-tooltip-animation-duration: var(--sbb-animation-duration-4x);
  --sbb-tooltip-animation-easing: ease-out;
  --sbb-tooltip-transform: translateY(var(--sbb-spacing-fixed-2x));

  position: fixed;
  inset: 0;
  pointer-events: none;
}

:host([disable-animation]) {
  --sbb-tooltip-animation-duration: 0s;
}

.sbb-tooltip {
  @include shadow-level-5-hard;

  position: var(--sbb-tooltip-position);
  pointer-events: all;
  top: var(--sbb-tooltip-position-y);
  left: var(--sbb-tooltip-position-x);
  right: unset;
  bottom: unset;
  border: none;
  border-radius: var(--sbb-tooltip-border-radius);
  padding: 0;
  max-height: var(--sbb-tooltip-max-height);
  max-width: var(--sbb-tooltip-max-width);
  width: max-content;
  background-color: var(--sbb-tooltip-background);

  &[open] {
    animation: {
      name: show;
      duration: var(--sbb-tooltip-animation-duration);
      timing-function: var(--sbb-tooltip-animation-easing);
    }
  }

  &.sbb-tooltip--dismissing {
    pointer-events: none;
    animation-name: hide;
  }

  // Tooltip arrow
  &::after {
    @include shadow-level-5-hard;

    content: '';
    position: absolute;
    display: block;
    width: var(--sbb-tooltip-arrow-size);
    height: var(--sbb-tooltip-arrow-size);
    left: var(--sbb-tooltip-arrow-position-x);
    bottom: calc(100% - calc(var(--sbb-tooltip-arrow-size) / 2));
    background-color: var(--sbb-tooltip-background);
    border-radius: var(--sbb-spacing-fixed-1x) 0;
    transform: rotate(45deg);
    z-index: -1;

    @include ifForcedColors {
      outline: var(--sbb-border-width-1x) solid CanvasText;
    }
  }

  @include ifForcedColors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }
}

.sbb-tooltip__content {
  display: flex;
  gap: var(--sbb-spacing-fixed-4x);
  border-radius: var(--sbb-tooltip-border-radius);
  padding: var(--sbb-tooltip-padding);
  outline: none;
  background-color: var(--sbb-tooltip-background);
  max-height: var(--sbb-tooltip-max-height);
  overflow: hidden;

  // Tooltip arrow cover top
  &::before {
    content: '';
    position: absolute;
    display: block;
    width: var(--sbb-tooltip-arrow-size);
    height: var(--sbb-tooltip-arrow-size);
    left: var(--sbb-tooltip-arrow-position-x);
    bottom: calc(100% - calc(var(--sbb-tooltip-arrow-size) / 2));
    background-color: var(--sbb-tooltip-background);
    border-radius: var(--sbb-spacing-fixed-1x) 0;
    transform: rotate(45deg);
  }
}

.sbb-tooltip--above {
  --sbb-tooltip-transform: translateY(calc(var(--sbb-spacing-fixed-2x) * -1));

  &::after,
  .sbb-tooltip__content::before {
    top: calc(100% - calc(var(--sbb-tooltip-arrow-size) / 2));
  }
}

// It is necessary to use animations with keyframes instead of transitions in order not to alter
// the default `display: block` of the modal otherwise it causes several problems,
// especially for accessibility.
@keyframes show {
  from {
    visibility: hidden;
    opacity: 0;
    transform: var(--sbb-tooltip-transform);
  }

  to {
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes hide {
  from {
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }

  to {
    visibility: hidden;
    opacity: 0;
    transform: var(--sbb-tooltip-transform);
  }
}
