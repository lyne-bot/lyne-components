@use '../../global/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  --sbb-navigation-position: fixed;
  --sbb-navigation-right: calc(var(--sbb-layout-base-offset-responsive) * -1);
  --sbb-navigation-animation-duration: var(--sbb-animation-duration-3x);
  --sbb-navigation-animation-easing: ease-out;
  --sbb-navigation-padding-inline: var(--sbb-layout-base-offset-responsive);
  --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-l);
  --sbb-navigation-padding-block-end: var(--sbb-spacing-responsive-xl);
  --sbb-navigation-columns: 1 / 5;
  --sbb-navigation-backdrop-color: transparent;
  --sbb-navigation-list-margin-block-start: var(--sbb-spacing-responsive-xxl);
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);

  @include sbb.grid-base;

  width: 100vw;
  height: 100vh;
  position: var(--sbb-navigation-position);
  left: 0;
  top: 0;
  z-index: 10;
  padding-inline: var(--sbb-layout-base-offset-responsive);

  ::slotted(sbb-navigation-list:first-child),
  ::slotted(sbb-navigation-marker:first-child) {
    margin-block-start: var(--sbb-navigation-list-margin-block-start);
  }

  @include sbb.mq($from: medium) {
    --sbb-navigation-columns: 1 / 9;
  }

  @include sbb.mq($from: large) {
    --sbb-navigation-columns: 1 / 5;
    --sbb-navigation-right: 0;
    --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-xl);
    --sbb-navigation-padding-inline: var(--sbb-layout-base-offset-responsive) 0;
    --sbb-navigation-list-margin-block-start: var(--sbb-spacing-fixed-1x);

    /* stylelint-disable-next-line plugin/stylelint-bem-namics */
    ::slotted(:not(sbb-navigation-section)) {
      z-index: 1;
    }

    // Navigation backdrop (not visible on mobile)
    &::before {
      content: '';
      visibility: hidden;
      pointer-events: none;
      position: fixed;
      inset: 0;
      background-color: var(--sbb-navigation-backdrop-color);

      transition: {
        duration: var(--sbb-navigation-animation-duration);
        timing-function: var(--sbb-navigation-animation-easing);
        property: background-color, visibility;
      }
    }
  }

  @include sbb.mq($from: ultra) {
    --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-xxl);
    --sbb-navigation-columns: 1 / 6;
  }
}

:host(.sbb-navigation--closed) {
  width: 0;
  height: 0;
}

:host(.sbb-navigation--opened),
:host(.sbb-navigation--opening) {
  @include sbb.mq($from: large) {
    --sbb-navigation-backdrop-color: var(--sbb-color-black-alpha-70);

    &::before {
      visibility: visible;
      pointer-events: all;
    }
  }
}

:host([disable-animation]) {
  --sbb-navigation-animation-duration: 0s;
}

.sbb-navigation {
  position: absolute;
  visibility: hidden;
  opacity: 0;
  border: none;
  pointer-events: none;
  margin: 0;
  height: 100vh;
  color: var(--sbb-color-white-default);
  background-color: var(--sbb-color-midnight-default);
  padding: 0;
  width: auto;
  left: calc(var(--sbb-layout-base-offset-responsive) * -1);
  right: var(--sbb-navigation-right);
  grid-column: var(--sbb-navigation-columns);

  &::before {
    content: '';
    position: absolute;
    background-color: var(--sbb-color-midnight-default);
    height: 100vh;
    width: 100vw;
    right: 0;

    transition: {
      duration: var(--sbb-animation-duration-5x);
      delay: var(--sbb-animation-duration-2x);
      timing-function: ease-in-out;
      property: right;
    }

    :host(.sbb-navigation--has-navigation-section) & {
      right: -100vw;
      transition-delay: var(--sbb-animation-duration-1x);
    }
  }

  &[open] {
    visibility: visible;
    opacity: 1;
    pointer-events: all;

    animation: {
      name: open;
      duration: var(--sbb-navigation-animation-duration);
      timing-function: var(--sbb-navigation-animation-easing);
    }
  }

  :host(.sbb-navigation--closing) & {
    pointer-events: none;
    animation-name: close;
  }

  @include sbb.ifForcedColors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }
}

.sbb-navigation__wrapper {
  outline: none;
}

.sbb-navigation__header {
  position: absolute;
  display: flex;
  justify-content: end;
  padding: var(--sbb-spacing-responsive-xs);
  z-index: 1;
  width: 100%;
  transition: {
    duration: var(--sbb-animation-duration-4x);
    delay: var(--sbb-animation-duration-3x);
    timing-function: ease-in-out;
    property: width;
  }

  :host(.sbb-navigation--has-navigation-section) & {
    width: 100vw;
    transition-delay: var(--sbb-animation-duration-1x);
  }
}

.sbb-navigation__content {
  @include sbb.scrollbar-dark;

  display: flex;
  flex-direction: column;
  gap: var(--sbb-spacing-responsive-xxl);
  position: relative;
  height: 100vh;
  padding-inline: var(--sbb-navigation-padding-inline);
  padding-block-start: var(--sbb-navigation-padding-block-start);
  padding-block-end: var(--sbb-navigation-padding-block-end);
  overflow-y: auto;
  left: 0%;
  transition: {
    duration: var(--sbb-animation-duration-3x);
    timing-function: ease-in-out;
    property: left;
  }

  :host(.sbb-navigation--has-navigation-section) & {
    left: -100%;
  }

  @include sbb.mq($from: large) {
    :host(.sbb-navigation--has-navigation-section) & {
      left: 0%;
    }
  }
}

@keyframes open {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0%);
  }
}

@keyframes close {
  from {
    transform: translateX(0%);
  }

  to {
    transform: translateX(-100%);
  }
}
