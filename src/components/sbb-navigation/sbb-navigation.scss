// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --sbb-navigation-position: fixed;
  --sbb-navigation-animation-duration: var(--sbb-animation-duration-3x);
  --sbb-navigation-animation-easing: ease-out;
  --sbb-navigation-padding-inline: var(--sbb-layout-base-offset-responsive)
    var(--sbb-layout-base-offset-responsive);
  --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-l);
  --sbb-navigation-width: 100vw;
  --sbb-navigation-backdrop-color: transparent;

  @include mq($from: large) {
    --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-xl);
    --sbb-navigation-padding-inline: var(--sbb-layout-base-offset-responsive) 0;
    --sbb-navigation-position: absolute;
    --sbb-navigation-width: #{px-to-rem-build(496)};

    // Navigation backdrop (not visible on mobile)
    &::before {
      content: '';
      visibility: hidden;
      pointer-events: none;
      position: fixed;
      inset: 0;
      background-color: var(--sbb-navigation-backdrop-color);

      transition: {
        duration: var(--sbb-navigation-animation-duration);
        timing-function: var(--sbb-navigation-animation-easing);
        property: background-color, visibility;
      }
    }
  }

  @include mq($from: wide) {
    --sbb-navigation-width: #{px-to-rem-build(432)};
  }

  @include mq($from: ultra) {
    --sbb-navigation-padding-block-start: var(--sbb-spacing-responsive-xxl);
    --sbb-navigation-width: #{px-to-rem-build(473)};
  }

  position: var(--sbb-navigation-position);
  left: 0;
  top: 0;
  z-index: 10;
}

:host(.sbb-navigation--opened),
:host(.sbb-navigation--opening) {
  @include mq($from: large) {
    --sbb-navigation-backdrop-color: var(--sbb-color-black-alpha-70);

    &::before {
      visibility: visible;
      pointer-events: all;
    }
  }
}

.sbb-navigation {
  display: block;
  position: var(--sbb-navigation-position);
  visibility: hidden;
  opacity: 0;
  left: 0;
  top: 0;
  border: none;
  pointer-events: none;
  width: var(--sbb-navigation-width);
  height: 100vh;
  color: var(--sbb-color-white-default);
  background-color: var(--sbb-color-midnight-default);
  padding-inline: var(--sbb-navigation-padding-inline);
  padding-block-start: var(--sbb-navigation-padding-block-start);

  &[open] {
    visibility: visible;
    opacity: 1;
    pointer-events: all;

    animation: {
      name: open;
      duration: var(--sbb-navigation-animation-duration);
      timing-function: var(--sbb-navigation-animation-easing);
    }
  }

  :host(.sbb-navigation--closing) & {
    pointer-events: none;
    animation-name: close;
  }

  @include ifForcedColors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }
}

.sbb-dialog__close {
  position: absolute;
  top: var(--sbb-spacing-responsive-xs);
  right: var(--sbb-spacing-responsive-xs);
  z-index: 1;
}

::slotted(sbb-navigation-marker) {
  margin-block-end: var(--sbb-spacing-responsive-xxl);
}

@keyframes open {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0%);
  }
}

@keyframes close {
  from {
    transform: translateX(0%);
  }

  to {
    transform: translateX(-100%);
  }
}
