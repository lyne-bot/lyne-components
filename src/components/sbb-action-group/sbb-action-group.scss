// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

@mixin vertical-action-group {
  .action-group--align-start {
    --sbb-action-group-align-items: flex-start;
  }

  .action-group--align-center {
    --sbb-action-group-align-items: center;
  }

  .action-group--align-stretch {
    --sbb-action-group-align-items: stretch;
  }

  .action-group--align-end {
    --sbb-action-group-align-items: flex-end;
  }

  .action-group {
    align-items: var(--sbb-action-group-align-items);
  }
}

@mixin vertical-action-group-element-align-reset {
  --sbb-action-group-orientation: column;
  @include vertical-action-group;

  ::slotted([align-self='start']) {
    margin-inline-end: unset;
  }

  ::slotted([align-self='center']) {
    margin-inline: unset;
  }

  ::slotted([align-self='end']) {
    margin-inline-start: unset;
  }
}

:host {
  --sbb-action-group-orientation: row;
}

.action-group {
  display: flex;
  flex-direction: var(--sbb-action-group-orientation);
  gap: var(--sbb-spacing-fixed-4x);
}

:host([orientation='vertical']) {
  --sbb-action-group-orientation: column;
  @include vertical-action-group;
}

:host([orientation='horizontal']) {
  .action-group--align-start {
    --sbb-action-group-justify-content: flex-start;
  }

  .action-group--align-center {
    --sbb-action-group-justify-content: center;
  }

  .action-group--align-stretch {
    --sbb-action-group-justify-content: space-between;
  }

  .action-group--align-end {
    --sbb-action-group-justify-content: flex-end;
  }

  .action-group {
    justify-content: var(--sbb-action-group-justify-content);
  }

  ::slotted([align-self='start']) {
    margin-inline-end: auto;
  }

  ::slotted([align-self='center']) {
    margin-inline: auto;
  }

  ::slotted([align-self='end']) {
    margin-inline-start: auto;
  }
}

// horizontal-from overrides orientation vertical
:host([orientation='vertical'][horizontal-from='zero']),
:host([orientation='vertical'][horizontal-from='micro']),
:host([orientation='vertical'][horizontal-from='small']),
:host([orientation='vertical'][horizontal-from='medium']),
:host([orientation='vertical'][horizontal-from='large']),
:host([orientation='vertical'][horizontal-from='wide']),
:host([orientation='vertical'][horizontal-from='ultra']) {
  --sbb-action-group-orientation: row;

  .action-group--align-start {
    --sbb-action-group-justify-content: flex-start;
    --sbb-action-group-align-items: unset;
  }

  .action-group--align-center {
    --sbb-action-group-justify-content: center;
    --sbb-action-group-align-items: unset;
  }

  .action-group--align-stretch {
    --sbb-action-group-justify-content: space-between;
    --sbb-action-group-align-items: unset;
  }

  .action-group--align-end {
    --sbb-action-group-justify-content: flex-end;
    --sbb-action-group-align-items: unset;
  }

  .action-group {
    justify-content: var(--sbb-action-group-justify-content);
  }

  ::slotted([align-self='start']) {
    margin-inline-end: auto;
  }

  ::slotted([align-self='center']) {
    margin-inline: auto;
  }

  ::slotted([align-self='end']) {
    margin-inline-start: auto;
  }
}

// horizontal-from overrides orientation horizontal
:host([orientation='horizontal'][horizontal-from='zero']),
:host([orientation='vertical'][horizontal-from='zero']) {
  @include mq($to: zero) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='micro']),
:host([orientation='vertical'][horizontal-from='micro']) {
  @include mq($to: micro) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='small']),
:host([orientation='vertical'][horizontal-from='small']) {
  @include mq($to: small) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='medium']),
:host([orientation='vertical'][horizontal-from='medium']) {
  @include mq($to: medium) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='large']),
:host([orientation='vertical'][horizontal-from='large']) {
  @include mq($to: large) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='wide']),
:host([orientation='vertical'][horizontal-from='wide']) {
  @include mq($to: wide) {
    @include vertical-action-group-element-align-reset;
  }
}

:host([orientation='horizontal'][horizontal-from='ultra']),
:host([orientation='vertical'][horizontal-from='ultra']) {
  @include mq($to: ultra) {
    @include vertical-action-group-element-align-reset;
  }
}

::slotted(sbb-link) {
  white-space: nowrap;
}
