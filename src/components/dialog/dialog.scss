@use '../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  @include sbb.scrollbar-variables;

  --sbb-dialog-padding-inline: var(--sbb-spacing-fixed-5x);
  --sbb-dialog-color: var(--sbb-color-black);
  --sbb-dialog-background-color: var(--sbb-color-white);
  --sbb-dialog-width: 100%;
  --sbb-dialog-height: 100%;
  --sbb-dialog-max-width: 100%;
  --sbb-dialog-max-width-default: #{sbb.px-to-rem-build(892)};
  --sbb-dialog-max-height: 100%;
  --sbb-dialog-inset: 0 auto auto 0;
  --sbb-dialog-border-radius: var(--sbb-border-radius-8x);
  --sbb-dialog-padding-block: var(--sbb-spacing-responsive-s);
  --sbb-dialog-animation-duration: var(--sbb-animation-duration-6x);
  --sbb-dialog-animation-easing: ease;
  --sbb-dialog-pointer-events: none;
  --sbb-dialog-backdrop-visibility: hidden;
  --sbb-dialog-backdrop-pointer-events: none;
  --sbb-dialog-backdrop-color: transparent;
  --sbb-dialog-header-padding-block: var(--sbb-spacing-responsive-s) 0;
  --sbb-dialog-header-transition-duration: var(--sbb-animation-duration-6x);
  --sbb-dialog-header-margin-block-start: 0;
  --sbb-dialog-content-transition: transform var(--sbb-dialog-header-transition-duration)
    var(--sbb-dialog-animation-easing);
  --sbb-dialog-footer-border: var(--sbb-border-width-1x) solid var(--sbb-color-cloud);

  position: fixed;
  inset: var(--sbb-dialog-inset);
  z-index: var(--sbb-dialog-z-index, var(--sbb-overlay-default-z-index));

  @include sbb.mq($from: micro) {
    --sbb-dialog-padding-inline: var(--sbb-spacing-fixed-6x);
  }

  @include sbb.mq($from: small) {
    --sbb-dialog-padding-inline: var(--sbb-spacing-fixed-12x);
  }

  @include sbb.mq($from: medium) {
    --sbb-dialog-padding-inline: var(--sbb-spacing-responsive-s);
    --sbb-dialog-max-width: min(
      calc(100vw - var(--sbb-spacing-fixed-30x) * 2),
      var(--sbb-dialog-max-width-default)
    );
    --sbb-dialog-max-height: calc(100vh - var(--sbb-spacing-fixed-16x));
  }
}

:host(:is([data-state='opened'], [data-state='opening'])) {
  --sbb-dialog-pointer-events: all;

  @include sbb.mq($from: medium) {
    --sbb-dialog-backdrop-visibility: visible;
    --sbb-dialog-backdrop-pointer-events: all;
    --sbb-dialog-backdrop-color: var(--sbb-color-milk);
  }
}

:host([data-hide-header]) {
  --sbb-dialog-header-margin-block-start: calc(var(--sbb-dialog-header-height) * -1);

  // Hide transition
  --sbb-dialog-header-transition-timing: cubic-bezier(0.4, 0, 1, 1);
}

:host(:not([data-hide-header])) {
  // Show transition
  --sbb-dialog-header-transition-timing: cubic-bezier(0, 0, 0.2, 1);
}

:host([data-hide-header]) {
  // Hide transition
  --sbb-dialog-content-transition: transform var(--sbb-dialog-header-transition-duration)
    var(--sbb-dialog-animation-easing);
  --sbb-dialog-header-margin-block-start: calc(var(--sbb-dialog-header-height) * -1);
}

:host(:not([data-hide-header])) {
  // Show transition
  --sbb-dialog-content-transition: transform var(--sbb-dialog-header-transition-duration)
      var(--sbb-dialog-animation-easing),
    margin 0s var(--sbb-dialog-header-transition-duration);
}

:host([data-hide-header]) {
  // Hide transition
  --sbb-dialog-content-transition: transform var(--sbb-dialog-header-transition-duration)
    var(--sbb-dialog-animation-easing);
  --sbb-dialog-header-margin-block-start: calc(var(--sbb-dialog-header-height) * -1);
}

:host(:not([data-hide-header])) {
  // Show transition
  --sbb-dialog-content-transition: transform var(--sbb-dialog-header-transition-duration)
      var(--sbb-dialog-animation-easing),
    margin 0s var(--sbb-dialog-header-transition-duration);
}

:host([data-fullscreen]) {
  --sbb-dialog-backdrop-color: transparent;
  --sbb-dialog-max-width: 100%;
  --sbb-dialog-max-height: 100%;
}

:host([negative]) {
  @include sbb.scrollbar-variables--color-negative;

  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
  --sbb-dialog-color: var(--sbb-color-white);
  --sbb-dialog-background-color: var(--sbb-color-midnight);
  --sbb-dialog-footer-border: none;
}

:host([disable-animation]) {
  --sbb-dialog-animation-duration: 0.1ms;
}

:host([data-fullscreen]:not([negative])) {
  --sbb-dialog-background-color: var(--sbb-color-milk);
}

:host([data-overflows]:not([data-fullscreen])) {
  --sbb-dialog-header-padding-block: var(--sbb-spacing-responsive-s);
}

:host([data-overflows]:not([data-fullscreen], [negative])) {
  --sbb-dialog-footer-border: none;
}

:host(:not([data-state='closed'])) {
  --sbb-dialog-inset: 0;
}

.sbb-dialog__container {
  pointer-events: var(--sbb-dialog-pointer-events);
  display: flex;
  align-items: center;
  position: fixed;
  inset: var(--sbb-dialog-inset);

  // Dialog backdrop (not visible on mobile)
  &::before {
    content: '';
    visibility: var(--sbb-dialog-backdrop-visibility);
    pointer-events: var(--sbb-dialog-backdrop-pointer-events);
    position: fixed;
    inset: var(--sbb-dialog-inset);
    background-color: var(--sbb-dialog-backdrop-color);
    transition: {
      duration: var(--sbb-dialog-animation-duration);
      timing-function: var(--sbb-dialog-animation-easing);
      property: background-color, visibility;
    }
  }
}

.sbb-dialog {
  display: none;
  position: absolute;
  inset-inline: 0;
  margin: auto;
  padding: 0;
  border: none;
  width: var(--sbb-dialog-width);
  height: var(--sbb-dialog-height);
  max-width: var(--sbb-dialog-max-width);
  max-height: var(--sbb-dialog-max-height);
  overflow: auto;
  color: var(--sbb-dialog-color);
  background-color: var(--sbb-dialog-background-color);

  :host([data-fullscreen]) & {
    border-radius: 0;
  }

  :host([data-state]:not([data-state='closed'])) & {
    display: block;

    animation: {
      name: open;
      duration: var(--sbb-dialog-animation-duration);
      timing-function: ease;
    }
  }

  :host([data-state][data-state='closing']) & {
    pointer-events: none;
    animation-name: close;
  }

  @include sbb.if-forced-colors {
    outline: var(--sbb-border-width-1x) solid CanvasText;
  }

  @include sbb.mq($from: medium) {
    border-radius: var(--sbb-dialog-border-radius);
    overflow: hidden;

    :host(:not([data-fullscreen])) & {
      height: fit-content;
    }
  }
}

.sbb-dialog__wrapper {
  display: flex;
  flex-direction: column;
  width: var(--sbb-dialog-width);
  height: var(--sbb-dialog-height);
  max-width: var(--sbb-dialog-max-width);
  max-height: var(--sbb-dialog-max-height);
  outline: none;
  position: fixed;
  word-break: break-word;

  @include sbb.mq($from: medium) {
    position: sticky;
    inset-block-start: 0;
    height: auto;
  }
}

.sbb-dialog__header {
  display: flex;
  pointer-events: none;
  gap: var(--sbb-spacing-fixed-6x);
  align-items: start;
  justify-content: space-between;
  padding-inline: var(--sbb-dialog-padding-inline);
  padding-block: var(--sbb-dialog-header-padding-block);
  background-color: var(--sbb-dialog-background-color);
  z-index: var(--sbb-dialog-z-index, var(--sbb-overlay-default-z-index));

  * {
    pointer-events: all;
  }

  // Apply show/hide animation unless it has a visible focus within.
  &:not([data-has-visible-focus]:focus-within) {
    transform: translateY(var(--sbb-dialog-header-margin-block-start));
    transition: {
      property: box-shadow, transform;
      duration: var(--sbb-dialog-header-transition-duration);
      timing-function: var(--sbb-dialog-animation-easing);
    }
  }

  :host([data-fullscreen]) & {
    position: fixed;
    width: var(--sbb-dialog-width);
    background-color: transparent;
    padding-inline: var(--sbb-spacing-responsive-xs);
    padding-block-start: var(--sbb-spacing-responsive-xs);
  }

  &[data-has-visible-focus]:focus-within,
  :host([data-overflows]:not([data-fullscreen], [negative], [data-hide-header])) & {
    @include sbb.shadow-level-9-soft;
  }

  @include sbb.mq($from: medium) {
    border-radius: var(--sbb-dialog-border-radius) var(--sbb-dialog-border-radius) 0 0;
  }
}

.sbb-dialog__title {
  flex: 1;
  overflow: hidden;
  align-self: center;

  // Overwrite sbb-title default margin
  margin: 0;

  :host(:not([data-slot-names~='title'], [title-content])) & {
    display: none;
  }
}

.sbb-dialog__close {
  margin-inline-start: auto;
}

.sbb-dialog__content {
  @include sbb.scrollbar-rules;

  padding-inline: var(--sbb-dialog-padding-inline);
  padding-block: var(--sbb-dialog-padding-block);
  overflow: auto;
  transform: translateY(var(--sbb-dialog-header-margin-block-start));
  margin-block: 0 var(--sbb-dialog-header-margin-block-start);
  transition: var(--sbb-dialog-content-transition);
  z-index: -1;

  :host([data-fullscreen]) & {
    padding-block-start: var(--sbb-spacing-fixed-20x);
    padding-inline: var(--sbb-layout-base-offset-responsive);
    height: 100vh;
  }

  @include sbb.mq($from: medium) {
    transform: unset;
    margin-block: var(--sbb-dialog-header-margin-block-start) 0;
    transition: margin var(--sbb-dialog-header-transition-duration)
      var(--sbb-dialog-animation-easing);
  }
}

.sbb-dialog__footer {
  padding-inline: var(--sbb-dialog-padding-inline);
  padding-block: var(--sbb-spacing-responsive-s);
  margin-block-start: auto;
  background-color: var(--sbb-dialog-background-color);
  border-block-start: var(--sbb-dialog-footer-border);

  :host(:not([data-slot-names~='title'], [title-content])) &,
  :host(:not([data-slot-names~='action-group'])) & {
    display: none;
  }

  :host([data-overflows]:not([data-fullscreen], [negative])) & {
    @include sbb.shadow-level-9-soft;
  }
}

// It is necessary to use animations with keyframes instead of transitions in order not to alter
// the default `display: block` of the modal otherwise it causes several problems,
// especially for accessibility.
@keyframes open {
  from {
    opacity: 0;
    transform: translateY(var(--sbb-spacing-fixed-4x));
  }

  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes close {
  from {
    opacity: 1;
    transform: translateY(0%);
  }

  to {
    opacity: 0;
    transform: translateY(var(--sbb-spacing-fixed-4x));
  }
}
