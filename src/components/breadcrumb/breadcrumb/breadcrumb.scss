@use '../../core/styles' as sbb;

// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include sbb.host-component-properties;

:host {
  display: flex;

  --sbb-breadcrumb-color: var(--sbb-color-granite-default);
}

@include sbb.hover-mq($hover: true) {
  :host(:hover) {
    --sbb-breadcrumb-color: var(--sbb-color-charcoal-default);
  }
}

:host(:is(:active, [data-active])) {
  --sbb-breadcrumb-color: var(--sbb-color-anthracite-default);
}

// Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
:host(:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch'])) {
  @include sbb.focus-outline;

  border-radius: var(--sbb-border-radius-2x);
}

.sbb-breadcrumb {
  @include sbb.text-xs--regular;
  @include sbb.link-base;

  display: flex;
  cursor: pointer;
  gap: var(--sbb-spacing-fixed-2x);
  color: var(--sbb-breadcrumb-color);
  align-items: center;
  overflow: hidden;

  @include sbb.if-forced-colors {
    --sbb-breadcrumb-color: ButtonText;
  }
}

.sbb-breadcrumb__label {
  @include sbb.ellipsis;
}

.sbb-breadcrumb__icon,
::slotted(*) {
  slot[name='icon'] & {
    flex-shrink: 0;
  }
}
