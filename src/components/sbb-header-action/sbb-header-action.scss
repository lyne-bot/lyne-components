// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

// Displays the action item's text and corrects spacings.
$breakpoints: 'zero', 'micro', 'small', 'medium', 'large', 'wide', 'ultra';

:host {
  --sbb-header-action-text-display: none;
  --sbb-header-action-icon-margin: 0;
  --sbb-header-action-padding-inline: 0;
  --sbb-header-action-background-color: transparent;
  --sbb-header-action-min-height: var(--sbb-size-button-m-min-height);
  --sbb-header-action-min-width: var(--sbb-header-action-min-height);

  display: inline-block;
}

:host(:first-child) {
  margin-left: calc(var(--sbb-spacing-fixed-2x) * (-1));
  @include mq($to: small) {
    margin-left: calc(var(--sbb-spacing-fixed-3x) * (-1));
  }
}

@each $breakpoint in $breakpoints {
  :host([expand-from='#{$breakpoint}']) {
    @include mq($from: $breakpoint) {
      --sbb-header-action-text-display: block;
      --sbb-header-action-icon-margin: var(--sbb-spacing-fixed-2x);
      --sbb-header-action-padding-inline: var(--sbb-spacing-fixed-5x);
      --sbb-header-action-min-width: inherit;
    }
  }
  :host([expand-from='#{$breakpoint}']:first-child) {
    @include mq($from: $breakpoint) {
      margin-left: calc(var(--sbb-spacing-fixed-5x) * (-1));
    }
  }
}

:host(:hover) {
  --sbb-header-action-background-color: var(--sbb-color-milk-default);
}

:host(:active) {
  --sbb-header-action-background-color: var(--sbb-color-cloud-default);
}

.sbb-header-action {
  @include buttonReset;
  @include text-inherit;

  text-decoration: none;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  background-color: var(--sbb-header-action-background-color);
  min-height: var(--sbb-header-action-min-height);
  min-width: var(--sbb-header-action-min-width);
  padding-inline: var(--sbb-header-action-padding-inline);
  margin-inline: 0;
  border-radius: var(--sbb-border-radius-16x);
  transition-property: background-color;
  transition-duration: var(--sbb-animation-duration-6x);
  transition-timing-function: ease;
  cursor: pointer;

  &:focus-visible {
    @include focusOutline;
  }
}

.sbb-header-action__icon {
  // Set stroke on header icons
  --sbb-icon-svg-stroke-color: currentcolor;
  --sbb-icon-svg-stroke-width: 0.5px;

  line-height: 0;
  color: var(--sbb-color-black-default);
  margin-right: var(--sbb-header-action-icon-margin);
}

.sbb-header-action__text {
  @include text-xs--bold;

  display: var(--sbb-header-action-text-display);
  color: var(--sbb-color-black-default);
}

.sbb-header-action__opens-in-new-window {
  @include screenReaderOnly;
}
