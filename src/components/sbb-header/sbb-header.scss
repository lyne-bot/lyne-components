// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --logo-height: #{px-to-rem-build(16)};

  @include mq($from: medium) {
    --logo-height: #{px-to-rem-build(20)};
  }

  height: var(--sbb-header-height-override, var(--sbb-header-height));
}

.sbb-header {
  display: block;
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  padding: 0 var(--sbb-page-base-offset-responsive);
  background: var(--sbb-color-white-default);
  transition: box-shadow var(--sbb-animation-duration-4x) var(--sbb-animation-easing);
  z-index: 10;
}

.sbb-header--shadow {
  @include shadow-level-9-soft;
}

.sbb-header__wrapper {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 0;
  gap: calc(var(--sbb-spacing-fixed-5x) * 2);
  height: var(--sbb-header-height-override, var(--sbb-header-height));
  width: 100%;
}

// classes for alternative CSS used for custom sbb.ch story
:host(.sbb-header__alternative) {
  .sbb-header__wrapper {
    @include mq($to: medium) {
      gap: calc(
        var(--sbb-spacing-responsive-s) -
          (var(--sbb-size-button-m-min-height) - var(--sbb-size-icon-ui-small))
      );
    }
  }

  ::slotted(.sbb-header__spacer) {
    display: none;
    @include mq($from: large) {
      display: flex;
      flex-grow: 1;
    }
  }

  // TODO add more class based on breakpoints?
  ::slotted(.sbb-header__action-hidden-medium) {
    display: none;
    @include mq($from: medium) {
      display: block;
    }
  }
}

.sbb-header__logo {
  height: var(--logo-height);
  aspect-ratio: 19/2;
  margin-left: calc(var(--sbb-spacing-responsive-s) - var(--sbb-spacing-fixed-5x));
  @include mq($to: large) {
    margin-left: auto;
  }
}
