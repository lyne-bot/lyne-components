// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin
@include host-component-properties;

:host {
  --logo-width: #{px-to-rem-build(151.33)}; // fixme
  --logo-height: #{px-to-rem-build(16)}; // fixme

  @include mq($from: medium) {
    --logo-width: #{px-to-rem-build(189.17)}; // fixme
    --logo-height: #{px-to-rem-build(20)}; // fixme
  }

  display: block;
  height: var(--sbb-header-height-override, var(--sbb-header-height));
}

.sbb-header {
  display: block;
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  padding: 0 var(--sbb-page-base-offset-responsive);
  background: var(--sbb-color-white-default);
  transition: box-shadow var(--sbb-animation-duration-4x) var(--sbb-animation-easing);
}

.sbb-header--shadow {
  @include shadow-level-9-soft;
}

.sbb-header__wrapper {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  padding: 0;
  gap: calc(var(--sbb-spacing-fixed-5x) * 2);
  height: var(--sbb-header-height-override, var(--sbb-header-height));
  width: 100%;
}

.sbb-header__logo {
  width: var(--logo-width);
  height: var(--logo-height);
  margin-left: calc(var(--sbb-spacing-responsive-s) - var(--sbb-spacing-fixed-5x));
  @include mq($to: large) {
    margin-left: auto;
  }
}

::slotted(sbb-header-action:first-child) {
  @include mq($from: large) {
    margin-right: auto;
  }
}
