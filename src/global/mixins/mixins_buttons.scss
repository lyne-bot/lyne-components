// ----------------------------------------------------------------------------------------------------
// Buttons Mixins: To be re-used in sbb-button & sbb-link mainly
// ----------------------------------------------------------------------------------------------------

@mixin buttonReset {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  margin: 0;
  outline: none;
  border: none;
  border-radius: 0;
  padding: 0;
  background: none;
  -webkit-tap-highlight-color: transparent;
}

@mixin buttonVariables {
  --icon-size: var(--sbb-size-icon-ui-small);
  --line-through-height-disabled: var(--sbb-border-width-2x);

  // we use primary button styles as default values
  --color-active-background: var(--sbb-color-red150-default);
  --color-active-border: var(--sbb-color-red150-default);
  --color-active-text: var(--sbb-color-cloud-default);
  --color-default-background: var(--sbb-color-red-default);
  --color-default-border: var(--sbb-color-red-default);
  --color-default-text: var(--sbb-color-white-default);
  --color-disabled-background: var(--sbb-color-milk-default);
  --color-disabled-border: var(--sbb-color-milk-default);
  --color-disabled-text: var(--sbb-color-platinum-default);
  --color-hover-background: var(--sbb-color-red125-default);
  --color-hover-border: var(--sbb-color-red125-default);
  --color-hover-text: var(--sbb-color-milk-default);

  --border-width: var(--sbb-border-width-2x);
  --border-radius: var(--sbb-border-radius-16x);
  --min-height: var(--size-form-element-l-min-height);
  --transition-duration: var(--sbb-animation-duration-2x);
  --transition-easing-function: var(--sbb-animation-easing);
  --padding-block-min: var(--sbb-spacing-fixed-1x);
  --padding-inline: var(--sbb-spacing-fixed-8x);
  --gap: var(--sbb-spacing-fixed-2x);

  --shadow-1-default-color: var(--sbb-color-red-alpha-20);
  --shadow-1-default-blur: #{pxToRemBuild(16)};
  --shadow-1-default-offset-x: #{pxToRemBuild(0)};
  --shadow-1-default-offset-y: #{pxToRemBuild(2)};
  --shadow-1-default-spread: #{pxToRemBuild(0)};
  --shadow-2-default-color: var(--sbb-color-red125-alpha-20);
  --shadow-2-default-blur: #{pxToRemBuild(4)};
  --shadow-2-default-offset-x: #{pxToRemBuild(0)};
  --shadow-2-default-offset-y: #{pxToRemBuild(1)};
  --shadow-2-default-spread: #{pxToRemBuild(0)};

  --shadow-1-hover-color: var(--sbb-color-red-alpha-20);
  --shadow-1-hover-blur: #{pxToRemBuild(8)};
  --shadow-1-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-1-hover-offset-y: #{pxToRemBuild(1)};
  --shadow-1-hover-spread: #{pxToRemBuild(0)};
  --shadow-2-hover-color: var(--sbb-color-red125-alpha-20);
  --shadow-2-hover-blur: #{pxToRemBuild(2)};
  --shadow-2-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-2-hover-offset-y: #{pxToRemBuild(1)};
  --shadow-2-hover-spread: #{pxToRemBuild(0)};

  @include mq($from: medium) {
    --padding-inline: var(--sbb-spacing-fixed-10x);
  }
}

@mixin buttonPrimaryNegativeVariables {
  --color-active-background: var(--sbb-color-cloud-default);
  --color-active-border: var(--sbb-color-cloud-default);
  --color-active-text: var(--sbb-color-red150-default);
  --color-default-background: var(--sbb-color-white-default);
  --color-default-border: var(--sbb-color-white-default);
  --color-default-text: var(--sbb-color-red-default);
  --color-disabled-background: var(--sbb-color-black-alpha-10);
  --color-disabled-border: var(--sbb-color-black-alpha-0);
  --color-disabled-text: var(--sbb-color-white-alpha-60);
  --color-hover-background: var(--sbb-color-milk-default);
  --color-hover-border: var(--sbb-color-milk-default);
  --color-hover-text: var(--sbb-color-red125-default);

  --shadow-1-default-color: var(--sbb-color-smoke-alpha-20);
  --shadow-1-default-blur: #{pxToRemBuild(16)};
  --shadow-1-default-offset-x: #{pxToRemBuild(0)};
  --shadow-1-default-offset-y: #{pxToRemBuild(2)};
  --shadow-1-default-spread: #{pxToRemBuild(0)};
  --shadow-2-default-color: var(--sbb-color-metal-alpha-20);
  --shadow-2-default-blur: #{pxToRemBuild(4)};
  --shadow-2-default-offset-x: #{pxToRemBuild(0)};
  --shadow-2-default-offset-y: #{pxToRemBuild(1)};
  --shadow-2-default-spread: #{pxToRemBuild(0)};

  --shadow-1-hover-color: var(--sbb-color-smoke-alpha-20);
  --shadow-1-hover-blur: #{pxToRemBuild(16)};
  --shadow-1-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-1-hover-offset-y: #{pxToRemBuild(2)};
  --shadow-1-hover-spread: #{pxToRemBuild(0)};
  --shadow-2-hover-color: var(--sbb-color-metal-alpha-20);
  --shadow-2-hover-blur: #{pxToRemBuild(4)};
  --shadow-2-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-2-hover-offset-y: #{pxToRemBuild(1)};
  --shadow-2-hover-spread: #{pxToRemBuild(0)};
}

@mixin buttonSecondaryVariables {
  --color-active-background: var(--sbb-color-cloud-default);
  --color-active-border: var(--sbb-color-cloud-default);
  --color-active-text: var(--sbb-color-anthracite-default);
  --color-default-background: var(--sbb-color-white-default);
  --color-default-border: var(--sbb-color-cloud-default);
  --color-default-text: var(--sbb-color-charcoal-default);
  --color-disabled-background: var(--sbb-color-milk-default);
  --color-disabled-border: var(--sbb-color-milk-default);
  --color-disabled-text: var(--sbb-color-platinum-default);
  --color-hover-background: var(--sbb-color-milk-default);
  --color-hover-border: var(--sbb-color-cloud-default);
  --color-hover-text: var(--sbb-color-iron-default);

  --shadow-1-default-color: var(--sbb-color-platinum-alpha-20);
  --shadow-1-default-blur: #{pxToRemBuild(16)};
  --shadow-1-default-offset-x: #{pxToRemBuild(0)};
  --shadow-1-default-offset-y: #{pxToRemBuild(2)};
  --shadow-1-default-spread: #{pxToRemBuild(0)};
  --shadow-2-default-color: var(--sbb-color-cement-alpha-20);
  --shadow-2-default-blur: #{pxToRemBuild(4)};
  --shadow-2-default-offset-x: #{pxToRemBuild(0)};
  --shadow-2-default-offset-y: #{pxToRemBuild(1)};
  --shadow-2-default-spread: #{pxToRemBuild(0)};

  --shadow-1-hover-color: var(--sbb-color-platinum-alpha-20);
  --shadow-1-hover-blur: #{pxToRemBuild(16)};
  --shadow-1-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-1-hover-offset-y: #{pxToRemBuild(2)};
  --shadow-1-hover-spread: #{pxToRemBuild(0)};
  --shadow-2-hover-color: var(--sbb-color-cement-alpha-20);
  --shadow-2-hover-blur: #{pxToRemBuild(4)};
  --shadow-2-hover-offset-x: #{pxToRemBuild(0)};
  --shadow-2-hover-offset-y: #{pxToRemBuild(1)};
  --shadow-2-hover-spread: #{pxToRemBuild(0)};
}

@mixin buttonSecondaryNegativeVariables {
  --color-active-background: transparent;
  --color-active-border: var(--sbb-color-cloud-default);
  --color-active-text: var(--sbb-color-cloud-default);
  --color-default-background: transparent;
  --color-default-border: var(--sbb-color-white-default);
  --color-default-text: var(--sbb-color-white-default);
  --color-disabled-background: var(--sbb-color-black-alpha-10);
  --color-disabled-border: var(--sbb-color-black-alpha-0);
  --color-disabled-text: var(--sbb-color-aluminium-default);
  --color-hover-background: transparent;
  --color-hover-border: var(--sbb-color-milk-default);
  --color-hover-text: var(--sbb-color-milk-default);
}

@mixin buttonSizeMVariables {
  --border-width: var(--sbb-border-width-1x);
  --min-height: var(--size-form-element-m-min-height);
  --padding-inline: var(--sbb-spacing-fixed-5x);

  @include mq($from: medium) {
    --padding-inline: var(--sbb-spacing-fixed-8x);
  }
}

@mixin button {
  @include buttonReset;
  @include stretch(width);
  @include text-xs--bold;

  position: relative;
  display: flex;
  gap: var(--gap);
  align-items: center;
  justify-content: center;
  text-align: left;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-easing-function);
  transition-property: color;
  min-height: var(--min-height);
  border-radius: var(--border-radius);

  // The padding block value is only a minimal padding to preserve a padding if the content becomes larger than intended.
  // Positioning of the content is made by flexbox vertical centering.
  // The real padding displayed is larger than the defined value below.
  padding-block: var(--padding-block-min);
  padding-inline: var(--padding-inline);
  color: var(--color-default-text);
  -webkit-font-smoothing: antialiased;
  cursor: pointer;

  // Renders background and border in the background absolute to enable the hover animation
  &::before {
    position: absolute;
    content: '';
    inset: 0;
    border: var(--border-width) solid var(--color-default-border);
    border-radius: var(--border-radius);
    background-color: var(--color-default-background);

    transition-duration: var(--transition-duration);
    transition-timing-function: var(--transition-easing-function);
    transition-property: inset, background-color, border-color, box-shadow;

    @include ifForcedColors {
      border: #{pxToRemBuild(1)} solid windowText;
    }
  }

  &:focus-visible::before {
    @include focusOutline;
  }
}

@mixin buttonShadowNotDisabled {
  &::before {
    box-shadow: var(--shadow-1-default-offset-x) var(--shadow-1-default-offset-y)
        var(--shadow-1-default-blur) var(--shadow-1-default-spread) var(--shadow-1-default-color),
      var(--shadow-2-default-offset-x) var(--shadow-2-default-offset-y) var(--shadow-2-default-blur)
        var(--shadow-2-default-spread) var(--shadow-2-default-color);
  }
}

@mixin buttonShadowDisabled {
  &::before {
    box-shadow: none;
  }

  &:hover,
  &:focus {
    &:not(:disabled)::before {
      box-shadow: none;
    }
  }
}

@mixin buttonHover {
  --translate-y-content-hover: #{pxToRemBuild(-1)};

  color: var(--color-hover-text);

  &::before {
    inset: calc(var(--border-width) * -1);

    background-color: var(--color-hover-background);
    border-color: var(--color-hover-border);
    box-shadow: var(--shadow-1-hover-offset-x) var(--shadow-1-hover-offset-y)
        var(--shadow-1-hover-blur) var(--shadow-1-hover-spread) var(--shadow-1-hover-color),
      var(--shadow-2-hover-offset-x) var(--shadow-2-hover-offset-y) var(--shadow-2-hover-blur)
        var(--shadow-2-hover-spread) var(--shadow-2-hover-color);

    @include ifForcedColors {
      border-color: Highlight;
    }
  }
}

@mixin buttonActive {
  &::before {
    color: var(--color-active-text);
    background-color: var(--color-active-background);
    border-color: var(--color-active-border);
  }
}

@mixin buttonLabelTransition {
  transition: transform var(--transition-duration) var(--transition-easing-function);
  transform: translateY(var(--translate-y-content-hover, #{pxToRemBuild(0)}));
}

@mixin buttonLabel {
  display: block;
  @include ellipsis;
}

@mixin buttonIcon {
  display: block;
  width: var(--icon-size);
  height: var(--icon-size);
  color: currentColor;
}
