/* stylelint-disable plugin/stylelint-bem-namics */

@use 'sass:selector';

@mixin list-reset {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: inherit;
}

@mixin list {
  --sbb-list-vertical-gap: 0.75em;
  --sbb-list-padding-inline-start: 1.5em;
  --sbb-list-disc-dimension: 0.3em;

  &,
  ul,
  ol {
    margin: 0;
    padding: 0;
    padding-inline-start: var(--sbb-list-padding-inline-start);
    color: var(--sbb-color-iron-default);

    > li {
      + li {
        margin-block-start: var(--sbb-list-vertical-gap);
      }

      p {
        margin-block: 0;
      }

      // P has to be redefined to be more specific
      > :is(p, *) + * {
        margin-block-start: var(--sbb-spacing-responsive-xxxs);
      }
    }
  }

  :is(ul, ol),
  .sbb-step-list & {
    margin-block-start: var(--sbb-list-vertical-gap);
  }

  // Apply the following block only if ul tag is at selectors level.
  // This is done by selector.unify which takes care of correct selector concatenation
  @at-root #{selector.unify(&, 'ul')},
    & ul {
    list-style-type: none;

    > li {
      position: relative;

      &::before {
        content: '';
        position: absolute;
        display: block;
        inset-block-start: calc(0.5em + 0.5 * var(--sbb-list-disc-dimension));
        inset-inline-start: calc(
          -1 * (0.5 * var(--sbb-list-padding-inline-start) + 0.5 * var(--sbb-list-disc-dimension))
        );
        height: var(--sbb-list-disc-dimension);
        width: var(--sbb-list-disc-dimension);
        background-color: currentcolor;
        border-radius: 50%;
      }
    }
  }
}

@mixin step-list {
  --sbb-step-list-marker-dimensions: #{px-to-rem-build(34)};
  --sbb-step-list-padding-block: var(--sbb-spacing-fixed-3x);
  --sbb-step-list-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-step-list-marker-to-text-gap: var(--sbb-spacing-responsive-xxxs);

  // Additional space from overall li padding to the text because text
  // has to be centered to marker number.
  --sbb-step-list-text-to-marker-block-offset: calc(
    0.5 *
      (
        var(--sbb-step-list-marker-dimensions) - var(--sbb-typo-line-height-body-text) *
          var(--sbb-text-font-size)
      )
  );
  --sbb-step-list-vertical-gap: var(--sbb-spacing-fixed-1x);

  &:where(.sbb-text-s) {
    --sbb-step-list-padding-block: var(--sbb-spacing-fixed-4x);
  }

  &:where(.sbb-text-m, .sbb-text-l, .sbb-text-xl) {
    --sbb-step-list-padding-block: var(--sbb-spacing-fixed-5x);
  }

  &:where(.sbb-text-xl) {
    @include mq($from: medium) {
      --sbb-step-list-marker-dimensions: #{px-to-rem-build(41)};
    }
  }

  list-style: none;
  margin: 0;
  padding: 0;
  counter-reset: steps;

  /* stylelint-disable-next-line no-descending-specificity */
  > li {
    position: relative;
    counter-increment: steps;
    background-color: var(--sbb-color-milk-default);
    border-radius: var(--sbb-border-radius-4x);
    padding-block-start: calc(
      var(--sbb-step-list-padding-block) + var(--sbb-step-list-text-to-marker-block-offset)
    );
    padding-block-end: var(--sbb-step-list-padding-block);
    padding-inline-start: calc(
      var(--sbb-step-list-padding-inline) + var(--sbb-step-list-marker-dimensions) +
        var(--sbb-step-list-marker-to-text-gap)
    );
    padding-inline-end: var(--sbb-step-list-padding-inline);
    min-height: calc(
      var(--sbb-step-list-marker-dimensions) + 2 * var(--sbb-step-list-padding-block)
    );

    &::before {
      @include text-xxs--bold;

      content: counter(steps);
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      height: var(--sbb-step-list-marker-dimensions);
      width: var(--sbb-step-list-marker-dimensions);
      margin-block-start: calc(-1 * var(--sbb-step-list-text-to-marker-block-offset));
      inset-inline-start: var(--sbb-step-list-padding-inline);
      border: var(--sbb-border-width-1x) solid var(--sbb-color-cement-default);
      border-radius: 50%;
      color: var(--sbb-color-charcoal-default);
    }

    + li {
      margin-block-start: var(--sbb-step-list-vertical-gap);
    }

    p {
      margin-block: 0;
    }

    // P has to be redefined to be more specific
    > :is(p, *) + * {
      margin-block-start: var(--sbb-spacing-responsive-xxxs);
    }
  }
}
/* stylelint-enable plugin/stylelint-bem-namics */
