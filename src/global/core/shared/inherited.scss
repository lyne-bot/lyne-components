// Here we list all globally defined and inheritable properties. Each Lyne component
// inherits those through the CSS cascade by default as long as
// sbb-components.css is referenced in the <head> of the app/site which consumes
// the components

// CSS properties which can not travel the shadow boundary but need to be defined
// on each component are defined through %host-component-properties
// in global/core/components/utilities.scss which each component needs to @extend
@import './../../mixins.scss';

html {
  @include text;

  color: var(--sbb-font-default-color);
}

.sbb-text-bold {
  @include text--bold;
}

.sbb-text-xl {
  @include text-xl--regular;
}

.sbb-text-l {
  @include text-l--regular;
}

.sbb-text-m {
  @include text-m--regular;
}

.sbb-text-s {
  @include text-s--regular;
}

.sbb-text-xs {
  @include text-xs--regular;
}

.sbb-text-xxs {
  @include text-xxs--regular;
}

.sbb-list {
  margin: 0;
  padding-left: 19px;
  color: var(--sbb-color-iron-default);

  li {
    &::marker {
      position: relative;
    }

    + li {
      margin-top: var(--sbb-spacing-fixed-2x);
    }
  }
}

.sbb-list-steps {
  --sbb-list-steps-marker-dimensions: #{px-to-rem-build(34)};
  --sbb-list-steps-padding-block: var(--sbb-spacing-fixed-3x);
  --sbb-list-steps-padding-inline: var(--sbb-spacing-responsive-xxs);
  --sbb-list-steps-marker-to-text-gap: var(--sbb-spacing-responsive-xxxs);

  // Additional space from overall li padding to the text because text
  // has to be centered to marker number.
  --sbb-list-steps-text-to-marker-block-offset: calc(
    0.5 *
      (
        var(--sbb-list-steps-marker-dimensions) - var(--sbb-typo-line-height-body-text) *
          var(--sbb-text-font-size)
      )
  );
  --sbb-list-steps-vertical-gap: var(--sbb-spacing-fixed-1x);

  &:where(.sbb-text-s) {
    --sbb-list-steps-padding-block: var(--sbb-spacing-fixed-4x);
  }

  &:where(.sbb-text-m, .sbb-text-l, .sbb-text-xl) {
    --sbb-list-steps-padding-block: var(--sbb-spacing-fixed-5x);
  }

  &:where(.sbb-text-xl) {
    @include mq($from: medium) {
      --sbb-list-steps-marker-dimensions: #{px-to-rem-build(41)};
    }
  }

  list-style: none;
  margin: 0;
  padding: 0;
  counter-reset: steps;

  /* stylelint-disable-next-line no-descending-specificity */
  li {
    position: relative;
    counter-increment: steps;
    background-color: var(--sbb-color-milk-default);
    border-radius: var(--sbb-border-radius-4x);
    padding-block-start: calc(
      var(--sbb-list-steps-padding-block) + var(--sbb-list-steps-text-to-marker-block-offset)
    );
    padding-block-end: var(--sbb-list-steps-padding-block);
    padding-inline-start: calc(
      var(--sbb-list-steps-padding-inline) + var(--sbb-list-steps-marker-dimensions) +
        var(--sbb-list-steps-marker-to-text-gap)
    );
    padding-inline-end: var(--sbb-list-steps-padding-inline);
    min-height: calc(
      var(--sbb-list-steps-marker-dimensions) + 2 * var(--sbb-list-steps-padding-block)
    );

    &::before {
      @include text-xxs--bold;

      content: counter(steps);
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      height: var(--sbb-list-steps-marker-dimensions);
      width: var(--sbb-list-steps-marker-dimensions);
      margin-block-start: calc(-1 * var(--sbb-list-steps-text-to-marker-block-offset));
      inset-inline-start: var(--sbb-list-steps-padding-inline);
      border: var(--sbb-border-width-1x) solid var(--sbb-color-cement-default);
      border-radius: 50%;
      color: var(--sbb-color-charcoal-default);
    }

    + li {
      margin-block-start: var(--sbb-list-steps-vertical-gap);
    }

    p {
      margin-block: 0;
    }

    // P has to be redefined to be more specific
    > :is(p, *) + * {
      margin-block-start: var(--sbb-spacing-responsive-xxxs);
    }
  }
}
